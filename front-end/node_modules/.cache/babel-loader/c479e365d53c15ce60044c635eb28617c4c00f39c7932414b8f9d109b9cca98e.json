{"ast":null,"code":"import axios from 'axios';\nimport AlunoAdmin from './AlunoAdmin.vue';\nexport default {\n  name: 'PlanoTreinoAdmin',\n  components: {\n    AlunoAdmin\n  },\n  data() {\n    return {\n      URL: \"http://localhost:4000\",\n      planos: [],\n      planoId: 0,\n      nome: '',\n      valor: '',\n      editar: false,\n      tipomensal: false,\n      tipoavulso: false,\n      tipoplano: ''\n    };\n  },\n  methods: {\n    abrirRelatorio() {\n      const win = window.open('http://localhost:8080/relatorioplanos');\n      win.focus();\n    },\n    getAllPlanos() {\n      axios.get(`${this.URL}/planos`).then(response => {\n        this.planos = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    createPlano() {\n      if (this.tipomensal) this.tipoplano = \"Mensalidade\";\n      if (this.tipoavulso) this.tipoplano = \"Avulso\";\n      const plano = {\n        nome_plano: this.nome,\n        valor_plano: this.valor,\n        tipo_mensal: this.tipomensal,\n        tipo_avulso: this.tipoavulso,\n        tipo_plano: this.tipoplano\n      };\n      axios.post(`${this.URL}/planos`, plano).then(response => {\n        this.getAllPlanos();\n      });\n      window.location.reload(true);\n      this.limpaDadosFormulario();\n    },\n    carregarDadosPlano(id) {\n      this.editar = true;\n      axios.get(`${this.URL}/planos/getone/` + id).then(response => {\n        const plano = response.data[0];\n        this.planoId = plano.id_plano;\n        this.nome = plano.nome_plano;\n        this.valor = plano.valor_plano;\n        this.tipomensal = plano.tipo_mensal;\n        this.tipoavulso = plano.tipo_avulso;\n      });\n    },\n    salvarDados() {\n      if (this.tipomensal) this.tipoplano = \"Mensalidade\";\n      if (this.tipoavulso) this.tipoplano = \"Avulso\";\n      const plano = {\n        nome_plano: this.nome,\n        valor_plano: this.valor,\n        tipo_mensal: this.tipomensal,\n        tipo_avulso: this.tipoavulso,\n        tipo_plano: this.tipoplano\n      };\n      console.log(plano);\n      axios.put(`${this.URL}/planos/${this.planoId}`, plano).then(response => {\n        this.getAllPlanos();\n      });\n      window.location.reload(true);\n      this.limpaDadosFormulario();\n    },\n    deletePlano(id) {\n      axios.delete(this.URL + \"/planos/delete/\" + id).then(() => {\n        this.getAllPlanos();\n      });\n    },\n    limpaDadosFormulario() {\n      this.planoId = 0;\n      this.nome = '';\n      this.valor = '';\n      this.editar = false;\n      this.tipomensal = false;\n      this.tipoavulso = false;\n    },\n    ajuda() {\n      this.$swal.fire({\n        title: '<h2>Gerenciamento de Planos</h2>',\n        icon: 'info',\n        html: '<h3 style=\"color:#4da6ff\">Cadastrar novo plano</h3>' + '<p><b>1- </b>Inserir todos os dados: nome do plano, valor do plano e selecionar o tipo se é mensalidade ou avulso.' + '<p><b>2- </b>Após todos dados inseridos clicar no botão \"+SALVAR\" para salvar cadastro ou \"CANCELAR\" ' + 'para limpar formulário.' + '<h3 style=\"color:#39ac6b\">Editar um plano</h3>' + '<p><b>1- </b>Na lista abaixo do formulário clicar no botão \"Editar\" na mesma linha correspondente ' + 'ao plano que deseja alterar o(s) dado(s).' + '<p><b>2- </b>Após clicar no botão \"Editar\" os dados do respectivo plano irá carregar no formulário acima, ' + 'após isso pode alterar o(s) dado(s) que deseja do mesmo.' + '<p><b>3- </b>Após editar, para salvar a(s) alteração(ôs) clicar no botão \"+EDITAR\" (azul) ou \"CANCELAR\" (vermelho) para cancelar alteração(ôs).' + '<h3 style=\"color:#ff6666\">Excluir um plano</h3>' + '<b>IMPORTANTE </b><p>Para excluir um plano, nenhum aluno deve estar usando o mesmo.</p>' + '<p><b>1- </b>Na lista abaixo do formulário, clicar no botão \"Excluir\" na mesma linha correspondente ' + 'ao plano que deseja fazer a exclusão.' + '<p><b>2- </b>Após clicar no botão \"Excluir\" o plano será excluido permanentemente. Para recuperar o mesmo, deve ser ' + 'feito o passo a passo de \"Cadastrar novo plano\".'\n      });\n    }\n  },\n  mounted() {\n    this.getAllPlanos();\n  }\n};","map":{"version":3,"names":["axios","AlunoAdmin","name","components","data","URL","planos","planoId","nome","valor","editar","tipomensal","tipoavulso","tipoplano","methods","abrirRelatorio","win","window","open","focus","getAllPlanos","get","then","response","catch","error","console","log","createPlano","plano","nome_plano","valor_plano","tipo_mensal","tipo_avulso","tipo_plano","post","location","reload","limpaDadosFormulario","carregarDadosPlano","id","id_plano","salvarDados","put","deletePlano","delete","ajuda","$swal","fire","title","icon","html","mounted"],"sources":["C:\\Users\\Pedro Uema\\Desktop\\thaiweb\\front-end\\src\\components\\admin\\PlanoTreinoAdmin.vue"],"sourcesContent":["<template>\r\n    <div class=\"plano-treino-admin\">\r\n        <h3>Gerenciamento de Planos</h3>\r\n        <button type=\"button\" id=\"btnAjuda\" class=\"btn btn-primary btn-floating\" @click=\"ajuda()\">\r\n            <i class=\"fa fa-question-circle\"></i>\r\n        </button>\r\n        <form class=\"row g-3\">\r\n            <div class=\"col-md-6\">\r\n                <label for=\"inputEmail4\" class=\"form-label\">Nome do Plano</label>\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"ex: Grupo 3x, 18:00\" v-model=\"nome\">\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <label for=\"inputZip\" class=\"form-label\">Valor do Plano</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"inputZip\" placeholder=\"ex: R$99.99\" v-model=\"valor\">\r\n            </div>\r\n        </form>\r\n        <br>\r\n        <label for=\"inputZip\" class=\"form-label\">Selecione o tipo de plano: </label><br>\r\n        <div class=\"form-check form-check-inline\">\r\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" value=\"option1\" v-model=\"tipomensal\"/>\r\n            <label class=\"form-check-label\" for=\"inlineCheckbox1\">Mensalidade</label>\r\n        </div>\r\n        <div class=\"form-check form-check-inline\">\r\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" value=\"option2\" v-model=\"tipoavulso\"/>\r\n            <label class=\"form-check-label\" for=\"inlineCheckbox2\">Avulso</label>\r\n        </div>\r\n        <br>\r\n        <br>\r\n        <div class=\"col-12\">\r\n            <button type=\"button\" id=\"button\" class=\"btn btn-primary\" @click=\"createPlano()\" v-show=\"!editar\">+ SALVAR</button>\r\n            <button type=\"button\" id=\"button\" class=\"btn btn-primary\" @click=\"salvarDados()\" v-show=\"editar\">+ EDITAR</button>\r\n            <button  type=\"button\" class=\"btn btn-danger\" @click=\"limpaDadosFormulario()\" >CANCELAR</button>\r\n        </div>\r\n    </div>\r\n    <br/>\r\n    <hr/>\r\n    <div class=\"plano-treino-table\">\r\n        <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n            <button class=\"btn btn-dark\" type=\"button\" v-on:click.prevent=\"abrirRelatorio()\"><i class=\"fa fa-print\"> </i> Imprimir</button>\r\n        </div>\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Nome do Plano</th>\r\n                    <th scope=\"col\">Tipo</th>\r\n                    <th scope=\"col\">Valor do Plano</th>\r\n                    <th scope=\"col\">Ações</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody class=\"table-group-divider\">\r\n                <tr v-for=\"plano in planos\" :key=\"plano.id_plano\">\r\n                    <th scope=\"row\">{{ plano.nome_plano }}</th>\r\n                    <td>{{ plano.tipo_plano }}</td>\r\n                    <td>R$ {{ plano.valor_plano.toFixed(2) }}</td>\r\n                    <td>\r\n                        <button type=\"button\" id=\"btnAcoes\" class=\"btn btn-success\" @click=\"carregarDadosPlano(plano.id_plano)\">\r\n                            <i class=\"fa fa-pencil\"> </i>\r\n                             Editar\r\n                        </button>\r\n                        <button type=\"button\" id=\"btnAcoes\" class=\"btn btn-danger\" @click=\"deletePlano(plano.id_plano)\">\r\n                            <i class=\"fa fa-trash\"> </i>\r\n                             Excluir\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport AlunoAdmin from './AlunoAdmin.vue'\r\n\r\nexport default {\r\n    name: 'PlanoTreinoAdmin',\r\n    components: { AlunoAdmin },\r\n    data() {\r\n        return{\r\n            URL: \"http://localhost:4000\",\r\n            planos: [],\r\n            planoId: 0,\r\n            nome: '',\r\n            valor: '',\r\n            editar: false,\r\n            tipomensal: false,\r\n            tipoavulso: false,\r\n            tipoplano: ''\r\n        }\r\n    },\r\n    methods: {\r\n        abrirRelatorio(){\r\n            const win = window.open('http://localhost:8080/relatorioplanos')\r\n            win.focus()\r\n        },\r\n        getAllPlanos() {\r\n            axios.get(`${this.URL}/planos`).then(response => {\r\n                this.planos = response.data\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        },\r\n        createPlano(){\r\n            if(this.tipomensal)\r\n                this.tipoplano = \"Mensalidade\"\r\n            if(this.tipoavulso)\r\n                this.tipoplano = \"Avulso\"\r\n            const plano = {\r\n                nome_plano: this.nome,\r\n                valor_plano: this.valor,\r\n                tipo_mensal: this.tipomensal,\r\n                tipo_avulso: this.tipoavulso,\r\n                tipo_plano: this.tipoplano\r\n            }\r\n            axios.post(`${this.URL}/planos`, plano).then(response => {\r\n                this.getAllPlanos();\r\n            })\r\n            window.location.reload(true)\r\n            this.limpaDadosFormulario()\r\n        },\r\n        carregarDadosPlano(id){\r\n            this.editar = true;\r\n            axios.get(`${this.URL}/planos/getone/`+id).then(response => {\r\n                const plano = response.data[0]\r\n                this.planoId = plano.id_plano\r\n                this.nome = plano.nome_plano\r\n                this.valor = plano.valor_plano\r\n                this.tipomensal = plano.tipo_mensal\r\n                this.tipoavulso = plano.tipo_avulso\r\n            })\r\n        },\r\n        salvarDados(){\r\n            if(this.tipomensal)\r\n                this.tipoplano = \"Mensalidade\"\r\n            if(this.tipoavulso)\r\n                this.tipoplano = \"Avulso\"\r\n            const plano = {\r\n                nome_plano: this.nome,\r\n                valor_plano: this.valor,\r\n                tipo_mensal: this.tipomensal,\r\n                tipo_avulso: this.tipoavulso,\r\n                tipo_plano: this.tipoplano\r\n            }\r\n            console.log(plano);\r\n            axios.put(`${this.URL}/planos/${this.planoId}`, plano).then(response => {\r\n                this.getAllPlanos();\r\n            });\r\n            window.location.reload(true)\r\n            this.limpaDadosFormulario();\r\n        },\r\n        deletePlano(id) {\r\n            axios.delete(this.URL+\"/planos/delete/\"+id).then(()=>{\r\n                this.getAllPlanos()\r\n            })\r\n            \r\n        },\r\n        limpaDadosFormulario(){\r\n            this.planoId = 0;\r\n            this.nome = '';\r\n            this.valor = '';\r\n            this.editar = false;\r\n            this.tipomensal = false;\r\n            this.tipoavulso = false;\r\n        },\r\n        ajuda(){\r\n            this.$swal.fire({\r\n                title: '<h2>Gerenciamento de Planos</h2>',\r\n                icon: 'info',\r\n                html:\r\n                    '<h3 style=\"color:#4da6ff\">Cadastrar novo plano</h3>'+\r\n                    '<p><b>1- </b>Inserir todos os dados: nome do plano, valor do plano e selecionar o tipo se é mensalidade ou avulso.'+\r\n                    '<p><b>2- </b>Após todos dados inseridos clicar no botão \"+SALVAR\" para salvar cadastro ou \"CANCELAR\" '+\r\n                    'para limpar formulário.'+\r\n                    '<h3 style=\"color:#39ac6b\">Editar um plano</h3>'+\r\n                    '<p><b>1- </b>Na lista abaixo do formulário clicar no botão \"Editar\" na mesma linha correspondente '+\r\n                    'ao plano que deseja alterar o(s) dado(s).'+\r\n                    '<p><b>2- </b>Após clicar no botão \"Editar\" os dados do respectivo plano irá carregar no formulário acima, '+\r\n                    'após isso pode alterar o(s) dado(s) que deseja do mesmo.'+\r\n                    '<p><b>3- </b>Após editar, para salvar a(s) alteração(ôs) clicar no botão \"+EDITAR\" (azul) ou \"CANCELAR\" (vermelho) para cancelar alteração(ôs).'+\r\n                    '<h3 style=\"color:#ff6666\">Excluir um plano</h3>'+\r\n                    '<b>IMPORTANTE </b><p>Para excluir um plano, nenhum aluno deve estar usando o mesmo.</p>' +\r\n                    '<p><b>1- </b>Na lista abaixo do formulário, clicar no botão \"Excluir\" na mesma linha correspondente '+\r\n                    'ao plano que deseja fazer a exclusão.'+\r\n                    '<p><b>2- </b>Após clicar no botão \"Excluir\" o plano será excluido permanentemente. Para recuperar o mesmo, deve ser '+\r\n                    'feito o passo a passo de \"Cadastrar novo plano\".'\r\n            })\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getAllPlanos();\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}