{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'MensalidadesAtrasadas',\n  data() {\n    return {\n      URL: \"http://localhost:4000\",\n      alunos: [],\n      recebidas: [],\n      nome: '',\n      mesAtual: '',\n      diaAtual: '',\n      anoAtual: ''\n    };\n  },\n  methods: {\n    //BUSCA POR NOME (OBS: TEM QUE VERIFICAR SE É PLANO DE MENSALIDADE)\n\n    //RETORNAR TODOS ALUNOS TIPO PLANO MENSALIDADE\n    getAllAlunosMensalidade() {\n      axios.get(`${this.URL}/alunosmensalidade`).then(response => {\n        this.alunos = response.data;\n        console.log(response);\n      });\n      //this.limpaDados()\n    },\n\n    verificaAtraso() {\n      for (let i = 0; i < this.alunos.length; i++) {}\n    },\n    pegarDataAtual() {\n      const data = new Date();\n      const dia = String(data.getDate()).padStart(2, '0');\n      const mes = String(data.getMonth() + 1).padStart(2, '0');\n      const ano = String(data.getFullYear());\n      this.mesAtual = mes;\n      this.diaAtual = dia;\n      this.anoAtual = ano;\n    }\n  },\n  mounted() {\n    this.getAllAlunosMensalidade();\n    this.pegarDataAtual();\n  }\n};","map":{"version":3,"names":["axios","name","data","URL","alunos","recebidas","nome","mesAtual","diaAtual","anoAtual","methods","getAllAlunosMensalidade","get","then","response","console","log","verificaAtraso","i","length","pegarDataAtual","Date","dia","String","getDate","padStart","mes","getMonth","ano","getFullYear","mounted"],"sources":["C:\\Users\\Barbára Tagliari\\Desktop\\thaiweb\\front-end\\src\\components\\financeiro\\mensalidadesAtrasadas.vue"],"sourcesContent":["<template>\r\n    <h3>Mensalidades em atraso</h3>\r\n    <form class=\"form-inline\">\r\n        <h5>Busque pelo o nome do aluno que deseja verificar!</h5>\r\n        <div class=\"form-group mb-2\">\r\n            <label for=\"inputZip\" class=\"form-label\">Digite o nome do aluno</label >\r\n            <input type=\"text\" class=\"form-control\" v-model=\"nome\">\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-primary\" @click=\"buscar()\">\r\n            <i class=\"fa fa-search\"></i> BUSCAR</button>\r\n    </form>\r\n    <br>\r\n    <div class=\"alunos-table\">\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Nome</th>\r\n                    <th scope=\"col\">CPF</th>\r\n                    <th scope=\"col\">Plano</th>\r\n                    <th scope=\"col\">Valor Plano</th>\r\n                    <th scope=\"col\">Dia Vencimento</th>\r\n                    <th id=\"mesAtraso\" scope=\"col\">Mês em Atraso</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody class=\"table-group-divider\">\r\n                <tr v-for=\"aluno in alunos\" :key=\"aluno.id_aluno\">\r\n                    \r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    name: 'MensalidadesAtrasadas',\r\n    data(){\r\n        return {\r\n            URL: \"http://localhost:4000\",\r\n            alunos: [],\r\n            recebidas: [],\r\n            nome: '',\r\n            mesAtual: '',\r\n            diaAtual: '',\r\n            anoAtual: '',\r\n        }\r\n    },\r\n    methods: {\r\n        //BUSCA POR NOME (OBS: TEM QUE VERIFICAR SE É PLANO DE MENSALIDADE)\r\n        \r\n        //RETORNAR TODOS ALUNOS TIPO PLANO MENSALIDADE\r\n        getAllAlunosMensalidade() {\r\n            axios.get(`${this.URL}/alunosmensalidade`).then(response => {\r\n                this.alunos = response.data\r\n                console.log(response);\r\n            })\r\n            //this.limpaDados()\r\n        },\r\n        verificaAtraso() {\r\n            for(let i = 0; i < this.alunos.length; i++)\r\n            {\r\n                \r\n            }\r\n        },  \r\n        pegarDataAtual() {\r\n            const data = new Date()\r\n            const dia = String(data.getDate()).padStart(2, '0')\r\n            const mes = String(data.getMonth() + 1).padStart(2, '0')\r\n            const ano = String(data.getFullYear())\r\n            this.mesAtual = mes\r\n            this.diaAtual = dia\r\n            this.anoAtual = ano\r\n        },\r\n    },\r\n    mounted() {\r\n        this.getAllAlunosMensalidade();\r\n        this.pegarDataAtual();\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n    th#mesAtraso{\r\n        background-color: rgb(192, 56, 56);\r\n    }\r\n</style>"],"mappings":"AAkCA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACXC,IAAI,EAAE,uBAAuB;EAC7BC,IAAIA,CAAA,EAAE;IACF,OAAO;MACHC,GAAG,EAAE,uBAAuB;MAC5BC,MAAM,EAAE,EAAE;MACVC,SAAS,EAAE,EAAE;MACbC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACd;EACJ,CAAC;EACDC,OAAO,EAAE;IACL;;IAEA;IACAC,uBAAuBA,CAAA,EAAG;MACtBX,KAAK,CAACY,GAAG,CAAE,GAAE,IAAI,CAACT,GAAI,oBAAmB,CAAC,CAACU,IAAI,CAACC,QAAO,IAAK;QACxD,IAAI,CAACV,MAAK,GAAIU,QAAQ,CAACZ,IAAG;QAC1Ba,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACzB,CAAC;MACD;IACJ,CAAC;;IACDG,cAAcA,CAAA,EAAG;MACb,KAAI,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAACd,MAAM,CAACe,MAAM,EAAED,CAAC,EAAE,EAC1C,CAEA;IACJ,CAAC;IACDE,cAAcA,CAAA,EAAG;MACb,MAAMlB,IAAG,GAAI,IAAImB,IAAI,EAAC;MACtB,MAAMC,GAAE,GAAIC,MAAM,CAACrB,IAAI,CAACsB,OAAO,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG;MAClD,MAAMC,GAAE,GAAIH,MAAM,CAACrB,IAAI,CAACyB,QAAQ,EAAC,GAAI,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG;MACvD,MAAMG,GAAE,GAAIL,MAAM,CAACrB,IAAI,CAAC2B,WAAW,EAAE;MACrC,IAAI,CAACtB,QAAO,GAAImB,GAAE;MAClB,IAAI,CAAClB,QAAO,GAAIc,GAAE;MAClB,IAAI,CAACb,QAAO,GAAImB,GAAE;IACtB;EACJ,CAAC;EACDE,OAAOA,CAAA,EAAG;IACN,IAAI,CAACnB,uBAAuB,EAAE;IAC9B,IAAI,CAACS,cAAc,EAAE;EACzB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}