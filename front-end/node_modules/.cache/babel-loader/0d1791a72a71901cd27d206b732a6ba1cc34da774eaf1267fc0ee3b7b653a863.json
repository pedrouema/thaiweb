{"ast":null,"code":"import axios from 'axios';\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\npdfMake.vfs = pdfFonts.pdfMake.vfs;\nexport default {\n  name: 'AlunoAdmin',\n  data() {\n    return {\n      URL: \"http://localhost:4000\",\n      alunos: [],\n      planos: [],\n      turmas: [],\n      alunoId: 0,\n      nome: '',\n      cpf: '',\n      dataNasc: '',\n      plano: 0,\n      turma: 0,\n      diaPag: '',\n      editar: false\n    };\n  },\n  methods: {\n    gerarPDF() {\n      var docDefinition = {\n        content: [{\n          layout: 'lightHorizontalLines',\n          // optional\n          table: {\n            // headers are automatically repeated if the table spans over multiple pages\n            // you can declare how many rows should be treated as headers\n            headerRows: 1,\n            widths: ['*', 'auto', 100, '*'],\n            body: this.alunos.nome_aluno\n          }\n        }]\n      };\n      pdfMake.createPdf(docDefinition).open();\n    },\n    getAllAlunos() {\n      axios.get(`${this.URL}/alunos`).then(response => {\n        this.alunos = response.data;\n      });\n    },\n    createAluno() {\n      const aluno = {\n        nome_aluno: this.nome,\n        cpf_aluno: this.cpf,\n        datanasc_aluno: this.dataNasc,\n        id_plano: this.plano,\n        id_turma: this.turma,\n        diapag_aluno: this.diaPag\n      };\n      console.log(aluno);\n      axios.post(`${this.URL}/alunos`, aluno).then(response => {\n        this.getAllAlunos();\n      });\n      this.limpaDadosFormulario();\n    },\n    carregarDadosAluno(id) {\n      this.editar = true;\n      axios.get(`${this.URL}/alunos/getone/` + id).then(response => {\n        const aluno = response.data[0];\n        this.alunoId = aluno.id_aluno;\n        this.nome = aluno.nome_aluno;\n        this.cpf = aluno.cpf_aluno;\n        this.dataNasc = aluno.datanasc_formatada;\n        this.plano = aluno.id_plano;\n        this.turma = aluno.id_turma;\n        this.diaPag = aluno.diapag_formatada;\n      });\n    },\n    salvarDados() {\n      const aluno = {\n        nome_aluno: this.nome,\n        cpf_aluno: this.cpf,\n        datanasc_aluno: this.dataNasc,\n        id_plano: this.plano,\n        id_turma: this.turma,\n        diapag_aluno: this.diaPag\n      };\n      console.log(aluno);\n      axios.put(`${this.URL}/alunos/${this.alunoId}`, aluno).then(response => {\n        this.getAllAlunos();\n      });\n      this.limpaDadosFormulario();\n    },\n    deleteAluno(id) {\n      axios.delete(this.URL + \"/alunos/delete/\" + id).then(() => {\n        this.getAllAlunos();\n      });\n    },\n    getAllPlanosOptions() {\n      axios.get(`${this.URL}/planos/options`).then(response => {\n        this.planos = response.data;\n      });\n    },\n    getAllTurmasOptions() {\n      axios.get(`${this.URL}/turmas/options`).then(response => {\n        this.turmas = response.data;\n      });\n    },\n    limpaDadosFormulario() {\n      this.alunoId = 0;\n      this.nome = '';\n      this.cpf = '';\n      this.dataNasc = '';\n      this.plano = 0;\n      this.turma = 0;\n      this.diaPag = '';\n      this.editar = false;\n    },\n    isCPF(cpf) {\n      cpf = cpf.replace(/\\.|-/g, \"\");\n      soma = 0;\n      console.log(cpf);\n      return true;\n    }\n  },\n  mounted() {\n    this.getAllAlunos();\n    this.getAllPlanosOptions();\n    this.getAllTurmasOptions();\n  }\n};","map":{"version":3,"names":["axios","pdfMake","pdfFonts","vfs","name","data","URL","alunos","planos","turmas","alunoId","nome","cpf","dataNasc","plano","turma","diaPag","editar","methods","gerarPDF","docDefinition","content","layout","table","headerRows","widths","body","nome_aluno","createPdf","open","getAllAlunos","get","then","response","createAluno","aluno","cpf_aluno","datanasc_aluno","id_plano","id_turma","diapag_aluno","console","log","post","limpaDadosFormulario","carregarDadosAluno","id","id_aluno","datanasc_formatada","diapag_formatada","salvarDados","put","deleteAluno","delete","getAllPlanosOptions","getAllTurmasOptions","isCPF","replace","soma","mounted"],"sources":["C:\\Users\\Pedro Uema\\Desktop\\thaiweb\\front-end\\src\\components\\admin\\AlunoAdmin.vue"],"sourcesContent":["<template>\r\n    <div class=\"aluno-admin\">\r\n        <h3>Gerenciamento de Alunos</h3>\r\n        <form class=\"row g-3\">\r\n            <div class=\"col-md-6\">\r\n                <label for=\"inputEmail4\" class=\"form-label\">Nome do Aluno</label>\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Nome do Aluno\" v-model=\"nome\">\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <label for=\"inputZip\" class=\"form-label\">CPF do Aluno</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"inputZip\" placeholder=\"123.456.789-10\" v-model=\"cpf\" v-mask=\"'###.###.###-##'\">\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <label for=\"inputZip\" class=\"form-label\">Data de Nascimento</label >\r\n                <input type=\"date\" class=\"form-control\" id=\"inputZip\" v-model=\"dataNasc\">\r\n            </div>\r\n            <div class=\"col-md-4\" >\r\n                <label for=\"inputState\" class=\"form-label\">Plano</label>\r\n                <select class=\"form-select\" v-model=\"plano\">\r\n                    <option value=\"\">Selecione o Plano</option>\r\n                    <option v-for=\"plano in planos\" :key=\"plano.id_plano\" v-bind:value=\"plano.id_plano\">\r\n                        {{ plano.nome_plano }}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <label for=\"inputState\" class=\"form-label\">Turma</label>\r\n                <select id=\"inputState\" class=\"form-select\" v-model=\"turma\">\r\n                    <option value=\"\">Selecione a Turma</option>\r\n                    <option v-for=\"turma in turmas\" :key=\"turma.id_turma\" v-bind:value=\"turma.id_turma\">\r\n                        {{ turma.nome_turma }}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <label for=\"inputZip\" class=\"form-label\">Data de inicio</label >\r\n                <input type=\"date\" class=\"form-control\" id=\"inputZip\" v-model=\"diaPag\">\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <button type=\"button\" class=\"btn btn-primary\" @click=\"createAluno()\" v-show=\"!editar\">+ SALVAR</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" @click=\"salvarDados()\" v-show=\"editar\">+ EDITAR</button>\r\n                <button  type=\"button\" class=\"btn btn-danger\" @click=\"limpaDadosFormulario()\" >CANCELAR</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <br/>\r\n    <br>\r\n        <div class=\"alunos-table\">\r\n            <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n                <button class=\"btn btn-dark\" type=\"button\" v-on:click.prevent=\"gerarPDF\"><i class=\"fa fa-print\"> </i> Imprimir</button>\r\n            </div>\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Nome</th>\r\n                    <th scope=\"col\">CPF</th>\r\n                    <th scope=\"col\">Data Nascimento</th>\r\n                    <th scope=\"col\">Plano</th>\r\n                    <th scope=\"col\">Turma</th>\r\n                    <th scope=\"col\">Data Inicio</th>\r\n                    <th scope=\"col\">Ações</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody class=\"table-group-divider\">\r\n                <tr v-for=\"aluno in alunos\" :key=\"aluno.id_aluno\">\r\n                    <th scope=\"row\">{{ aluno.nome_aluno }}</th>\r\n                    <td>{{ aluno.cpf_aluno }}</td>\r\n                    <td>{{ aluno.datanasc_aluno }}</td>\r\n                    <td>{{ aluno.nome_plano }}</td>\r\n                    <td>{{ aluno.nome_turma }}</td>\r\n                    <td>{{ aluno.diapag_aluno }}</td>\r\n                    <td>\r\n                        <button type=\"button\" class=\"btn btn-success\" @click=\"carregarDadosAluno(aluno.id_aluno)\">\r\n                            <i class=\"fa fa-pencil\"> </i>\r\n                             Editar\r\n                        </button>\r\n                        <button type=\"button\" class=\"btn btn-danger\" @click=\"deleteAluno(aluno.id_aluno)\">\r\n                            <i class=\"fa fa-trash\"> </i>\r\n                             Excluir\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport pdfMake from \"pdfmake/build/pdfmake\";\r\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\nexport default {\r\n    name: 'AlunoAdmin',\r\n    data(){\r\n        return {\r\n            URL: \"http://localhost:4000\",\r\n            alunos: [],\r\n            planos: [],\r\n            turmas: [],\r\n            alunoId: 0,\r\n            nome: '',\r\n            cpf: '',\r\n            dataNasc: '',\r\n            plano: 0,\r\n            turma: 0,\r\n            diaPag: '',\r\n            editar: false\r\n        }\r\n    },\r\n    methods: {\r\n        gerarPDF(){\r\n            var docDefinition = {\r\n                content: [\r\n                    {\r\n                    layout: 'lightHorizontalLines', // optional\r\n                    table: {\r\n                        // headers are automatically repeated if the table spans over multiple pages\r\n                        // you can declare how many rows should be treated as headers\r\n                        headerRows: 1,\r\n                        widths: [ '*', 'auto', 100, '*' ],\r\n\r\n                        body: this.alunos.nome_aluno\r\n                    }\r\n                    }\r\n                ]\r\n            };\r\n            pdfMake.createPdf(docDefinition).open();\r\n        },\r\n        getAllAlunos() {\r\n            axios.get(`${this.URL}/alunos`).then(response => {\r\n                this.alunos = response.data\r\n            })\r\n        },\r\n        createAluno() {\r\n            const aluno = {\r\n                nome_aluno: this.nome,\r\n                cpf_aluno: this.cpf,\r\n                datanasc_aluno: this.dataNasc,\r\n                id_plano: this.plano,\r\n                id_turma: this.turma,\r\n                diapag_aluno: this.diaPag,\r\n            }\r\n            console.log(aluno);\r\n            axios.post(`${this.URL}/alunos`, aluno).then(response => {\r\n                this.getAllAlunos();\r\n            });\r\n            this.limpaDadosFormulario();\r\n        },\r\n        carregarDadosAluno(id){\r\n            this.editar = true;\r\n            axios.get(`${this.URL}/alunos/getone/`+id).then(response => {\r\n                const aluno = response.data[0]\r\n                this.alunoId = aluno.id_aluno\r\n                this.nome = aluno.nome_aluno\r\n                this.cpf = aluno.cpf_aluno\r\n                this.dataNasc = aluno.datanasc_formatada\r\n                this.plano = aluno.id_plano\r\n                this.turma = aluno.id_turma\r\n                this.diaPag = aluno.diapag_formatada\r\n            })\r\n        },\r\n        salvarDados(){\r\n            const aluno = {\r\n                nome_aluno: this.nome,\r\n                cpf_aluno: this.cpf,\r\n                datanasc_aluno: this.dataNasc,\r\n                id_plano: this.plano,\r\n                id_turma: this.turma,\r\n                diapag_aluno: this.diaPag,\r\n            }\r\n            console.log(aluno);\r\n            axios.put(`${this.URL}/alunos/${this.alunoId}`, aluno).then(response => {\r\n                this.getAllAlunos();\r\n            });\r\n            this.limpaDadosFormulario();\r\n        },\r\n        deleteAluno(id) {\r\n            axios.delete(this.URL+\"/alunos/delete/\"+id).then(()=>{\r\n                this.getAllAlunos()\r\n            })\r\n        },\r\n        getAllPlanosOptions() {\r\n            axios.get(`${this.URL}/planos/options`).then(response => {\r\n                this.planos = response.data\r\n            })\r\n        },\r\n        getAllTurmasOptions() {\r\n            axios.get(`${this.URL}/turmas/options`).then(response => {\r\n                this.turmas = response.data\r\n            })\r\n        },\r\n        limpaDadosFormulario(){\r\n            this.alunoId = 0;\r\n            this.nome = '';\r\n            this.cpf = '';\r\n            this.dataNasc = '';\r\n            this.plano = 0;\r\n            this.turma = 0;\r\n            this.diaPag = '';\r\n            this.editar = false;\r\n        },\r\n        isCPF(cpf){\r\n            cpf = cpf.replace(/\\.|-/g,\"\");\r\n            soma = 0\r\n            console.log(cpf);\r\n            return true\r\n        },\r\n        \r\n    },\r\n    mounted() {\r\n        this.getAllAlunos();\r\n        this.getAllPlanosOptions();\r\n        this.getAllTurmasOptions();\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n    \r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}