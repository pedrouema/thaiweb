{"ast":null,"code":"import axios from 'axios';\nimport RelatorioDespesasPaga from './RelatorioDespesasPaga';\nexport default {\n  name: 'GerenciarDespesas',\n  components: {\n    RelatorioDespesasPaga\n  },\n  template: '#form',\n  data() {\n    return {\n      URL: \"http://localhost:4000\",\n      despesas: [],\n      nome: '',\n      valor: '',\n      dataVenc: '',\n      dataIni: '',\n      dataFim: '',\n      despesaId: 0,\n      tabela: 0,\n      QualTabela: '',\n      valor_pago: 0,\n      data_pagamento: ''\n    };\n  },\n  methods: {\n    abrirRelatorio() {},\n    quitarDespesa(id) {\n      this.editar = true;\n      const despesa = {\n        quitada_despesa: true,\n        //Continuar aqui... Acrescentar valor pago e data de pagamento... e depois alterar no back-end\n        valorpag_despesa: this.valor_pago,\n        datapag_despesa: this.data_pagamento\n      };\n      axios.put(`${this.URL}/despesas/quitar/${id}`, despesa).then(response => {\n        this.getAllDespesas();\n      });\n      //this.limpaDadosFormulario();\n    },\n\n    // função alert de input de valor pago e data de pagamento quando quitar uma conta\n    async quitar(id) {\n      const {\n        value: formValues\n      } = await this.$swal.fire({\n        title: 'Quitar despesa! ',\n        html: '<label for=\"inputState\" class=\"form-label\">Digite o valor pago</label>' + '<input type=\"number\" id=\"swal-input1\" class=\"swal2-input\"> </br></br>' + '________________________________________________________________ </br></br>' + '<label for=\"inputState\" class=\"form-label\">Selecione a data do pagamento</label>' + '<input type=\"date\" id=\"swal-input2\" class=\"swal2-input\">',\n        focusConfirm: false,\n        preConfirm: () => {\n          return [document.getElementById('swal-input1').value, document.getElementById('swal-input2').value];\n        }\n      });\n      if (formValues) {\n        this.valor_pago = formValues[0];\n        this.data_pagamento = formValues[1];\n        this.showAlertQuitar(id);\n      }\n    },\n    showAlertQuitar(id) {\n      // Use sweetalert2\n      const swalWithBootstrapButtons = this.$swal.mixin({\n        customClass: {\n          confirmButton: 'btn btn-success',\n          cancelButton: 'btn btn-danger'\n        },\n        buttonsStyling: false\n      });\n      swalWithBootstrapButtons.fire({\n        title: 'Deseja realmente quitar esta despesa?',\n        text: \"\",\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonText: 'Sim, quitar agora!',\n        cancelButtonText: 'Não, cancelar!',\n        reverseButtons: true\n      }).then(result => {\n        if (result.isConfirmed) {\n          swalWithBootstrapButtons.fire('DESPESA QUITADA COM SUCESSO!', '', 'success');\n          this.quitarDespesa(id);\n        } else if ( /* Read more about handling dismissals below */\n        result.dismiss === this.$swal.DismissReason.cancel) {\n          swalWithBootstrapButtons.fire('Cancelado! ', 'Despesa não foi quitada! ', 'error');\n        }\n      });\n    },\n    buscarDespesas() {\n      if (this.QualTabela == 'Ver despesas Quitadas') {\n        this.tabela = 2;\n        if (this.dataIni == '' && this.dataFim == '') {\n          this.getAllDespesasQuitadas();\n        } else {\n          //função para buscar entre datas que quitada_despesa == true\n          this.retornaQuitadasEntreDatas();\n          this.limpaDados();\n        }\n      } else if (this.QualTabela == 'Quitar Despesa') {\n        this.tabela = 1;\n        if (this.dataIni == '' && this.dataFim == '') {\n          this.getAllDespesas();\n        } else {\n          this.retornaNaoQuitadasEntreDatas();\n          this.limpaDados();\n        }\n      }\n    },\n    getAllDespesas() {\n      axios.get(`${this.URL}/despesas`).then(response => {\n        this.despesas = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    getAllDespesasQuitadas() {\n      axios.get(`${this.URL}/despesasquitadas`).then(response => {\n        this.despesas = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    voltarDespesa(id) {\n      const despesa = {\n        quitada_despesa: false\n      };\n      axios.put(`${this.URL}/despesas/voltar/${id}`, despesa).then(response => {\n        this.getAllDespesasQuitadas();\n      });\n    },\n    showAlertVoltar(id) {\n      // Use sweetalert2\n      const swalWithBootstrapButtons = this.$swal.mixin({\n        customClass: {\n          confirmButton: 'btn btn-success',\n          cancelButton: 'btn btn-danger'\n        },\n        buttonsStyling: false\n      });\n      swalWithBootstrapButtons.fire({\n        title: 'Deseja realmente voltar esta despesa aos não quitadas?',\n        text: \"\",\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonText: 'Sim, voltar agora!',\n        cancelButtonText: 'Não, cancelar!',\n        reverseButtons: true\n      }).then(result => {\n        if (result.isConfirmed) {\n          swalWithBootstrapButtons.fire('DESPESA RETORNADA COM SUCESSO!', '', 'success');\n          this.voltarDespesa(id);\n        } else if ( /* Read more about handling dismissals below */\n        result.dismiss === this.$swal.DismissReason.cancel) {\n          swalWithBootstrapButtons.fire('Cancelado! ', 'Despesa não foi retornada! ', 'error');\n        }\n      });\n    },\n    retornaNaoQuitadasEntreDatas() {\n      axios.get(`${this.URL}/despesasnaoquitadasentredatas/${this.dataIni}/${this.dataFim}`).then(response => {\n        this.despesas = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    retornaQuitadasEntreDatas() {\n      axios.get(`${this.URL}/despesasquitadasentredatas/${this.dataIni}/${this.dataFim}`).then(response => {\n        this.despesas = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    limpatabela() {\n      this.tabela = 0;\n    },\n    limpaDados() {\n      // this.dataIni = ''\n      // this.dataFim = ''\n    },\n    ajuda() {\n      this.$swal.fire({\n        title: '<h2>Gerenciamento de despesas</h2>',\n        icon: 'info',\n        html: '<h3 style=\"color:#ff6666\">Quitar uma despesa</h3>' + '<b>IMPORTANTE </b><p>Para quitar uma despesa a mesma deve estar previamente lançada.</p>' + '<p><b>1- </b>Selecione a ação \"Quitar Despesa\" em \"Selecione a ação desejada\". Para carregar despesas em um certo periodo ' + 'deve ser selecionado obrigatóriamente a \"Data inicio\" e \"Data Fim\" e clicar no botão \"BUSCAR\" (azul). Caso queira ver todas ' + 'as despesas lançadas para quitar, selecione apenas \"Quitar despesa\" sem selecionar \"Data Inicio\" e Data Fim e clicar no ' + 'botão \"BUSCAR\".' + '<p><b>2- </b>Após buscar a(s) despesa(s) para quitar, a(s) mesma(s) sera(âo) carregada(s) em uma lista abaixo do formulário, ' + 'basta clicar no botão \"Editar\" (verde) na mesma linha correspondente a despesa que deseja quitar' + '<p><b>3- </b>Após clicar em \"Editar\" irá abrir uma tela, nela insira o valor pago da despesa e a data do pagamento e clique em \"OK\".' + '<p><b>4- </b>Após clicar em \"OK\" irá abrir outra tela de comfirmação, clique em \"Sim, quitar agora!\" para quitar a despesa ' + 'ou \"Não, cancelar!\" para cancelar a ação.' + '<h3 style=\"color:#39ac6b\">Editar um aluno</h3>' + '<p><b>1- </b>Na lista abaixo do formulário clicar no botão \"Editar\" na mesma linha correspondente ' + 'ao aluno que deseja alterar o(s) dado(s).' + '<p><b>2- </b>Após clicar no botão \"Editar\" os dados do respectivo aluno irá carregar no formulário acima, ' + 'após isso pode alterar o(s) dado(s) que deseja do mesmo.' + '<p><b>3- </b>Após editar, para salvar a(s) alteração(ôs) clicar no botão \"+EDITAR\" (azul) ou \"CANCELAR\" (vermelho) para cancelar alteração(ôs).' + '<h3 style=\"color:#ff6666\">Excluir um aluno</h3>' + '<p><b>1- </b>Na lista abaixo do formulário, clicar no botão \"Excluir\" na mesma linha correspondente ' + 'ao aluno que deseja fazer a exclusão.' + '<p><b>2- </b>Após clicar no botão \"Excluir\" o aluno será excluido permanentemente. Para recuperar o mesmo, deve ser ' + 'feito o passo a passo de \"Cadastrar novo aluno\".'\n      });\n    }\n  },\n  mounted() {}\n};","map":{"version":3,"names":["axios","RelatorioDespesasPaga","name","components","template","data","URL","despesas","nome","valor","dataVenc","dataIni","dataFim","despesaId","tabela","QualTabela","valor_pago","data_pagamento","methods","abrirRelatorio","quitarDespesa","id","editar","despesa","quitada_despesa","valorpag_despesa","datapag_despesa","put","then","response","getAllDespesas","quitar","value","formValues","$swal","fire","title","html","focusConfirm","preConfirm","document","getElementById","showAlertQuitar","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","text","icon","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","result","isConfirmed","dismiss","DismissReason","cancel","buscarDespesas","getAllDespesasQuitadas","retornaQuitadasEntreDatas","limpaDados","retornaNaoQuitadasEntreDatas","get","catch","error","console","log","voltarDespesa","showAlertVoltar","limpatabela","ajuda","mounted"],"sources":["C:\\Users\\Pedro Uema\\Desktop\\thaiweb\\front-end\\src\\components\\financeiro\\gerenciarDespesas.vue"],"sourcesContent":["<template id=\"form\">\r\n    <h3>Gerenciamento de Despesas</h3>\r\n    <button type=\"button\" id=\"btnAjuda\" class=\"btn btn-primary btn-floating\" @click=\"ajuda()\">\r\n        <i class=\"fa fa-question-circle\"></i>\r\n    </button>\r\n    <br/>\r\n    <form class=\"row g-3\">\r\n        <h5>Selecione o filtro de ação e as datas inicio e fim para buscar as despesas.</h5>\r\n        <div class=\"col-md-4\" >\r\n                <label for=\"inputState\" class=\"form-label\">Selecione a ação desejada</label>\r\n                <select class=\"form-select\" v-model=\"QualTabela\">\r\n                    <option value=\"Quitar Despesa\">Quitar Despesa</option>\r\n                    <option value=\"Ver despesas Quitadas\">Ver Despesas Quitadas</option>\r\n                </select>\r\n            </div>\r\n        <div class=\"col-md-2\">\r\n            <label for=\"inputZip\" class=\"form-label\">Data Inicio</label >\r\n            <input type=\"date\" class=\"form-control\" v-model=\"dataIni\">\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n            <label for=\"inputZip\" class=\"form-label\">Data Fim</label >\r\n            <input type=\"date\" class=\"form-control\" v-model=\"dataFim\">\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"buscarDespesas()\">\r\n                <i class=\"fa fa-search\"></i> BUSCAR</button>\r\n        </div>\r\n    </form>\r\n    <br/>\r\n    <div class=\"alunos-table\">\r\n        <!-- Tabela de Despesas à Quitar -->\r\n        <table class=\"table\" v-show=\"tabela == 1\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Despesa</th>\r\n                    <th scope=\"col\">Valor</th>\r\n                    <th scope=\"col\">Data Vencimento</th>\r\n                    <th scope=\"col\">Ação</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody class=\"table-group-divider\">\r\n                <tr v-for=\"despesa in despesas\" :key=\"despesa.id_despesa\">\r\n                    <th scope=\"row\">{{ despesa.nome_despesa }}</th>\r\n                    <td>R$ {{ despesa.valor_despesa.toFixed(2) }}</td>\r\n                    <td>{{ despesa.vencimento_despesa }}</td>\r\n                    <td>\r\n                        <button type=\"button\" class=\"btn btn-success\" @click=\"quitar(despesa.id_despesa)\">\r\n                            <!-- @click=\"quitarDespesa(despesa.id_despesa)\" -->\r\n                            <i class=\"fa fa-dollar\"> </i>\r\n                             Quitar\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <!-- Tabela de Despesas já Pagas -->\r\n        <div class=\"despesasPagas-table\" v-show=\"tabela == 2\">\r\n            <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n                <button class=\"btn btn-dark\" type=\"button\" v-on:click.prevent=\"abrirRelatorio()\"><i class=\"fa fa-print\"></i> Imprimir</button>\r\n            </div>\r\n        <table class=\"table\" >\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Despesa</th>\r\n                    <th scope=\"col\">Valor</th>\r\n                    <th scope=\"col\">Data Vencimento</th>\r\n                    <th scope=\"col\">Data Pagamento</th>\r\n                    <th scope=\"col\">Valor Pago</th>\r\n                    <th scope=\"col\">Ação</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody class=\"table-group-divider\">\r\n                <tr v-for=\"despesa in despesas\" :key=\"despesa.id_despesa\">\r\n                    <th scope=\"row\">{{ despesa.nome_despesa }}</th>\r\n                    <td>R$ {{ despesa.valor_despesa.toFixed(2) }}</td>\r\n                    <td>{{ despesa.vencimento_despesa }}</td>\r\n                    <td>{{ despesa.pagamento_despesa }}</td>\r\n                    <td>R$ {{ despesa.valorpag_despesa }}</td>\r\n                    <td>\r\n                        <button type=\"button\" class=\"btn btn-danger\" @click=\"showAlertVoltar(despesa.id_despesa)\">\r\n                            <i class=\"fa fa-reply-all\"> </i>\r\n                             Voltar (Não Foi Paga)\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport RelatorioDespesasPaga from './RelatorioDespesasPaga'\r\n\r\n\r\nexport default {\r\n    name: 'GerenciarDespesas',\r\n    components: { RelatorioDespesasPaga },\r\n    template: '#form',\r\n    data(){\r\n        return {\r\n            URL: \"http://localhost:4000\",\r\n            despesas: [],\r\n            nome: '',\r\n            valor: '',\r\n            dataVenc: '',\r\n            dataIni: '',\r\n            dataFim: '',\r\n            despesaId: 0,\r\n            tabela: 0,\r\n            QualTabela: '',\r\n            valor_pago: 0,\r\n            data_pagamento:'',\r\n        }\r\n    },\r\n    methods: {\r\n        abrirRelatorio(){\r\n            \r\n        },\r\n        quitarDespesa(id){\r\n            this.editar = true\r\n            const despesa = {\r\n                quitada_despesa: true,\r\n                //Continuar aqui... Acrescentar valor pago e data de pagamento... e depois alterar no back-end\r\n                valorpag_despesa: this.valor_pago,\r\n                datapag_despesa: this.data_pagamento\r\n            }\r\n            axios.put(`${this.URL}/despesas/quitar/${id}`, despesa).then(response => {\r\n                this.getAllDespesas();\r\n            });\r\n            //this.limpaDadosFormulario();\r\n        },\r\n        // função alert de input de valor pago e data de pagamento quando quitar uma conta\r\n        async quitar(id){\r\n            const { value: formValues } = await this.$swal.fire({\r\n                title: 'Quitar despesa! ',\r\n                html:\r\n                    '<label for=\"inputState\" class=\"form-label\">Digite o valor pago</label>' +\r\n                    '<input type=\"number\" id=\"swal-input1\" class=\"swal2-input\"> </br></br>' +\r\n                    '________________________________________________________________ </br></br>' +\r\n                    '<label for=\"inputState\" class=\"form-label\">Selecione a data do pagamento</label>' +\r\n                    '<input type=\"date\" id=\"swal-input2\" class=\"swal2-input\">',\r\n                focusConfirm: false,\r\n                preConfirm: () => {\r\n                    return [\r\n                    document.getElementById('swal-input1').value,\r\n                    document.getElementById('swal-input2').value\r\n                    ]\r\n                }\r\n            })\r\n            if (formValues) {\r\n                this.valor_pago = formValues[0]\r\n                this.data_pagamento = formValues[1]\r\n                this.showAlertQuitar(id)\r\n            }\r\n        },\r\n        showAlertQuitar(id) {\r\n            // Use sweetalert2\r\n            const swalWithBootstrapButtons = this.$swal.mixin({\r\n            customClass: {\r\n                confirmButton: 'btn btn-success',\r\n                cancelButton: 'btn btn-danger'\r\n            },\r\n            buttonsStyling: false\r\n            })\r\n\r\n            swalWithBootstrapButtons.fire({\r\n            title: 'Deseja realmente quitar esta despesa?',\r\n            text: \"\",\r\n            icon: 'question',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Sim, quitar agora!',\r\n            cancelButtonText: 'Não, cancelar!',\r\n            reverseButtons: true\r\n            }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                swalWithBootstrapButtons.fire(\r\n                'DESPESA QUITADA COM SUCESSO!',\r\n                '',\r\n                'success'\r\n                )\r\n                this.quitarDespesa(id)\r\n            } else if (\r\n                /* Read more about handling dismissals below */\r\n                result.dismiss === this.$swal.DismissReason.cancel\r\n            ) {\r\n                swalWithBootstrapButtons.fire(\r\n                'Cancelado! ',\r\n                'Despesa não foi quitada! ',\r\n                'error'\r\n                )\r\n            }\r\n            })\r\n        },\r\n        buscarDespesas(){\r\n            if(this.QualTabela == 'Ver despesas Quitadas'){\r\n                this.tabela = 2\r\n                if(this.dataIni == '' && this.dataFim == ''){\r\n                    this.getAllDespesasQuitadas()\r\n                }\r\n                else{\r\n                    //função para buscar entre datas que quitada_despesa == true\r\n                    this.retornaQuitadasEntreDatas()\r\n                    this.limpaDados()\r\n                }\r\n            }\r\n            else if(this.QualTabela == 'Quitar Despesa'){\r\n                this.tabela = 1\r\n                if(this.dataIni == '' && this.dataFim == ''){\r\n                    this.getAllDespesas()\r\n                }\r\n                else{\r\n                    this.retornaNaoQuitadasEntreDatas()\r\n                    this.limpaDados()\r\n                }\r\n            }\r\n        },\r\n        getAllDespesas() {\r\n            axios.get(`${this.URL}/despesas`).then(response => {\r\n                this.despesas = response.data\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        },\r\n        getAllDespesasQuitadas() {\r\n            axios.get(`${this.URL}/despesasquitadas`).then(response => {\r\n                this.despesas = response.data\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        },\r\n        voltarDespesa(id){\r\n            const despesa = {\r\n                quitada_despesa: false,\r\n            }\r\n            axios.put(`${this.URL}/despesas/voltar/${id}`, despesa).then(response => {\r\n                this.getAllDespesasQuitadas();\r\n            });\r\n        },\r\n        showAlertVoltar(id) {\r\n            // Use sweetalert2\r\n            const swalWithBootstrapButtons = this.$swal.mixin({\r\n            customClass: {\r\n                confirmButton: 'btn btn-success',\r\n                cancelButton: 'btn btn-danger'\r\n            },\r\n            buttonsStyling: false\r\n            })\r\n\r\n            swalWithBootstrapButtons.fire({\r\n            title: 'Deseja realmente voltar esta despesa aos não quitadas?',\r\n            text: \"\",\r\n            icon: 'question',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Sim, voltar agora!',\r\n            cancelButtonText: 'Não, cancelar!',\r\n            reverseButtons: true\r\n            }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                swalWithBootstrapButtons.fire(\r\n                'DESPESA RETORNADA COM SUCESSO!',\r\n                '',\r\n                'success'\r\n                )\r\n                this.voltarDespesa(id)\r\n            } else if (\r\n                /* Read more about handling dismissals below */\r\n                result.dismiss === this.$swal.DismissReason.cancel\r\n            ) {\r\n                swalWithBootstrapButtons.fire(\r\n                'Cancelado! ',\r\n                'Despesa não foi retornada! ',\r\n                'error'\r\n                )\r\n            }\r\n            })\r\n        },\r\n        retornaNaoQuitadasEntreDatas(){\r\n            axios.get(`${this.URL}/despesasnaoquitadasentredatas/${this.dataIni}/${this.dataFim}`).then(response => {\r\n                this.despesas = response.data\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        },\r\n        retornaQuitadasEntreDatas(){\r\n            axios.get(`${this.URL}/despesasquitadasentredatas/${this.dataIni}/${this.dataFim}`).then(response => {\r\n                this.despesas = response.data\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        },\r\n        limpatabela(){\r\n            this.tabela = 0\r\n        },\r\n        limpaDados(){\r\n            // this.dataIni = ''\r\n            // this.dataFim = ''\r\n        },\r\n        ajuda(){\r\n            this.$swal.fire({\r\n                title: '<h2>Gerenciamento de despesas</h2>',\r\n                icon: 'info',\r\n                html:\r\n                    '<h3 style=\"color:#ff6666\">Quitar uma despesa</h3>'+\r\n                    '<b>IMPORTANTE </b><p>Para quitar uma despesa a mesma deve estar previamente lançada.</p>' +\r\n                    '<p><b>1- </b>Selecione a ação \"Quitar Despesa\" em \"Selecione a ação desejada\". Para carregar despesas em um certo periodo '+\r\n                    'deve ser selecionado obrigatóriamente a \"Data inicio\" e \"Data Fim\" e clicar no botão \"BUSCAR\" (azul). Caso queira ver todas '+\r\n                    'as despesas lançadas para quitar, selecione apenas \"Quitar despesa\" sem selecionar \"Data Inicio\" e Data Fim e clicar no '+\r\n                    'botão \"BUSCAR\".'+\r\n                    '<p><b>2- </b>Após buscar a(s) despesa(s) para quitar, a(s) mesma(s) sera(âo) carregada(s) em uma lista abaixo do formulário, '+\r\n                    'basta clicar no botão \"Editar\" (verde) na mesma linha correspondente a despesa que deseja quitar'+\r\n                    '<p><b>3- </b>Após clicar em \"Editar\" irá abrir uma tela, nela insira o valor pago da despesa e a data do pagamento e clique em \"OK\".'+\r\n                    '<p><b>4- </b>Após clicar em \"OK\" irá abrir outra tela de comfirmação, clique em \"Sim, quitar agora!\" para quitar a despesa '+\r\n                    'ou \"Não, cancelar!\" para cancelar a ação.'+\r\n                    '<h3 style=\"color:#39ac6b\">Editar um aluno</h3>'+\r\n                    '<p><b>1- </b>Na lista abaixo do formulário clicar no botão \"Editar\" na mesma linha correspondente '+\r\n                    'ao aluno que deseja alterar o(s) dado(s).'+\r\n                    '<p><b>2- </b>Após clicar no botão \"Editar\" os dados do respectivo aluno irá carregar no formulário acima, '+\r\n                    'após isso pode alterar o(s) dado(s) que deseja do mesmo.'+\r\n                    '<p><b>3- </b>Após editar, para salvar a(s) alteração(ôs) clicar no botão \"+EDITAR\" (azul) ou \"CANCELAR\" (vermelho) para cancelar alteração(ôs).'+\r\n                    '<h3 style=\"color:#ff6666\">Excluir um aluno</h3>'+\r\n                    '<p><b>1- </b>Na lista abaixo do formulário, clicar no botão \"Excluir\" na mesma linha correspondente '+\r\n                    'ao aluno que deseja fazer a exclusão.'+\r\n                    '<p><b>2- </b>Após clicar no botão \"Excluir\" o aluno será excluido permanentemente. Para recuperar o mesmo, deve ser '+\r\n                    'feito o passo a passo de \"Cadastrar novo aluno\".'\r\n            })\r\n        }\r\n    },\r\n    mounted() {\r\n        \r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}