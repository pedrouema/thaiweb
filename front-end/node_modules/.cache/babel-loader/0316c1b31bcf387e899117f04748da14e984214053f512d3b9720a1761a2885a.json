{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'GerenciarDespesas',\n  data() {\n    return {\n      URL: \"http://localhost:4000\",\n      despesas: [],\n      nome: '',\n      valor: '',\n      dataVenc: '',\n      dataIni: '',\n      dataFim: '',\n      despesaId: 0,\n      tabela: true,\n      QualTabela: ''\n    };\n  },\n  methods: {\n    quitarDespesa(id) {\n      this.editar = true;\n      const despesa = {\n        quitada_despesa: true\n      };\n      axios.put(`${this.URL}/despesas/quitar/${id}`, despesa).then(response => {\n        console.log(response);\n        this.getAllDespesas();\n      });\n      this.limpaDadosFormulario();\n    },\n    // função alert de input de valor pago e data de pagamento quando quitar uma conta\n    async quitar() {\n      const {\n        value: formValues\n      } = await this.$swal.fire({\n        title: 'Multiple inputs',\n        html: '<input id=\"swal-input1\" class=\"swal2-input\">' + '<input id=\"swal-input2\" class=\"swal2-input\">',\n        focusConfirm: false,\n        preConfirm: () => {\n          return [document.getElementById('swal-input1').value, document.getElementById('swal-input2').value];\n        }\n      });\n      if (formValues) {\n        this.$swal.fire(JSON.stringify(formValues));\n      }\n    },\n    showAlertQuitar(id) {\n      // Use sweetalert2\n      const swalWithBootstrapButtons = this.$swal.mixin({\n        customClass: {\n          confirmButton: 'btn btn-success',\n          cancelButton: 'btn btn-danger'\n        },\n        buttonsStyling: false\n      });\n      swalWithBootstrapButtons.fire({\n        title: 'Deseja realmente quitar esta despesa?',\n        text: \"\",\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonText: 'Sim, quitar agora!',\n        cancelButtonText: 'Não, cancelar!',\n        reverseButtons: true\n      }).then(result => {\n        if (result.isConfirmed) {\n          swalWithBootstrapButtons.fire('DESPESA QUITADA COM SUCESSO!', '', 'success');\n          this.quitarDespesa(id);\n        } else if ( /* Read more about handling dismissals below */\n        result.dismiss === this.$swal.DismissReason.cancel) {\n          swalWithBootstrapButtons.fire('Cancelado! ', 'Despesa não foi quitada! ', 'error');\n        }\n      });\n    },\n    buscarDespesas() {\n      if (this.QualTabela == 'Ver despesas Quitadas') {\n        this.tabela = false;\n        this.getAllDespesasQuitadas();\n      } else {\n        this.tabela = true;\n        this.getAllDespesas();\n      }\n    },\n    getAllDespesas() {\n      axios.get(`${this.URL}/despesas`).then(response => {\n        this.despesas = response.data;\n        console.log(this.despesas);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    getAllDespesasQuitadas() {\n      axios.get(`${this.URL}/despesasquitadas`).then(response => {\n        this.despesas = response.data;\n        console.log(this.despesas);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    voltarDespesa(id) {\n      const despesa = {\n        quitada_despesa: false\n      };\n      axios.put(`${this.URL}/despesas/quitar/${id}`, despesa).then(response => {\n        console.log(response);\n        this.getAllDespesasQuitadas();\n      });\n      this.limpaDadosFormulario();\n    },\n    showAlertVoltar(id) {\n      // Use sweetalert2\n      const swalWithBootstrapButtons = this.$swal.mixin({\n        customClass: {\n          confirmButton: 'btn btn-success',\n          cancelButton: 'btn btn-danger'\n        },\n        buttonsStyling: false\n      });\n      swalWithBootstrapButtons.fire({\n        title: 'Deseja realmente voltar esta despesa aos não quitadas?',\n        text: \"\",\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonText: 'Sim, voltar agora!',\n        cancelButtonText: 'Não, cancelar!',\n        reverseButtons: true\n      }).then(result => {\n        if (result.isConfirmed) {\n          swalWithBootstrapButtons.fire('DESPESA RETORNADA COM SUCESSO!', '', 'success');\n          this.voltarDespesa(id);\n        } else if ( /* Read more about handling dismissals below */\n        result.dismiss === this.$swal.DismissReason.cancel) {\n          swalWithBootstrapButtons.fire('Cancelado! ', 'Despesa não foi retornada! ', 'error');\n        }\n      });\n    }\n  },\n  mounted() {}\n};","map":{"version":3,"names":["axios","name","data","URL","despesas","nome","valor","dataVenc","dataIni","dataFim","despesaId","tabela","QualTabela","methods","quitarDespesa","id","editar","despesa","quitada_despesa","put","then","response","console","log","getAllDespesas","limpaDadosFormulario","quitar","value","formValues","$swal","fire","title","html","focusConfirm","preConfirm","document","getElementById","JSON","stringify","showAlertQuitar","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","text","icon","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","result","isConfirmed","dismiss","DismissReason","cancel","buscarDespesas","getAllDespesasQuitadas","get","catch","error","voltarDespesa","showAlertVoltar","mounted"],"sources":["C:\\Users\\Pedro Uema\\Desktop\\thaiweb\\front-end\\src\\components\\financeiro\\gerenciarDespesas.vue"],"sourcesContent":["<template>\r\n    <h3>Gerenciamento de Despesas</h3>\r\n    <br/>\r\n    <form class=\"row g-3\">\r\n        <h5>Selecione o filtro de ação e as datas inicio e fim para buscar as despesas.</h5>\r\n        <div class=\"col-md-4\" >\r\n                <label for=\"inputState\" class=\"form-label\">Selecione a ação desejada</label>\r\n                <select class=\"form-select\" v-model=\"QualTabela\">\r\n                    <option value=\"Quitar Despesa\">Quitar Despesa</option>\r\n                    <option value=\"Ver despesas Quitadas\">Ver Despesas Quitadas</option>\r\n                </select>\r\n            </div>\r\n        <div class=\"col-md-2\">\r\n            <label for=\"inputZip\" class=\"form-label\">Data Inicio</label >\r\n            <input type=\"date\" class=\"form-control\" v-model=\"dataIni\">\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n            <label for=\"inputZip\" class=\"form-label\">Data Fim</label >\r\n            <input type=\"date\" class=\"form-control\" v-model=\"dataFim\">\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"buscarDespesas()\">\r\n                <i class=\"fa fa-search\"></i> BUSCAR</button>\r\n        </div>\r\n    </form>\r\n    <br/>\r\n    <div class=\"alunos-table\">\r\n        <!-- Tabela de Despesas à Quitar -->\r\n        <table class=\"table\" v-show=\"tabela\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Despesa</th>\r\n                    <th scope=\"col\">Valor</th>\r\n                    <th scope=\"col\">Data Vencimento</th>\r\n                    <th scope=\"col\">Ação</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody class=\"table-group-divider\">\r\n                <tr v-for=\"despesa in despesas\" :key=\"despesa.id_despesa\">\r\n                    <th scope=\"row\">{{ despesa.nome_despesa }}</th>\r\n                    <td>R$ {{ despesa.valor_despesa.toFixed(2) }}</td>\r\n                    <td>{{ despesa.vencimento_despesa }}</td>\r\n                    <td>\r\n                        <button type=\"button\" class=\"btn btn-success\" @click=\"quitar()\">\r\n                            <!-- @click=\"quitarDespesa(despesa.id_despesa)\" -->\r\n                            <i class=\"fa fa-dollar\"> </i>\r\n                             Quitar\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <!-- Tabela de Despesas já Pagas -->\r\n        <table class=\"table\" v-show=\"!tabela\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Despesa</th>\r\n                    <th scope=\"col\">Valor</th>\r\n                    <th scope=\"col\">Data Vencimento</th>\r\n                    <th scope=\"col\">Data Pagamento</th>\r\n                    <th scope=\"col\">Valor Pago</th>\r\n                    <th scope=\"col\">Ação</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody class=\"table-group-divider\">\r\n                <tr v-for=\"despesa in despesas\" :key=\"despesa.id_despesa\">\r\n                    <th scope=\"row\">{{ despesa.nome_despesa }}</th>\r\n                    <td>R$ {{ despesa.valor_despesa.toFixed(2) }}</td>\r\n                    <td>{{ despesa.vencimento_despesa }}</td>\r\n                    <td>{{ despesa.pagamento_despesa }}</td>\r\n                    <td>R$ {{ despesa.valorpag_despesa }}</td>\r\n                    <td>\r\n                        <button type=\"button\" class=\"btn btn-danger\" @click=\"showAlertVoltar(despesa.id_despesa)\">\r\n                            <i class=\"fa fa-reply-all\"> </i>\r\n                             Voltar (Não Foi Paga)\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    name: 'GerenciarDespesas',\r\n    data(){\r\n        return {\r\n            URL: \"http://localhost:4000\",\r\n            despesas: [],\r\n            nome: '',\r\n            valor: '',\r\n            dataVenc: '',\r\n            dataIni: '',\r\n            dataFim: '',\r\n            despesaId: 0,\r\n            tabela: true,\r\n            QualTabela: '',\r\n        }\r\n    },\r\n    methods: {\r\n        quitarDespesa(id){\r\n            this.editar = true\r\n            const despesa = {\r\n                quitada_despesa: true,\r\n            }\r\n            axios.put(`${this.URL}/despesas/quitar/${id}`, despesa).then(response => {\r\n                console.log(response);\r\n                this.getAllDespesas();\r\n            });\r\n            this.limpaDadosFormulario();\r\n        },\r\n        // função alert de input de valor pago e data de pagamento quando quitar uma conta\r\n        async quitar(){\r\n            const { value: formValues } = await this.$swal.fire({\r\n            title: 'Multiple inputs',\r\n            html:\r\n                '<input id=\"swal-input1\" class=\"swal2-input\">' +\r\n                '<input id=\"swal-input2\" class=\"swal2-input\">',\r\n            focusConfirm: false,\r\n            preConfirm: () => {\r\n                return [\r\n                document.getElementById('swal-input1').value,\r\n                document.getElementById('swal-input2').value\r\n                ]\r\n            }\r\n            })\r\n\r\n            if (formValues) {\r\n                this.$swal.fire(JSON.stringify(formValues))\r\n            }\r\n        },\r\n        showAlertQuitar(id) {\r\n            // Use sweetalert2\r\n            const swalWithBootstrapButtons = this.$swal.mixin({\r\n            customClass: {\r\n                confirmButton: 'btn btn-success',\r\n                cancelButton: 'btn btn-danger'\r\n            },\r\n            buttonsStyling: false\r\n            })\r\n\r\n            swalWithBootstrapButtons.fire({\r\n            title: 'Deseja realmente quitar esta despesa?',\r\n            text: \"\",\r\n            icon: 'question',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Sim, quitar agora!',\r\n            cancelButtonText: 'Não, cancelar!',\r\n            reverseButtons: true\r\n            }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                swalWithBootstrapButtons.fire(\r\n                'DESPESA QUITADA COM SUCESSO!',\r\n                '',\r\n                'success'\r\n                )\r\n                this.quitarDespesa(id)\r\n            } else if (\r\n                /* Read more about handling dismissals below */\r\n                result.dismiss === this.$swal.DismissReason.cancel\r\n            ) {\r\n                swalWithBootstrapButtons.fire(\r\n                'Cancelado! ',\r\n                'Despesa não foi quitada! ',\r\n                'error'\r\n                )\r\n            }\r\n            })\r\n        },\r\n        buscarDespesas(){\r\n            if(this.QualTabela == 'Ver despesas Quitadas'){\r\n                this.tabela = false\r\n                this.getAllDespesasQuitadas()\r\n            }\r\n            else{\r\n                this.tabela = true\r\n                this.getAllDespesas()\r\n            }\r\n        },\r\n        getAllDespesas() {\r\n            axios.get(`${this.URL}/despesas`).then(response => {\r\n                this.despesas = response.data\r\n                console.log(this.despesas);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        },\r\n        getAllDespesasQuitadas() {\r\n            axios.get(`${this.URL}/despesasquitadas`).then(response => {\r\n                this.despesas = response.data\r\n                console.log(this.despesas);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        },\r\n        voltarDespesa(id){\r\n            const despesa = {\r\n                quitada_despesa: false,\r\n            }\r\n            axios.put(`${this.URL}/despesas/quitar/${id}`, despesa).then(response => {\r\n                console.log(response);\r\n                this.getAllDespesasQuitadas();\r\n            });\r\n            this.limpaDadosFormulario();\r\n        },\r\n        showAlertVoltar(id) {\r\n            // Use sweetalert2\r\n            const swalWithBootstrapButtons = this.$swal.mixin({\r\n            customClass: {\r\n                confirmButton: 'btn btn-success',\r\n                cancelButton: 'btn btn-danger'\r\n            },\r\n            buttonsStyling: false\r\n            })\r\n\r\n            swalWithBootstrapButtons.fire({\r\n            title: 'Deseja realmente voltar esta despesa aos não quitadas?',\r\n            text: \"\",\r\n            icon: 'question',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Sim, voltar agora!',\r\n            cancelButtonText: 'Não, cancelar!',\r\n            reverseButtons: true\r\n            }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                swalWithBootstrapButtons.fire(\r\n                'DESPESA RETORNADA COM SUCESSO!',\r\n                '',\r\n                'success'\r\n                )\r\n                this.voltarDespesa(id)\r\n            } else if (\r\n                /* Read more about handling dismissals below */\r\n                result.dismiss === this.$swal.DismissReason.cancel\r\n            ) {\r\n                swalWithBootstrapButtons.fire(\r\n                'Cancelado! ',\r\n                'Despesa não foi retornada! ',\r\n                'error'\r\n                )\r\n            }\r\n            })\r\n        },\r\n    },\r\n    mounted() {\r\n        \r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}