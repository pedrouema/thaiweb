{"ast":null,"code":"import axios from 'axios';\n// import RelatorioAlunos from '@/components/admin/RelatorioAlunos'\n\nexport default {\n  name: 'AlunoAdmin',\n  // components: { RelatorioAlunos },\n  data() {\n    return {\n      URL: \"http://localhost:4000\",\n      alunos: [],\n      planos: [],\n      turmas: [],\n      alunoId: 0,\n      nome: '',\n      cpf: '',\n      cpfFormatado: 0,\n      dataNasc: '',\n      plano: 0,\n      turma: 0,\n      diaPag: '',\n      editar: false\n    };\n  },\n  methods: {\n    abrirRelatorio() {\n      const win = window.open('http://localhost:8080/relatorioalunos');\n      win.focus();\n    },\n    getAllAlunos() {\n      axios.get(`${this.URL}/alunos`).then(response => {\n        this.alunos = response.data;\n      });\n    },\n    createAluno() {\n      this.formatarCPF();\n      if (this.validarCpf(this.cpfFormatado)) {\n        const aluno = {\n          nome_aluno: this.nome,\n          cpf_aluno: this.cpf,\n          datanasc_aluno: this.dataNasc,\n          id_plano: this.plano,\n          id_turma: this.turma,\n          diapag_aluno: this.diaPag\n        };\n        console.log(aluno);\n        axios.post(`${this.URL}/alunos`, aluno).then(response => {\n          this.getAllAlunos();\n        });\n        this.limpaDadosFormulario();\n      }\n    },\n    carregarDadosAluno(id) {\n      this.editar = true;\n      axios.get(`${this.URL}/alunos/getone/` + id).then(response => {\n        const aluno = response.data[0];\n        this.alunoId = aluno.id_aluno;\n        this.nome = aluno.nome_aluno;\n        this.cpf = aluno.cpf_aluno;\n        this.dataNasc = aluno.datanasc_formatada;\n        this.plano = aluno.id_plano;\n        this.turma = aluno.id_turma;\n        this.diaPag = aluno.diapag_formatada;\n      });\n    },\n    salvarDados() {\n      this.formatarCPF();\n      if (this.validarCpf(this.cpfFormatado)) {\n        const aluno = {\n          nome_aluno: this.nome,\n          cpf_aluno: this.cpf,\n          datanasc_aluno: this.dataNasc,\n          id_plano: this.plano,\n          id_turma: this.turma,\n          diapag_aluno: this.diaPag\n        };\n        axios.put(`${this.URL}/alunos/${this.alunoId}`, aluno).then(response => {\n          this.getAllAlunos();\n        });\n        this.limpaDadosFormulario();\n      }\n    },\n    deleteAluno(id) {\n      axios.delete(this.URL + \"/alunos/delete/\" + id).then(() => {\n        this.getAllAlunos();\n      });\n    },\n    getAllPlanosOptions() {\n      axios.get(`${this.URL}/planos/options`).then(response => {\n        this.planos = response.data;\n      });\n    },\n    getAllTurmasOptions() {\n      axios.get(`${this.URL}/turmas/options`).then(response => {\n        this.turmas = response.data;\n      });\n    },\n    limpaDadosFormulario() {\n      this.alunoId = 0;\n      this.nome = '';\n      this.cpf = '';\n      this.dataNasc = '';\n      this.plano = 0;\n      this.turma = 0;\n      this.diaPag = '';\n      this.editar = false;\n    },\n    validarPrimeiroDigito(cpf) {\n      let sum = 0;\n      for (let i = 0; i < 9; i++) {\n        sum += cpf[i] * (10 - i);\n      }\n      const resto = sum * 10 % 11;\n      if (resto < 10) {\n        return cpf[9] == resto;\n      }\n      return cpf[9] == 0;\n    },\n    validarSegundoDigito(cpf) {\n      let sum = 0;\n      for (let i = 0; i < 10; i++) {\n        sum += cpf[i] * (11 - i);\n      }\n      const resto = sum * 10 % 11;\n      if (resto < 10) {\n        return cpf[10] == resto;\n      }\n      return cpf[10] == 0;\n    },\n    validarRepetido(cpf) {\n      const primeiro = cpf[0];\n      let diferente = false;\n      for (let i = 1; i < cpf.length; i++) {\n        if (cpf[i] != primeiro) {\n          diferente = true;\n        }\n      }\n      return diferente;\n    },\n    validarCpf(cpf) {\n      if (cpf.length != 11) {\n        return false;\n      }\n      if (!this.validarRepetido(cpf)) {\n        return false;\n      }\n      if (!this.validarPrimeiroDigito(cpf)) {\n        return false;\n      }\n      if (!this.validarSegundoDigito(cpf)) {\n        return false;\n      }\n      return true;\n    },\n    formatarCPF() {\n      this.cpfFormatado = this.cpf.replace(\"-\", \"\").replace(\".\", \"\").replace(\".\", \"\");\n    },\n    ajuda() {\n      this.$swal.fire({\n        title: '<h2>Gerenciamento de aluno</h2>',\n        icon: 'info',\n        html: '<h3 style=\"color:#4da6ff\">Cadastrar novo aluno</h3>' + '<b>IMPORTANTE </b><p>Plano e Turma devem estar previamente cadastrados.</p>' + '<p><b>1- </b>Inserir todos os dados: nome do aluno, cpf(válido) do aluno, data de nascimento, ' + 'selecionar um plano, selecionar uma turma e data ne inicio.' + '<p><b>2- </b>Após todos dados inseridos clicar no botão \"+SALVAR\" para salvar cadastro ou \"CANCELAR\" ' + 'para limpar formulário.' + '<h3 style=\"color:#39ac6b\">Editar um aluno</h3>' + '<p><b>1- </b>Na lista abaixo do formulário clicar no botão \"Editar\" na mesma linha correspondente ' + 'ao aluno que deseja alterar o(s) dado(s).' + '<p><b>2- </b>Após clicar no botão \"Editar\" os dados do respectivo aluno irá carregar no formulário acima, ' + 'após isso pode alterar o(s) dado(s) que deseja do mesmo.' + '<p><b>3- </b>Após editar, para salvar a(s) alteração(ôs) clicar em \"+EDITAR\" (azul) ou \"CANCELAR\" (vermelho) para cancelar alteração(ôs).' + '<h3 style=\"color:#ff6666\">Excluir um aluno</h3>' + '<p><b>1- </b>Na lista abaixo do formulário, clicar no botão \"Excluir\" na mesma linha correspondente ' + 'ao aluno que deseja fazer a exclusão.' + '<p><b>2- </b>Após clicar no botão \"Excluir\" o aluno será excluido permanentemente. Para recuperar o mesmo, deve ser ' + 'feito o passo a passo de \"Cadastrar novo aluno\".'\n      });\n    }\n  },\n  mounted() {\n    this.getAllAlunos();\n    this.getAllPlanosOptions();\n    this.getAllTurmasOptions();\n  }\n};","map":{"version":3,"names":["axios","name","data","URL","alunos","planos","turmas","alunoId","nome","cpf","cpfFormatado","dataNasc","plano","turma","diaPag","editar","methods","abrirRelatorio","win","window","open","focus","getAllAlunos","get","then","response","createAluno","formatarCPF","validarCpf","aluno","nome_aluno","cpf_aluno","datanasc_aluno","id_plano","id_turma","diapag_aluno","console","log","post","limpaDadosFormulario","carregarDadosAluno","id","id_aluno","datanasc_formatada","diapag_formatada","salvarDados","put","deleteAluno","delete","getAllPlanosOptions","getAllTurmasOptions","validarPrimeiroDigito","sum","i","resto","validarSegundoDigito","validarRepetido","primeiro","diferente","length","replace","ajuda","$swal","fire","title","icon","html","mounted"],"sources":["C:\\Users\\Pedro Uema\\Desktop\\thaiweb\\front-end\\src\\components\\admin\\AlunoAdmin.vue"],"sourcesContent":["<template>\r\n    <div class=\"aluno-admin\">\r\n        <h3>Gerenciamento de Alunos</h3>\r\n        <button type=\"button\" id=\"btnAjuda\" class=\"btn btn-primary btn-floating\" @click=\"ajuda()\">\r\n            <i class=\"fa fa-question-circle\"></i>\r\n        </button>\r\n        <form class=\"row g-3\">\r\n            <div class=\"col-md-6\">\r\n                <label for=\"inputEmail4\" class=\"form-label\">Nome do Aluno</label>\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Nome do Aluno\" v-model=\"nome\">\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <label for=\"inputZip\" class=\"form-label\">CPF do Aluno</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"inputZip\" placeholder=\"123.456.789-10\" v-model=\"cpf\" v-mask=\"'###.###.###-##'\">\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <label for=\"inputZip\" class=\"form-label\">Data de Nascimento</label >\r\n                <input type=\"date\" class=\"form-control\" id=\"inputZip\" v-model=\"dataNasc\">\r\n            </div>\r\n            <div class=\"col-md-4\" >\r\n                <label for=\"inputState\" class=\"form-label\">Plano</label>\r\n                <select class=\"form-select\" v-model=\"plano\">\r\n                    <option value=\"\">Selecione o Plano</option>\r\n                    <option v-for=\"plano in planos\" :key=\"plano.id_plano\" v-bind:value=\"plano.id_plano\">\r\n                        {{ plano.nome_plano }}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <label for=\"inputState\" class=\"form-label\">Turma</label>\r\n                <select id=\"inputState\" class=\"form-select\" v-model=\"turma\">\r\n                    <option value=\"\">Selecione a Turma</option>\r\n                    <option v-for=\"turma in turmas\" :key=\"turma.id_turma\" v-bind:value=\"turma.id_turma\">\r\n                        {{ turma.nome_turma }}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <label for=\"inputZip\" class=\"form-label\">Data de inicio</label >\r\n                <input type=\"date\" class=\"form-control\" id=\"inputZip\" v-model=\"diaPag\">\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <button type=\"button\" id=\"button\" class=\"btn btn-primary\" @click=\"createAluno()\" v-show=\"!editar\">+ SALVAR</button>\r\n                <button type=\"button\" id=\"button\" class=\"btn btn-primary\" @click=\"salvarDados()\" v-show=\"editar\">+ EDITAR</button>\r\n                <button  type=\"button\" class=\"btn btn-danger\" @click=\"limpaDadosFormulario()\" >CANCELAR</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <br/>\r\n    <hr>\r\n        <div class=\"alunos-table\">\r\n            <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n                <button class=\"btn btn-dark\" type=\"button\" v-on:click.prevent=\"abrirRelatorio()\"><i class=\"fa fa-print\"> </i> Imprimir</button>\r\n            </div>\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Nome</th>\r\n                    <th scope=\"col\">CPF</th>\r\n                    <th scope=\"col\">Data Nascimento</th>\r\n                    <th scope=\"col\">Plano</th>\r\n                    <th scope=\"col\">Turma</th>\r\n                    <th scope=\"col\">Data Inicio</th>\r\n                    <th scope=\"col\">Ações</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody class=\"table-group-divider\">\r\n                <tr v-for=\"aluno in alunos\" :key=\"aluno.id_aluno\">\r\n                    <th scope=\"row\">{{ aluno.nome_aluno }}</th>\r\n                    <td>{{ aluno.cpf_aluno }}</td>\r\n                    <td>{{ aluno.datanasc_aluno }}</td>\r\n                    <td>{{ aluno.nome_plano }}</td>\r\n                    <td>{{ aluno.nome_turma }}</td>\r\n                    <td>{{ aluno.diapag_aluno }}</td>\r\n                    <td>\r\n                        <button type=\"button\" id=\"btnAcoes\" class=\"btn btn-success\" @click=\"carregarDadosAluno(aluno.id_aluno)\">\r\n                            <i class=\"fa fa-pencil\"> </i>\r\n                             Editar\r\n                        </button>\r\n                        <button type=\"button\"  id=\"btnAcoes\" class=\"btn btn-danger\" @click=\"deleteAluno(aluno.id_aluno)\">\r\n                            <i class=\"fa fa-trash\"> </i>\r\n                             Excluir\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n// import RelatorioAlunos from '@/components/admin/RelatorioAlunos'\r\n\r\nexport default {\r\n    name: 'AlunoAdmin',\r\n    // components: { RelatorioAlunos },\r\n    data(){\r\n        return {\r\n            URL: \"http://localhost:4000\",\r\n            alunos: [],\r\n            planos: [],\r\n            turmas: [],\r\n            alunoId: 0,\r\n            nome: '',\r\n            cpf: '',\r\n            cpfFormatado: 0,\r\n            dataNasc: '',\r\n            plano: 0,\r\n            turma: 0,\r\n            diaPag: '',\r\n            editar: false\r\n        }\r\n    },\r\n    methods: {\r\n        abrirRelatorio(){\r\n            const win = window.open('http://localhost:8080/relatorioalunos')\r\n            win.focus()\r\n        },\r\n        getAllAlunos() {\r\n            axios.get(`${this.URL}/alunos`).then(response => {\r\n                this.alunos = response.data\r\n            })\r\n        },\r\n        createAluno() {\r\n            this.formatarCPF()\r\n            if(this.validarCpf(this.cpfFormatado))\r\n            {\r\n                const aluno = {\r\n                    nome_aluno: this.nome,\r\n                    cpf_aluno: this.cpf,\r\n                    datanasc_aluno: this.dataNasc,\r\n                    id_plano: this.plano,\r\n                    id_turma: this.turma,\r\n                    diapag_aluno: this.diaPag,\r\n                }\r\n                console.log(aluno);\r\n                axios.post(`${this.URL}/alunos`, aluno).then(response => {\r\n                    this.getAllAlunos();\r\n                });\r\n                this.limpaDadosFormulario();\r\n            }\r\n        },\r\n        carregarDadosAluno(id){\r\n            this.editar = true;\r\n            axios.get(`${this.URL}/alunos/getone/`+id).then(response => {\r\n                const aluno = response.data[0]\r\n                this.alunoId = aluno.id_aluno\r\n                this.nome = aluno.nome_aluno\r\n                this.cpf = aluno.cpf_aluno\r\n                this.dataNasc = aluno.datanasc_formatada\r\n                this.plano = aluno.id_plano\r\n                this.turma = aluno.id_turma\r\n                this.diaPag = aluno.diapag_formatada\r\n            })\r\n        },\r\n        salvarDados(){\r\n            this.formatarCPF()\r\n            if(this.validarCpf(this.cpfFormatado))\r\n            {\r\n                const aluno = {\r\n                    nome_aluno: this.nome,\r\n                    cpf_aluno: this.cpf,\r\n                    datanasc_aluno: this.dataNasc,\r\n                    id_plano: this.plano,\r\n                    id_turma: this.turma,\r\n                    diapag_aluno: this.diaPag,\r\n                }\r\n                axios.put(`${this.URL}/alunos/${this.alunoId}`, aluno).then(response => {\r\n                    this.getAllAlunos();\r\n                });\r\n                this.limpaDadosFormulario();\r\n            }\r\n        },\r\n        deleteAluno(id) {\r\n            axios.delete(this.URL+\"/alunos/delete/\"+id).then(()=>{\r\n                this.getAllAlunos()\r\n            })\r\n        },\r\n        getAllPlanosOptions() {\r\n            axios.get(`${this.URL}/planos/options`).then(response => {\r\n                this.planos = response.data\r\n            })\r\n        },\r\n        getAllTurmasOptions() {\r\n            axios.get(`${this.URL}/turmas/options`).then(response => {\r\n                this.turmas = response.data\r\n            })\r\n        },\r\n        limpaDadosFormulario(){\r\n            this.alunoId = 0;\r\n            this.nome = '';\r\n            this.cpf = '';\r\n            this.dataNasc = '';\r\n            this.plano = 0;\r\n            this.turma = 0;\r\n            this.diaPag = '';\r\n            this.editar = false;\r\n        },\r\n        validarPrimeiroDigito(cpf) {\r\n            let sum = 0;\r\n            for (let i = 0; i < 9; i++) {\r\n                sum += cpf[i] * (10 - i);\r\n            }\r\n            const resto = (sum * 10) % 11;\r\n            if (resto < 10) {\r\n                return cpf[9] == resto;\r\n            }\r\n            return cpf[9] == 0;\r\n        },\r\n        validarSegundoDigito(cpf) {\r\n        let sum = 0;\r\n        for (let i = 0; i < 10; i++) {\r\n            sum += cpf[i] * (11 - i);\r\n        }\r\n        const resto = (sum * 10) % 11;\r\n        if (resto < 10) {\r\n            return cpf[10] == resto;\r\n        }\r\n        return cpf[10] == 0;\r\n        },\r\n        validarRepetido(cpf) {\r\n            const primeiro = cpf[0];\r\n            let diferente = false;\r\n            for(let i = 1; i < cpf.length; i++) {\r\n                if(cpf[i] != primeiro) {\r\n                diferente = true;\r\n                }\r\n            }\r\n            return diferente;\r\n        },\r\n        validarCpf(cpf) {\r\n            if (cpf.length != 11) {\r\n                return false;\r\n            }\r\n            if(!this.validarRepetido(cpf)) {\r\n                return false;\r\n            }\r\n            if (!this.validarPrimeiroDigito(cpf)) {\r\n                return false;\r\n            }\r\n            if (!this.validarSegundoDigito(cpf)) {\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        formatarCPF(){\r\n            this.cpfFormatado = this.cpf.replace(\"-\", \"\").replace(\".\", \"\").replace(\".\", \"\")\r\n        },\r\n        ajuda(){\r\n            this.$swal.fire({\r\n                title: '<h2>Gerenciamento de aluno</h2>',\r\n                icon: 'info',\r\n                html:\r\n                    '<h3 style=\"color:#4da6ff\">Cadastrar novo aluno</h3>'+\r\n                    '<b>IMPORTANTE </b><p>Plano e Turma devem estar previamente cadastrados.</p>' +\r\n                    '<p><b>1- </b>Inserir todos os dados: nome do aluno, cpf(válido) do aluno, data de nascimento, '+\r\n                    'selecionar um plano, selecionar uma turma e data ne inicio.'+\r\n                    '<p><b>2- </b>Após todos dados inseridos clicar no botão \"+SALVAR\" para salvar cadastro ou \"CANCELAR\" '+\r\n                    'para limpar formulário.'+\r\n                    '<h3 style=\"color:#39ac6b\">Editar um aluno</h3>'+\r\n                    '<p><b>1- </b>Na lista abaixo do formulário clicar no botão \"Editar\" na mesma linha correspondente '+\r\n                    'ao aluno que deseja alterar o(s) dado(s).'+\r\n                    '<p><b>2- </b>Após clicar no botão \"Editar\" os dados do respectivo aluno irá carregar no formulário acima, '+\r\n                    'após isso pode alterar o(s) dado(s) que deseja do mesmo.'+\r\n                    '<p><b>3- </b>Após editar, para salvar a(s) alteração(ôs) clicar em \"+EDITAR\" (azul) ou \"CANCELAR\" (vermelho) para cancelar alteração(ôs).'+\r\n                    '<h3 style=\"color:#ff6666\">Excluir um aluno</h3>'+\r\n                    '<p><b>1- </b>Na lista abaixo do formulário, clicar no botão \"Excluir\" na mesma linha correspondente '+\r\n                    'ao aluno que deseja fazer a exclusão.'+\r\n                    '<p><b>2- </b>Após clicar no botão \"Excluir\" o aluno será excluido permanentemente. Para recuperar o mesmo, deve ser '+\r\n                    'feito o passo a passo de \"Cadastrar novo aluno\".'\r\n            })\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getAllAlunos();\r\n        this.getAllPlanosOptions();\r\n        this.getAllTurmasOptions();\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n    #btnAjuda{\r\n        float: right;\r\n        border-radius: 50%;\r\n    }\r\n    #button{\r\n        margin-right: 10px;\r\n    }\r\n    #btnAcoes{\r\n        width:100px;\r\n        height:40px;\r\n        margin-right: 10px;\r\n    }\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}