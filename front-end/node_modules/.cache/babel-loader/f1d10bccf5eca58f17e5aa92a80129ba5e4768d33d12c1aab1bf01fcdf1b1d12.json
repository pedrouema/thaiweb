{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Recebimento\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fa fa-question-circle\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_3 = [_hoisted_2];\nconst _hoisted_4 = {\n  class: \"form-inline\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h5\", null, \"Busque pelo o nome do aluno que deseja receber!\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"form-group mb-2\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"inputZip\",\n  class: \"form-label\"\n}, \"Digite o nome do aluno\", -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fa fa-search\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_10 = {\n  class: \"alunos-table\"\n};\nconst _hoisted_11 = {\n  class: \"table\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Nome\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"CPF\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Plano\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Valor Plano\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Dia Vencimento\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Total à Pagar\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Ação\")])], -1 /* HOISTED */);\nconst _hoisted_13 = {\n  class: \"table-group-divider\"\n};\nconst _hoisted_14 = {\n  scope: \"row\"\n};\nconst _hoisted_15 = [\"onClick\"];\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fa fa-dollar\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"button\", {\n    type: \"button\",\n    id: \"btnAjuda\",\n    class: \"btn btn-primary btn-floating\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.ajuda())\n  }, _hoisted_3), _createElementVNode(\"form\", _hoisted_4, [_hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.nome = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.nome]])]), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-primary\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.buscar())\n  }, [_hoisted_8, _createTextVNode(\" BUSCAR\")])]), _hoisted_9, _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"table\", _hoisted_11, [_hoisted_12, _createElementVNode(\"tbody\", _hoisted_13, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.alunos, aluno => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: aluno.id_aluno\n    }, [_createElementVNode(\"th\", _hoisted_14, _toDisplayString(aluno.nome_aluno), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(aluno.cpf_aluno), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(aluno.nome_plano), 1 /* TEXT */), _createElementVNode(\"td\", null, \"R$\" + _toDisplayString(aluno.valor_plano.toFixed(2)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(aluno.diapag_format), 1 /* TEXT */), _createElementVNode(\"td\", null, \"R$\" + _toDisplayString(aluno.valor_plano.toFixed(2)), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success\",\n      onClick: $event => $options.receber(aluno.id_aluno)\n    }, [_hoisted_16, _createTextVNode(\" Receber \")], 8 /* PROPS */, _hoisted_15)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_hoisted_2","for","scope","_hoisted_1","type","id","onClick","_cache","$event","$options","ajuda","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","$data","nome","buscar","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_createElementBlock","_Fragment","_renderList","alunos","aluno","key","id_aluno","_hoisted_14","_toDisplayString","nome_aluno","cpf_aluno","nome_plano","valor_plano","toFixed","diapag_format","receber","_hoisted_16"],"sources":["C:\\Users\\Pedro Uema\\Desktop\\thaiweb\\front-end\\src\\components\\financeiro\\receberMensalidade.vue"],"sourcesContent":["<template>\r\n    <h3>Recebimento</h3>\r\n    <button type=\"button\" id=\"btnAjuda\" class=\"btn btn-primary btn-floating\" @click=\"ajuda()\">\r\n        <i class=\"fa fa-question-circle\"></i>\r\n    </button>\r\n    <form class=\"form-inline\">\r\n        <h5>Busque pelo o nome do aluno que deseja receber!</h5>\r\n        <div class=\"form-group mb-2\">\r\n            <label for=\"inputZip\" class=\"form-label\">Digite o nome do aluno</label >\r\n            <input type=\"text\" class=\"form-control\" v-model=\"nome\">\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-primary\" @click=\"buscar()\">\r\n            <i class=\"fa fa-search\"></i> BUSCAR</button>\r\n    </form>\r\n    <br>\r\n    <div class=\"alunos-table\">\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Nome</th>\r\n                    <th scope=\"col\">CPF</th>\r\n                    <th scope=\"col\">Plano</th>\r\n                    <th scope=\"col\">Valor Plano</th>\r\n                    <th scope=\"col\">Dia Vencimento</th>\r\n                    <th scope=\"col\">Total à Pagar</th>\r\n                    <th scope=\"col\">Ação</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody class=\"table-group-divider\">\r\n                <tr v-for=\"aluno in alunos\" :key=\"aluno.id_aluno\">\r\n                    <th scope=\"row\">{{ aluno.nome_aluno }}</th>\r\n                    <td>{{ aluno.cpf_aluno }}</td>\r\n                    <td>{{ aluno.nome_plano }}</td>\r\n                    <td>R${{ aluno.valor_plano.toFixed(2) }}</td>\r\n                    <td>{{ aluno.diapag_format }}</td>\r\n                    <td>R${{ aluno.valor_plano.toFixed(2) }}</td>\r\n                    <td>\r\n                        <button type=\"button\" class=\"btn btn-success\" @click=\"receber(aluno.id_aluno)\">\r\n                            <i class=\"fa fa-dollar\"> </i>\r\n                             Receber\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nexport default {\r\n    name: 'ReceberMensalidade',\r\n    data(){\r\n        return {\r\n            URL: \"http://localhost:4000\",\r\n            alunos: [],\r\n            nome: '',\r\n            dataRecebimento: '',\r\n            valorRecebimento: '',\r\n            mensalidade: false,\r\n            plano: '',\r\n            mesRecebimento: '',\r\n            mesAtual: '',\r\n            diaAtual: '',\r\n            anoAtual: '',\r\n            dataAtual: '',\r\n\r\n        }\r\n    },\r\n    methods: {\r\n        buscar() {\r\n            axios.get(`${this.URL}/alunos/getnome/`+this.nome).then(response => {\r\n                this.alunos = response.data\r\n            })\r\n            this.limpaDados()\r\n        },\r\n        async receber(id_aluno) {\r\n            \r\n            for(let i = 0; i < this.alunos.length; i++)\r\n            {\r\n                if(this.alunos[i].id_aluno == id_aluno)\r\n                    this.mensalidade = this.alunos[i].tipo_mensal\r\n            }\r\n            if(!this.mensalidade){\r\n                const { value: formValues } = await this.$swal.fire({\r\n                    title: 'Receber Pagamento! ',\r\n                    html:\r\n                        '<label for=\"inputState\" class=\"form-label\">Digite o valor recebido</label>' +\r\n                        '<input type=\"number\" id=\"swal-input1\" class=\"swal2-input\"> </br></br>' +\r\n                        '________________________________________________________________ </br></br>' +\r\n                        '<label for=\"inputState\" class=\"form-label\">Selecione a data do pagamento</label>' +\r\n                        '<input type=\"date\" id=\"swal-input2\" class=\"swal2-input\">',\r\n                    focusConfirm: false,\r\n                    preConfirm: () => {\r\n                        return [\r\n                        document.getElementById('swal-input1').value,\r\n                        document.getElementById('swal-input2').value\r\n                        ]\r\n                    }\r\n                })\r\n                if (formValues) {\r\n                    this.valorRecebimento = formValues[0]\r\n                    this.dataRecebimento = formValues[1]\r\n                    this.showAlertReceber(id_aluno)\r\n                }\r\n            }\r\n            else{\r\n                const { value: formValues } = await this.$swal.fire({\r\n                    title: 'Receber Pagamento! ',\r\n                    html:\r\n                        '<label for=\"inputState\" class=\"form-label\">Selecione o mês à receber:</label>' +\r\n                        '<select type=\"number\" id=\"swal-input1\" class=\"swal2-input\">' +\r\n                            '<option value=\"01\">Janeiro</option>' +\r\n                            '<option value=\"02\">Fevereiro</option>' +\r\n                            '<option value=\"03\">Março</option>' +\r\n                            '<option value=\"04\">Abril</option>' +\r\n                            '<option value=\"05\">Maio</option>' +\r\n                            '<option value=\"06\">Junho</option>' +\r\n                            '<option value=\"07\">Julho</option>' +\r\n                            '<option value=\"08\">Agosto</option>' +\r\n                            '<option value=\"09\">Setembro</option>' +\r\n                            '<option value=\"10\">Outubro</option>' +\r\n                            '<option value=\"11\">Novembro</option>' +\r\n                            '<option value=\"12\">Dezembro</option>' +\r\n                        '</select>' +\r\n                        '________________________________________________________________ </br></br>' +\r\n                        '<label for=\"inputState\" class=\"form-label\">Digite o valor recebido</label>' +\r\n                        '<input type=\"number\" id=\"swal-input2\" class=\"swal2-input\"> </br></br>' +\r\n                        '________________________________________________________________ </br></br>' +\r\n                        '<label for=\"inputState\" class=\"form-label\">Selecione a data do pagamento</label>' +\r\n                        '<input type=\"date\" id=\"swal-input3\" class=\"swal2-input\">',\r\n                    focusConfirm: false,\r\n                    preConfirm: () => {\r\n                        return [\r\n                        document.getElementById('swal-input1').value,\r\n                        document.getElementById('swal-input2').value,\r\n                        document.getElementById('swal-input3').value\r\n                        ]\r\n                    }\r\n                })\r\n                if (formValues) {\r\n                    this.mesRecebimento = formValues[0]\r\n                    this.valorRecebimento = formValues[1]\r\n                    this.dataRecebimento = formValues[2]\r\n                    this.showAlertReceber(id_aluno)\r\n                }\r\n            }\r\n        },\r\n        showAlertReceber(id_aluno) {\r\n            // Use sweetalert2\r\n            const swalWithBootstrapButtons = this.$swal.mixin({\r\n            customClass: {\r\n                confirmButton: 'btn btn-success',\r\n                cancelButton: 'btn btn-danger'\r\n            },\r\n            buttonsStyling: false\r\n            })\r\n\r\n            swalWithBootstrapButtons.fire({\r\n            title: 'Deseja realmente receber este pagamento?',\r\n            text: \"\",\r\n            icon: 'question',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Sim, receber agora!',\r\n            cancelButtonText: 'Não, cancelar!',\r\n            reverseButtons: true\r\n            }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                swalWithBootstrapButtons.fire(\r\n                'PAGAMENTO RECEBIDO COM SUCESSO!',\r\n                '',\r\n                'success'\r\n                )\r\n                this.criaRecebimento(id_aluno)\r\n            } else if (\r\n                /* Read more about handling dismissals below */\r\n                result.dismiss === this.$swal.DismissReason.cancel\r\n            ) {\r\n                swalWithBootstrapButtons.fire(\r\n                'Cancelado! ',\r\n                'Pagamento não recebido! ',\r\n                'error'\r\n                )\r\n            }\r\n            })\r\n        },\r\n        criaRecebimento(id_aluno) {\r\n            const recebimento = {\r\n                mes_referente: this.mesRecebimento+'-'+this.anoAtual,\r\n                valor_recebimento: this.valorRecebimento,\r\n                data_recebimento: this.dataRecebimento,\r\n                id_aluno: id_aluno\r\n            }\r\n            axios.post(`${this.URL}/recebimentos`, recebimento).then(response => {\r\n                \r\n            })\r\n            this.limpaDados()\r\n            window.location.reload(true)\r\n        },\r\n        pegarDataAtual() {\r\n            const data = new Date()\r\n            const dia = String(data.getDate()).padStart(2, '0')\r\n            const mes = String(data.getMonth() + 1).padStart(2, '0')\r\n            const ano = String(data.getFullYear())\r\n            const atual = `${dia}/${mes}/${ano}`\r\n            this.mesAtual = mes\r\n            this.diaAtual = dia\r\n            this.anoAtual = ano\r\n            this.dataAtual = atual\r\n        },\r\n        limpaDados() {\r\n            this.nome = '';\r\n            this.valorRecebimento = '';\r\n            this.dataRecebimento = '';\r\n            this.mesRecebimento = '';\r\n        },      \r\n        ajuda(){\r\n            this.$swal.fire({\r\n                title: '<h2>Recebimento</h2>',\r\n                icon: 'info',\r\n                html:\r\n                    '<h3 style=\"color:#39ac6b\"\">Receber um pagamento</h3>'+\r\n                    '<b>IMPORTANTE </b><p>O aluno deve estar previamente cadastrado e matriculado em um plano.</p>' +\r\n                    '<p><b>1- </b>Digite o nome do aluno que deseja receber e clique em \"BUSCAR\".'+\r\n                    '<p><b>2- </b>Após clicar em \"BUSCAR\" irá carregar uma lista abaixo do formulário, clique no botão \"Receber\"(verde) '+\r\n                    'para iniciar processo de recebimento.'+\r\n                    '<p><b>3- </b>Irá abrir uma tela para inserir os dados do recebimento, podendo ser para alunos do tipo mensalidade(3.1) ou avulso(3.2)'+\r\n                    '<p><b>3.1- </b>Caso seja um aluno do tipo mensalidade, preencher os seguintes dados do recebimento: \"Selecione o mês à receber\", '+\r\n                    '\"Digite o valor recebido\" e \"Selecione a data do recebimento\" e clique em \"OK\"'+\r\n                    '<p><b>3.2- </b>Caso seja um aluno do tipo avulso, preencher os seguintes dados do recebimento: '+\r\n                    '\"Digite o valor recebido\" e \"Selecione a data do recebimento\" e clique em \"OK\"'+\r\n                    '<p><b>4- </b>Irá abrir uma tela para confirmar se deseja realmente receber o pagamento, clique '+\r\n                    'em \"Sim, receber agora!\" para comfirmar ou \"Não, cancelar!\" para cancelar a ação.'\r\n            })\r\n        }\r\n    },\r\n    mounted() {\r\n        this.pegarDataAtual();\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}