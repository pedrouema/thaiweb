{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Alunos com mensalidade do mês atual em atraso\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"alunos-table\"\n};\nconst _hoisted_3 = {\n  class: \"table\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Nome\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"CPF\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Plano\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Valor Plano\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Dia Vencimento\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  id: \"mesAtraso\",\n  scope: \"col\"\n}, \"Mês em Atraso\")])], -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"table-group-divider\"\n};\nconst _hoisted_6 = {\n  scope: \"row\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.atrasados, aluno => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: aluno.id_aluno\n    }, [_createElementVNode(\"th\", _hoisted_6, _toDisplayString(aluno.nome_aluno), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(aluno.cpf_aluno), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(aluno.nome_plano), 1 /* TEXT */), _createElementVNode(\"td\", null, \"R$ \" + _toDisplayString(aluno.valor_plano.toFixed(2)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(aluno.diapag_format), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(this.mesEscrito), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","scope","id","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createElementBlock","_Fragment","_renderList","$data","atrasados","aluno","key","id_aluno","_hoisted_6","_toDisplayString","nome_aluno","cpf_aluno","nome_plano","valor_plano","toFixed","diapag_format","mesEscrito"],"sources":["C:\\Users\\Pedro Uema\\Desktop\\thaiweb\\front-end\\src\\components\\financeiro\\mensalidadesAtrasadas.vue"],"sourcesContent":["<template>\r\n    <h3>Alunos com mensalidade do mês atual em atraso</h3>\r\n    \r\n    <div class=\"alunos-table\">\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Nome</th>\r\n                    <th scope=\"col\">CPF</th>\r\n                    <th scope=\"col\">Plano</th>\r\n                    <th scope=\"col\">Valor Plano</th>\r\n                    <th scope=\"col\">Dia Vencimento</th>\r\n                    <th id=\"mesAtraso\" scope=\"col\">Mês em Atraso</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody class=\"table-group-divider\">\r\n                <tr v-for=\"aluno in atrasados\" :key=\"aluno.id_aluno\">\r\n                    <th scope=\"row\">{{ aluno.nome_aluno }}</th>\r\n                    <td>{{ aluno.cpf_aluno }}</td>\r\n                    <td>{{ aluno.nome_plano }}</td>\r\n                    <td>R$ {{ aluno.valor_plano.toFixed(2) }}</td>\r\n                    <td>{{ aluno.diapag_format }}</td>\r\n                    <td>{{ this.mesEscrito }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    name: 'MensalidadesAtrasadas',\r\n    data(){\r\n        return {\r\n            URL: \"http://localhost:4000\",\r\n            alunos: [],\r\n            atrasado: [],\r\n            pago: [],\r\n            atrasados: [],\r\n            nome: '',\r\n            mesAtual: '',\r\n            mesEscrito: '',\r\n            diaAtual: '',\r\n            anoAtual: '',\r\n            dataAtual: '',\r\n            mesAno: '',\r\n        }\r\n    },\r\n    methods: {\r\n        //RETORNAR TODOS ALUNOS TIPO PLANO MENSALIDADE\r\n        getAllAlunosMensalidade() {\r\n            this.$forceUpdate()\r\n            axios.get(`${this.URL}/alunosmensalidade`).then(response => {\r\n                this.alunos = response.data\r\n                this.getAllJaPagouNoMes();\r\n            })\r\n        },\r\n        //FUNÇÃO TESTE\r\n        getAllJaPagouNoMes() {\r\n            this.pegarDataAtual();\r\n            axios.get(`${this.URL}/recebimentoatrasados/${this.mesAno}`).then(response => {\r\n                this.pago = response.data\r\n                this.listaEmAtrasos();\r\n            })\r\n        },\r\n        listaEmAtrasos(){\r\n            console.log(this.alunos);//Todos que é mensalidade\r\n            console.log(this.pago);//Todos que é mensalidade e que pagou no mes atual\r\n\r\n            for(let i = 0; i < this.alunos.length; i++)\r\n            {\r\n                \r\n                \r\n                for(let j = 0; j < this.pago.length; j++)\r\n                {\r\n                    if(this.alunos[i].id_aluno != this.pago[j].id_aluno && this.alunos[i].diapag_format < this.diaAtual)\r\n                    {\r\n                        this.atrasados.push(this.alunos[i]);\r\n                    }\r\n                }\r\n                if(this.alunos[i].diapag_format < this.diaAtual)\r\n                {\r\n                    this.atrasados.push(this.alunos[i]);\r\n                }\r\n            }\r\n            console.log(this.atrasados);\r\n\r\n            // for(let i = 0; i < this.pago.length; i++)\r\n            // {\r\n            //     for(let j = 0; j < this.alunos.length; j++)\r\n            //     {\r\n            //         if(this.pago[i].id_aluno == this.alunos[j].id_aluno && this.diaAtual > this.alunos[j].diapag_format)\r\n            //         {\r\n            //             this.atrasados.push(this.alunos[j])\r\n            //             console.log(this.atrasados);\r\n            //             //this.alunos.splice(j, 1)\r\n            //         }\r\n            //     }\r\n            // }\r\n        },\r\n        pegarDataAtual() {\r\n            const data = new Date()\r\n            const dia = String(data.getDate()).padStart(2, '0')\r\n            const mes = String(data.getMonth() + 1).padStart(2, '0')\r\n            const ano = String(data.getFullYear())\r\n            const atual = `${dia}/${mes}/${ano}`\r\n            this.mesAtual = mes\r\n            this.diaAtual = dia\r\n            this.anoAtual = ano\r\n            this.dataAtual = atual\r\n            this.mesAno = mes+'-'+ano\r\n            if(this.mesAtual == '01')\r\n                this.mesEscrito = 'Janeiro'\r\n            else if(this.mesAtual == '02')\r\n                this.mesEscrito = 'Fevereiro'\r\n            else if(this.mesAtual == '03')\r\n                this.mesEscrito = 'Março'\r\n            else if(this.mesAtual == '04')\r\n                this.mesEscrito = 'Abril'\r\n            else if(this.mesAtual == '05')\r\n                this.mesEscrito = 'Maio'\r\n            else if(this.mesAtual == '06')\r\n                this.mesEscrito = 'Junho'\r\n            else if(this.mesAtual == '07')\r\n                this.mesEscrito = 'Julho'\r\n            else if(this.mesAtual == '08')\r\n                this.mesEscrito = 'Agosto'\r\n            else if(this.mesAtual == '09')\r\n                this.mesEscrito = 'Setembro'\r\n            else if(this.mesAtual == '10')\r\n                this.mesEscrito = 'Outubro'\r\n            else if(this.mesAtual == '11')\r\n                this.mesEscrito = 'Novembro'\r\n            else \r\n                this.mesEscrito = 'Dezembro'\r\n            console.log(this.diaAtual);\r\n        },\r\n        limpaDados() {\r\n            this.atrasado = '';\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getAllAlunosMensalidade();\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n    th#mesAtraso{\r\n        background-color: rgb(192, 56, 56);\r\n    }\r\n</style>"],"mappings":";gCACIA,mBAAA,CAAsD,YAAlD,+CAA6C;;EAE5CC,KAAK,EAAC;AAAc;;EACdA,KAAK,EAAC;AAAO;gCAChBD,mBAAA,CASQ,gB,aARJA,mBAAA,CAOK,a,aANDA,mBAAA,CAAyB;EAArBE,KAAK,EAAC;AAAK,GAAC,MAAI,G,aACpBF,mBAAA,CAAwB;EAApBE,KAAK,EAAC;AAAK,GAAC,KAAG,G,aACnBF,mBAAA,CAA0B;EAAtBE,KAAK,EAAC;AAAK,GAAC,OAAK,G,aACrBF,mBAAA,CAAgC;EAA5BE,KAAK,EAAC;AAAK,GAAC,aAAW,G,aAC3BF,mBAAA,CAAmC;EAA/BE,KAAK,EAAC;AAAK,GAAC,gBAAc,G,aAC9BF,mBAAA,CAAiD;EAA7CG,EAAE,EAAC,WAAW;EAACD,KAAK,EAAC;GAAM,eAAa,E;;EAG7CD,KAAK,EAAC;AAAqB;;EAEtBC,KAAK,EAAC;AAAK;;6DAhB/BE,UAAsD,EAEtDJ,mBAAA,CAuBM,OAvBNK,UAuBM,GAtBFL,mBAAA,CAqBQ,SArBRM,UAqBQ,GApBJC,UASQ,EACRP,mBAAA,CASQ,SATRQ,UASQ,I,kBARJC,mBAAA,CAOKC,SAAA,QAAAC,WAAA,CAPeC,KAAA,CAAAC,SAAS,EAAlBC,KAAK;yBAAhBL,mBAAA,CAOK;MAP2BM,GAAG,EAAED,KAAK,CAACE;QACvChB,mBAAA,CAA2C,MAA3CiB,UAA2C,EAAAC,gBAAA,CAAxBJ,KAAK,CAACK,UAAU,kBACnCnB,mBAAA,CAA8B,YAAAkB,gBAAA,CAAvBJ,KAAK,CAACM,SAAS,kBACtBpB,mBAAA,CAA+B,YAAAkB,gBAAA,CAAxBJ,KAAK,CAACO,UAAU,kBACvBrB,mBAAA,CAA8C,YAA1C,KAAG,GAAAkB,gBAAA,CAAGJ,KAAK,CAACQ,WAAW,CAACC,OAAO,qBACnCvB,mBAAA,CAAkC,YAAAkB,gBAAA,CAA3BJ,KAAK,CAACU,aAAa,kBAC1BxB,mBAAA,CAA8B,YAAAkB,gBAAA,MAAlBO,UAAU,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}