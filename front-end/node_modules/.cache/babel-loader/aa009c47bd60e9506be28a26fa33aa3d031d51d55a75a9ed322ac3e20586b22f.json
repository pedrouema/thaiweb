{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nimport { Vue as OurVue } from '../vue';\nimport { NAME, PROP_NAME } from '../constants/config';\nimport { cloneDeep } from './clone-deep';\nimport { getRaw } from './get';\nimport { isArray, isPlainObject, isString, isUndefined } from './inspect';\nimport { getOwnPropertyNames } from './object';\nimport { warn } from './warn'; // Config manager class\n\nvar BvConfig = /*#__PURE__*/function () {\n  function BvConfig() {\n    _classCallCheck(this, BvConfig);\n    this.$_config = {};\n  } // Method to merge in user config parameters\n\n  _createClass(BvConfig, [{\n    key: \"setConfig\",\n    value: function setConfig() {\n      var _this = this;\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      /* istanbul ignore next */\n      if (!isPlainObject(config)) {\n        return;\n      }\n      var configKeys = getOwnPropertyNames(config);\n      configKeys.forEach(function (key) {\n        /* istanbul ignore next */\n        var subConfig = config[key];\n        if (key === 'breakpoints') {\n          /* istanbul ignore if */\n          if (!isArray(subConfig) || subConfig.length < 2 || subConfig.some(function (b) {\n            return !isString(b) || b.length === 0;\n          })) {\n            warn('\"breakpoints\" must be an array of at least 2 breakpoint names', NAME);\n          } else {\n            _this.$_config[key] = cloneDeep(subConfig);\n          }\n        } else if (isPlainObject(subConfig)) {\n          // Component prop defaults\n          _this.$_config[key] = getOwnPropertyNames(subConfig).reduce(function (config, prop) {\n            if (!isUndefined(subConfig[prop])) {\n              config[prop] = cloneDeep(subConfig[prop]);\n            }\n            return config;\n          }, _this.$_config[key] || {});\n        }\n      });\n    } // Clear the config\n  }, {\n    key: \"resetConfig\",\n    value: function resetConfig() {\n      this.$_config = {};\n    } // Returns a deep copy of the user config\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return cloneDeep(this.$_config);\n    } // Returns a deep copy of the config value\n  }, {\n    key: \"getConfigValue\",\n    value: function getConfigValue(key) {\n      var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n      return cloneDeep(getRaw(this.$_config, key, defaultValue));\n    }\n  }]);\n  return BvConfig;\n}(); // Method for applying a global config\n\nexport var setConfig = function setConfig() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var Vue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : OurVue;\n  // Ensure we have a `$bvConfig` Object on the Vue prototype\n  // We set on Vue and OurVue just in case consumer has not set an alias of `vue`\n  Vue.prototype[PROP_NAME] = OurVue.prototype[PROP_NAME] = Vue.prototype[PROP_NAME] || OurVue.prototype[PROP_NAME] || new BvConfig(); // Apply the config values\n\n  Vue.prototype[PROP_NAME].setConfig(config);\n}; // Method for resetting the user config\n// Exported for testing purposes only\n\nexport var resetConfig = function resetConfig() {\n  if (OurVue.prototype[PROP_NAME] && OurVue.prototype[PROP_NAME].resetConfig) {\n    OurVue.prototype[PROP_NAME].resetConfig();\n  }\n};","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","Vue","OurVue","NAME","PROP_NAME","cloneDeep","getRaw","isArray","isPlainObject","isString","isUndefined","getOwnPropertyNames","warn","BvConfig","$_config","value","setConfig","_this","config","arguments","undefined","configKeys","forEach","subConfig","some","b","reduce","prop","resetConfig","getConfig","getConfigValue","defaultValue"],"sources":["C:/Users/Pedro Uema/Desktop/thaiweb/front-end/node_modules/bootstrap-vue/esm/utils/config-set.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nimport { Vue as OurVue } from '../vue';\r\nimport { NAME, PROP_NAME } from '../constants/config';\r\nimport { cloneDeep } from './clone-deep';\r\nimport { getRaw } from './get';\r\nimport { isArray, isPlainObject, isString, isUndefined } from './inspect';\r\nimport { getOwnPropertyNames } from './object';\r\nimport { warn } from './warn'; // Config manager class\r\n\r\nvar BvConfig = /*#__PURE__*/function () {\r\n  function BvConfig() {\r\n    _classCallCheck(this, BvConfig);\r\n\r\n    this.$_config = {};\r\n  } // Method to merge in user config parameters\r\n\r\n\r\n  _createClass(BvConfig, [{\r\n    key: \"setConfig\",\r\n    value: function setConfig() {\r\n      var _this = this;\r\n\r\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n\r\n      /* istanbul ignore next */\r\n      if (!isPlainObject(config)) {\r\n        return;\r\n      }\r\n\r\n      var configKeys = getOwnPropertyNames(config);\r\n      configKeys.forEach(function (key) {\r\n        /* istanbul ignore next */\r\n        var subConfig = config[key];\r\n\r\n        if (key === 'breakpoints') {\r\n          /* istanbul ignore if */\r\n          if (!isArray(subConfig) || subConfig.length < 2 || subConfig.some(function (b) {\r\n            return !isString(b) || b.length === 0;\r\n          })) {\r\n            warn('\"breakpoints\" must be an array of at least 2 breakpoint names', NAME);\r\n          } else {\r\n            _this.$_config[key] = cloneDeep(subConfig);\r\n          }\r\n        } else if (isPlainObject(subConfig)) {\r\n          // Component prop defaults\r\n          _this.$_config[key] = getOwnPropertyNames(subConfig).reduce(function (config, prop) {\r\n            if (!isUndefined(subConfig[prop])) {\r\n              config[prop] = cloneDeep(subConfig[prop]);\r\n            }\r\n\r\n            return config;\r\n          }, _this.$_config[key] || {});\r\n        }\r\n      });\r\n    } // Clear the config\r\n\r\n  }, {\r\n    key: \"resetConfig\",\r\n    value: function resetConfig() {\r\n      this.$_config = {};\r\n    } // Returns a deep copy of the user config\r\n\r\n  }, {\r\n    key: \"getConfig\",\r\n    value: function getConfig() {\r\n      return cloneDeep(this.$_config);\r\n    } // Returns a deep copy of the config value\r\n\r\n  }, {\r\n    key: \"getConfigValue\",\r\n    value: function getConfigValue(key) {\r\n      var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\r\n      return cloneDeep(getRaw(this.$_config, key, defaultValue));\r\n    }\r\n  }]);\r\n\r\n  return BvConfig;\r\n}(); // Method for applying a global config\r\n\r\n\r\nexport var setConfig = function setConfig() {\r\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n  var Vue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : OurVue;\r\n  // Ensure we have a `$bvConfig` Object on the Vue prototype\r\n  // We set on Vue and OurVue just in case consumer has not set an alias of `vue`\r\n  Vue.prototype[PROP_NAME] = OurVue.prototype[PROP_NAME] = Vue.prototype[PROP_NAME] || OurVue.prototype[PROP_NAME] || new BvConfig(); // Apply the config values\r\n\r\n  Vue.prototype[PROP_NAME].setConfig(config);\r\n}; // Method for resetting the user config\r\n// Exported for testing purposes only\r\n\r\nexport var resetConfig = function resetConfig() {\r\n  if (OurVue.prototype[PROP_NAME] && OurVue.prototype[PROP_NAME].resetConfig) {\r\n    OurVue.prototype[PROP_NAME].resetConfig();\r\n  }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}