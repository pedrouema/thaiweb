{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Component, Property, Event, EventHandler, L10n, compile, isNullOrUndefined, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, detach, append, Animation } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, KeyboardEvents, setValue, getValue, ChildProperty } from '@syncfusion/ej2-base';\nimport { Collection, Complex, Browser, Ajax, getUniqueID, closest, remove } from '@syncfusion/ej2-base';\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { select, selectAll } from '@syncfusion/ej2-base';\nvar CONTROL_WRAPPER = 'e-upload e-control-wrapper';\nvar INPUT_WRAPPER = 'e-file-select';\nvar DROP_AREA = 'e-file-drop';\nvar DROP_WRAPPER = 'e-file-select-wrap';\nvar LIST_PARENT = 'e-upload-files';\nvar FILE = 'e-upload-file-list';\nvar STATUS = 'e-file-status';\nvar ACTION_BUTTONS = 'e-upload-actions';\nvar UPLOAD_BUTTONS = 'e-file-upload-btn e-css e-btn e-flat e-primary';\nvar CLEAR_BUTTONS = 'e-file-clear-btn e-css e-btn e-flat';\nvar FILE_NAME = 'e-file-name';\nvar FILE_TYPE = 'e-file-type';\nvar FILE_SIZE = 'e-file-size';\nvar REMOVE_ICON = 'e-file-remove-btn';\nvar DELETE_ICON = 'e-file-delete-btn';\nvar SPINNER_PANE = 'e-spinner-pane';\nvar ABORT_ICON = 'e-file-abort-btn';\nvar RETRY_ICON = 'e-file-reload-btn';\nvar DRAG_HOVER = 'e-upload-drag-hover';\nvar PROGRESS_WRAPPER = 'e-upload-progress-wrap';\nvar PROGRESSBAR = 'e-upload-progress-bar';\nvar PROGRESSBAR_TEXT = 'e-progress-bar-text';\nvar UPLOAD_INPROGRESS = 'e-upload-progress';\nvar UPLOAD_SUCCESS = 'e-upload-success';\nvar UPLOAD_FAILED = 'e-upload-fails';\nvar TEXT_CONTAINER = 'e-file-container';\nvar VALIDATION_FAILS = 'e-validation-fails';\nvar RTL = 'e-rtl';\nvar DISABLED = 'e-disabled';\nvar RTL_CONTAINER = 'e-rtl-container';\nvar ICON_FOCUSED = 'e-clear-icon-focus';\nvar PROGRESS_INNER_WRAPPER = 'e-progress-inner-wrap';\nvar PAUSE_UPLOAD = 'e-file-pause-btn';\nvar RESUME_UPLOAD = 'e-file-play-btn';\nvar RESTRICT_RETRY = 'e-restrict-retry';\nvar wrapperAttr = ['title', 'style', 'class'];\nvar FORM_UPLOAD = 'e-form-upload';\nvar HIDDEN_INPUT = 'e-hidden-file-input';\nvar INVALID_FILE = 'e-file-invalid';\nvar INFORMATION = 'e-file-information';\nvar FilesProp = /** @class */function (_super) {\n  __extends(FilesProp, _super);\n  function FilesProp() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property('')], FilesProp.prototype, \"name\", void 0);\n  __decorate([Property(null)], FilesProp.prototype, \"size\", void 0);\n  __decorate([Property('')], FilesProp.prototype, \"type\", void 0);\n  return FilesProp;\n}(ChildProperty);\nexport { FilesProp };\nvar ButtonsProps = /** @class */function (_super) {\n  __extends(ButtonsProps, _super);\n  function ButtonsProps() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property('Browse...')], ButtonsProps.prototype, \"browse\", void 0);\n  __decorate([Property('Upload')], ButtonsProps.prototype, \"upload\", void 0);\n  __decorate([Property('Clear')], ButtonsProps.prototype, \"clear\", void 0);\n  return ButtonsProps;\n}(ChildProperty);\nexport { ButtonsProps };\nvar AsyncSettings = /** @class */function (_super) {\n  __extends(AsyncSettings, _super);\n  function AsyncSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property('')], AsyncSettings.prototype, \"saveUrl\", void 0);\n  __decorate([Property('')], AsyncSettings.prototype, \"removeUrl\", void 0);\n  __decorate([Property(0)], AsyncSettings.prototype, \"chunkSize\", void 0);\n  __decorate([Property(3)], AsyncSettings.prototype, \"retryCount\", void 0);\n  __decorate([Property(500)], AsyncSettings.prototype, \"retryAfterDelay\", void 0);\n  return AsyncSettings;\n}(ChildProperty);\nexport { AsyncSettings };\n/**\n * The uploader component allows to upload images, documents, and other files from local to server.\n * ```html\n * <input type='file' name='images[]' id='upload'/>\n * ```\n * ```typescript\n * <script>\n *   var uploadObj = new Uploader();\n *   uploadObj.appendTo('#upload');\n * </script>\n * ```\n */\nvar Uploader = /** @class */function (_super) {\n  __extends(Uploader, _super);\n  /**\n   * Triggers when change the Uploader value.\n   *\n   * @param {UploaderModel} options - Specifies the Uploader model.\n   * @param {string | HTMLInputElement} element - Specifies the element to render as component.\n   * @private\n   */\n  function Uploader(options, element) {\n    var _this = _super.call(this, options, element) || this;\n    _this.initialAttr = {\n      accept: null,\n      multiple: false,\n      disabled: false\n    };\n    _this.uploadedFilesData = [];\n    _this.base64String = [];\n    _this.isForm = false;\n    _this.allTypes = false;\n    _this.pausedData = [];\n    _this.uploadMetaData = [];\n    _this.tabIndex = '0';\n    _this.btnTabIndex = '0';\n    _this.disableKeyboardNavigation = false;\n    _this.count = -1;\n    _this.actionCompleteCount = 0;\n    _this.flag = true;\n    _this.selectedFiles = [];\n    _this.uploaderName = 'UploadFiles';\n    _this.fileStreams = [];\n    _this.newFileRef = 0;\n    _this.isFirstFileOnSelection = false;\n    _this.dragCounter = 0;\n    _this.isAngular = false;\n    /**\n     * Get the file item(li) which are shown in file list.\n     *\n     * @private\n     */\n    _this.fileList = [];\n    /**\n     * Get the data of files which are shown in file list.\n     *\n     * @private\n     */\n    _this.filesData = [];\n    _this.uploaderOptions = options;\n    return _this;\n  }\n  /**\n   * Calls internally if any of the property value is changed.\n   *\n   * @param {UploaderModel} newProp - Returns the dynamic property value of the component.\n   * @param {UploaderModel} oldProp - Returns the previous property value of the component.\n   * @returns {void}\n   * @private\n   */\n  Uploader.prototype.onPropertyChanged = function (newProp, oldProp) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n      switch (prop) {\n        case 'allowedExtensions':\n          this.setExtensions(this.allowedExtensions);\n          this.clearAll();\n          break;\n        case 'enabled':\n          this.setControlStatus();\n          break;\n        case 'multiple':\n          this.setMultipleSelection();\n          break;\n        case 'enableRtl':\n          this.setRTL();\n          this.reRenderFileList();\n          break;\n        case 'buttons':\n          this.buttons.browse = isNullOrUndefined(this.buttons.browse) ? '' : this.buttons.browse;\n          this.buttons.clear = isNullOrUndefined(this.buttons.clear) ? '' : this.buttons.clear;\n          this.buttons.upload = isNullOrUndefined(this.buttons.upload) ? '' : this.buttons.upload;\n          this.renderButtonTemplates();\n          break;\n        case 'dropArea':\n          this.unBindDropEvents();\n          this.updateDropArea();\n          break;\n        case 'htmlAttributes':\n          this.updateHTMLAttrToElement();\n          this.updateHTMLAttrToWrapper();\n          this.checkHTMLAttributes(true);\n          break;\n        case 'files':\n          this.renderPreLoadFiles();\n          break;\n        case 'directoryUpload':\n          this.updateDirectoryAttributes();\n          break;\n        case 'template':\n          this.clearAll();\n          break;\n        case 'minFileSize':\n        case 'maxFileSize':\n        case 'autoUpload':\n          this.clearAll();\n          break;\n        case 'sequentialUpload':\n          this.clearAll();\n          break;\n        case 'locale':\n          this.l10n.setLocale(this.locale);\n          this.setLocalizedTexts();\n          this.preLocaleObj = getValue('currentLocale', this.l10n);\n          break;\n        case 'cssClass':\n          this.setCSSClass(oldProp.cssClass);\n          break;\n      }\n    }\n  };\n  Uploader.prototype.setLocalizedTexts = function () {\n    if (isNullOrUndefined(this.template)) {\n      if (typeof this.buttons.browse === 'string') {\n        this.browseButton.innerText = this.buttons.browse === 'Browse...' ? this.localizedTexts('Browse') : this.buttons.browse;\n        this.browseButton.setAttribute('title', this.browseButton.innerText);\n        if (this.uploadWrapper && !isNullOrUndefined(this.uploadWrapper.querySelector('.' + DROP_AREA))) {\n          this.uploadWrapper.querySelector('.' + DROP_AREA).innerHTML = this.localizedTexts('dropFilesHint');\n        }\n      }\n      this.updateFileList();\n    }\n  };\n  Uploader.prototype.getKeyValue = function (val) {\n    var keyValue;\n    for (var _i = 0, _a = Object.keys(this.preLocaleObj); _i < _a.length; _i++) {\n      var key = _a[_i];\n      if (this.preLocaleObj[\"\" + key] === val) {\n        keyValue = key;\n      }\n    }\n    return keyValue;\n  };\n  Uploader.prototype.updateFileList = function () {\n    var element;\n    /* istanbul ignore next */\n    if (this.fileList.length > 0 && !isNullOrUndefined(this.uploadWrapper.querySelector('.' + LIST_PARENT))) {\n      for (var i = 0; i < this.fileList.length; i++) {\n        element = this.fileList[i].querySelector('.e-file-status');\n        element.innerHTML = this.localizedTexts(this.getKeyValue(this.filesData[i].status));\n        this.filesData[i].status = this.localizedTexts(this.getKeyValue(this.filesData[i].status));\n        if (this.fileList[i].classList.contains(UPLOAD_SUCCESS)) {\n          this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('delete'));\n        }\n        if (this.fileList[i].querySelector('.e-file-play-btn')) {\n          this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('resume'));\n        }\n        if (this.fileList[i].querySelector('.e-file-remove-btn')) {\n          this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('remove'));\n        }\n        if (this.fileList[i].querySelector('.e-file-reload-btn')) {\n          this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('retry'));\n        }\n        if (!this.autoUpload) {\n          this.uploadButton.innerText = this.buttons.upload === 'Upload' ? this.localizedTexts('Upload') : this.buttons.upload;\n          this.uploadButton.setAttribute('title', this.localizedTexts('Upload'));\n          this.clearButton.innerText = this.buttons.clear === 'Clear' ? this.localizedTexts('Clear') : this.buttons.clear;\n          this.clearButton.setAttribute('title', this.localizedTexts('Clear'));\n        }\n      }\n    }\n  };\n  Uploader.prototype.reRenderFileList = function () {\n    if (this.listParent) {\n      detach(this.listParent);\n      this.listParent = null;\n      this.fileList = [];\n      this.createFileList(this.filesData);\n      if (this.actionButtons) {\n        this.removeActionButtons();\n        this.renderActionButtons();\n        this.checkActionButtonStatus();\n      }\n    }\n  };\n  Uploader.prototype.preRender = function () {\n    this.localeText = {\n      Browse: 'Browse...',\n      Clear: 'Clear',\n      Upload: 'Upload',\n      invalidFileName: 'File Name is not allowed',\n      dropFilesHint: 'Or drop files here',\n      invalidMaxFileSize: 'File size is too large',\n      invalidMinFileSize: 'File size is too small',\n      invalidFileType: 'File type is not allowed',\n      uploadFailedMessage: 'File failed to upload',\n      uploadSuccessMessage: 'File uploaded successfully',\n      removedSuccessMessage: 'File removed successfully',\n      removedFailedMessage: 'Unable to remove file',\n      inProgress: 'Uploading',\n      readyToUploadMessage: 'Ready to upload',\n      abort: 'Abort',\n      remove: 'Remove',\n      cancel: 'Cancel',\n      delete: 'Delete file',\n      pauseUpload: 'File upload paused',\n      pause: 'Pause',\n      resume: 'Resume',\n      retry: 'Retry',\n      fileUploadCancel: 'File upload canceled',\n      invalidFileSelection: 'Invalid files selected',\n      totalFiles: 'Total files',\n      size: 'Size'\n    };\n    this.l10n = new L10n('uploader', this.localeText, this.locale);\n    this.preLocaleObj = getValue('currentLocale', this.l10n);\n    this.formRendered();\n    this.updateHTMLAttrToElement();\n    this.checkHTMLAttributes(false);\n    var ejInstance = getValue('ej2_instances', this.element);\n    /* istanbul ignore next */\n    if (this.element.tagName === 'EJS-UPLOADER') {\n      var inputElement = this.createElement('input', {\n        attrs: {\n          type: 'file'\n        }\n      });\n      var index = 0;\n      for (index; index < this.element.attributes.length; index++) {\n        if (this.element.attributes[index].nodeName !== 'id') {\n          inputElement.setAttribute(this.element.attributes[index].nodeName, this.element.attributes[index].nodeValue);\n        } else if (this.element.attributes[index].nodeName === 'id') {\n          inputElement.setAttribute(this.element.attributes[index].nodeName, getUniqueID('uploader'));\n        }\n        inputElement.innerHTML = this.element.innerHTML;\n      }\n      if (!inputElement.hasAttribute('name')) {\n        inputElement.setAttribute('name', 'UploadFiles');\n      }\n      this.element.appendChild(inputElement);\n      this.element = inputElement;\n      setValue('ej2_instances', ejInstance, this.element);\n    }\n    /* istanbul ignore next */\n    if (ejInstance[0].isPureReactComponent) {\n      if (!isNullOrUndefined(ejInstance[0].props.name)) {\n        this.element.setAttribute('name', ejInstance[0].props.name);\n      } else if (!isNullOrUndefined(ejInstance[0].props.id) && isNullOrUndefined(ejInstance[0].props.name)) {\n        this.element.setAttribute('name', ejInstance[0].props.id);\n      } else {\n        this.element.setAttribute('name', 'UploadFiles');\n      }\n    }\n    if (isNullOrUndefined(this.element.getAttribute('name'))) {\n      this.element.setAttribute('name', this.element.getAttribute('id'));\n    }\n    if (!this.element.hasAttribute('type')) {\n      this.element.setAttribute('type', 'file');\n    }\n    this.updateDirectoryAttributes();\n    this.keyConfigs = {\n      enter: 'enter'\n    };\n    if (this.element.hasAttribute('tabindex')) {\n      this.tabIndex = this.element.getAttribute('tabindex');\n    }\n    this.browserName = Browser.info.name;\n    this.uploaderName = this.element.getAttribute('name');\n  };\n  Uploader.prototype.formRendered = function () {\n    var parentEle = closest(this.element, 'form');\n    if (!isNullOrUndefined(parentEle)) {\n      for (; parentEle && parentEle !== document.documentElement; parentEle = parentEle.parentElement) {\n        if (parentEle.tagName === 'FORM') {\n          this.isForm = true;\n          this.formElement = parentEle;\n          parentEle.setAttribute('enctype', 'multipart/form-data');\n          parentEle.setAttribute('encoding', 'multipart/form-data');\n        }\n      }\n    }\n  };\n  Uploader.prototype.getPersistData = function () {\n    return this.addOnPersist(['filesData']);\n  };\n  /**\n   * Return the module name of the component.\n   *\n   * @returns {string} Returns the component name.\n   */\n  Uploader.prototype.getModuleName = function () {\n    return 'uploader';\n  };\n  Uploader.prototype.updateDirectoryAttributes = function () {\n    if (this.directoryUpload) {\n      this.element.setAttribute('directory', 'true');\n      this.element.setAttribute('webkitdirectory', 'true');\n    } else {\n      this.element.removeAttribute('directory');\n      this.element.removeAttribute('webkitdirectory');\n    }\n  };\n  /**\n   * To Initialize the control rendering\n   *\n   * @private\n   * @returns {void}\n   */\n  Uploader.prototype.render = function () {\n    this.renderBrowseButton();\n    this.initializeUpload();\n    this.updateHTMLAttrToWrapper();\n    this.wireEvents();\n    this.setMultipleSelection();\n    this.setExtensions(this.allowedExtensions);\n    this.setRTL();\n    this.renderPreLoadFiles();\n    this.setControlStatus();\n    this.setCSSClass();\n  };\n  Uploader.prototype.renderBrowseButton = function () {\n    this.browseButton = this.createElement('button', {\n      className: 'e-css e-btn',\n      attrs: {\n        'type': 'button'\n      }\n    });\n    this.browseButton.setAttribute('tabindex', this.tabIndex);\n    if (typeof this.buttons.browse === 'string') {\n      this.browseButton.textContent = this.buttons.browse === 'Browse...' ? this.localizedTexts('Browse') : this.buttons.browse;\n      this.browseButton.setAttribute('title', this.browseButton.innerText);\n    } else {\n      this.browseButton.appendChild(this.buttons.browse);\n    }\n    this.element.setAttribute('aria-label', 'Uploader');\n  };\n  Uploader.prototype.renderActionButtons = function () {\n    this.element.setAttribute('tabindex', '-1');\n    this.actionButtons = this.createElement('div', {\n      className: ACTION_BUTTONS\n    });\n    this.uploadButton = this.createElement('button', {\n      className: UPLOAD_BUTTONS,\n      attrs: {\n        'type': 'button',\n        'tabindex': this.btnTabIndex\n      }\n    });\n    this.clearButton = this.createElement('button', {\n      className: CLEAR_BUTTONS,\n      attrs: {\n        'type': 'button',\n        'tabindex': this.btnTabIndex\n      }\n    });\n    this.actionButtons.appendChild(this.clearButton);\n    this.actionButtons.appendChild(this.uploadButton);\n    this.renderButtonTemplates();\n    this.uploadWrapper.appendChild(this.actionButtons);\n    this.browseButton.blur();\n    if (!this.isPreloadFiles) {\n      this.uploadButton.focus();\n    }\n    this.wireActionButtonEvents();\n  };\n  /* istanbul ignore next */\n  Uploader.prototype.serverActionButtonsEventBind = function (element) {\n    if (element && !this.isForm) {\n      this.browseButton.blur();\n      this.actionButtons = element;\n      this.uploadButton = this.actionButtons.querySelector('.e-file-upload-btn');\n      this.clearButton = this.actionButtons.querySelector('.e-file-clear-btn');\n      this.uploadButton.focus();\n      this.unwireActionButtonEvents();\n      this.wireActionButtonEvents();\n      this.checkActionButtonStatus();\n    }\n  };\n  Uploader.prototype.wireActionButtonEvents = function () {\n    EventHandler.add(this.uploadButton, 'click', this.uploadButtonClick, this);\n    EventHandler.add(this.clearButton, 'click', this.clearButtonClick, this);\n  };\n  Uploader.prototype.unwireActionButtonEvents = function () {\n    EventHandler.remove(this.uploadButton, 'click', this.uploadButtonClick);\n    EventHandler.remove(this.clearButton, 'click', this.clearButtonClick);\n  };\n  Uploader.prototype.removeActionButtons = function () {\n    if (this.actionButtons) {\n      this.unwireActionButtonEvents();\n      detach(this.actionButtons);\n      this.actionButtons = null;\n    }\n  };\n  Uploader.prototype.renderButtonTemplates = function () {\n    if (typeof this.buttons.browse === 'string') {\n      this.browseButton.textContent = this.buttons.browse === 'Browse...' ? this.localizedTexts('Browse') : this.buttons.browse;\n      this.browseButton.setAttribute('title', this.browseButton.textContent);\n    } else {\n      this.browseButton.innerHTML = '';\n      this.browseButton.appendChild(this.buttons.browse);\n    }\n    if (this.uploadButton) {\n      var uploadText = isNullOrUndefined(this.buttons.upload) ? 'Upload' : this.buttons.upload;\n      this.buttons.upload = uploadText;\n      if (typeof this.buttons.upload === 'string') {\n        this.uploadButton.textContent = this.buttons.upload === 'Upload' ? this.localizedTexts('Upload') : this.buttons.upload;\n        this.uploadButton.setAttribute('title', this.uploadButton.textContent);\n      } else {\n        this.uploadButton.innerHTML = '';\n        this.uploadButton.appendChild(this.buttons.upload);\n      }\n    }\n    if (this.clearButton) {\n      var clearText = isNullOrUndefined(this.buttons.clear) ? 'Clear' : this.buttons.clear;\n      this.buttons.clear = clearText;\n      if (typeof this.buttons.clear === 'string') {\n        this.clearButton.textContent = this.buttons.clear === 'Clear' ? this.localizedTexts('Clear') : this.buttons.clear;\n        this.clearButton.setAttribute('title', this.clearButton.textContent);\n      } else {\n        this.clearButton.innerHTML = '';\n        this.clearButton.appendChild(this.buttons.clear);\n      }\n    }\n  };\n  Uploader.prototype.initializeUpload = function () {\n    this.element.setAttribute('tabindex', '-1');\n    var inputWrapper = this.createElement('span', {\n      className: INPUT_WRAPPER\n    });\n    this.element.parentElement.insertBefore(inputWrapper, this.element);\n    this.dropAreaWrapper = this.createElement('div', {\n      className: DROP_WRAPPER\n    });\n    this.element.parentElement.insertBefore(this.dropAreaWrapper, this.element);\n    inputWrapper.appendChild(this.element);\n    this.dropAreaWrapper.appendChild(this.browseButton);\n    this.dropAreaWrapper.appendChild(inputWrapper);\n    this.uploadWrapper = this.createElement('div', {\n      className: CONTROL_WRAPPER\n    });\n    this.dropAreaWrapper.parentElement.insertBefore(this.uploadWrapper, this.dropAreaWrapper);\n    this.uploadWrapper.appendChild(this.dropAreaWrapper);\n    this.setDropArea();\n  };\n  Uploader.prototype.renderPreLoadFiles = function () {\n    if (this.files.length) {\n      if (this.enablePersistence && this.filesData.length) {\n        this.createFileList(this.filesData);\n        return;\n      }\n      if (isNullOrUndefined(this.files[0].size)) {\n        return;\n      }\n      this.isPreloadFiles = true;\n      var files = [].slice.call(this.files);\n      var filesData = [];\n      if (!this.multiple) {\n        this.clearData();\n        files = [files[0]];\n      }\n      for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {\n        var data = files_1[_i];\n        var fileData = {\n          name: data.name + '.' + data.type.split('.')[data.type.split('.').length - 1],\n          rawFile: '',\n          size: data.size,\n          status: this.localizedTexts('uploadSuccessMessage'),\n          type: data.type,\n          validationMessages: {\n            minSize: '',\n            maxSize: ''\n          },\n          statusCode: '2'\n        };\n        filesData.push(fileData);\n        this.filesData.push(fileData);\n      }\n      this.createFileList(filesData);\n      if (!this.autoUpload && this.listParent && !this.actionButtons && (!this.isForm || this.allowUpload()) && this.showFileList) {\n        this.renderActionButtons();\n      }\n      this.checkActionButtonStatus();\n      if (this.sequentialUpload) {\n        this.count = this.filesData.length - 1;\n      }\n      this.isPreloadFiles = false;\n    }\n  };\n  Uploader.prototype.checkActionButtonStatus = function () {\n    if (this.actionButtons) {\n      var length_1 = this.uploadWrapper.querySelectorAll('.' + VALIDATION_FAILS).length + this.uploadWrapper.querySelectorAll('.e-upload-fails:not(.e-upload-progress)').length + this.uploadWrapper.querySelectorAll('span.' + UPLOAD_SUCCESS).length + this.uploadWrapper.querySelectorAll('span.' + UPLOAD_INPROGRESS).length;\n      if (length_1 > 0 && length_1 === this.uploadWrapper.querySelectorAll('li').length) {\n        this.uploadButton.setAttribute('disabled', 'disabled');\n      } else {\n        this.uploadButton.removeAttribute('disabled');\n      }\n    }\n  };\n  Uploader.prototype.setDropArea = function () {\n    var dropTextArea = this.dropAreaWrapper.querySelector('.e-file-drop');\n    if (this.dropArea) {\n      this.dropZoneElement = typeof this.dropArea !== 'string' ? this.dropArea : select(this.dropArea, document);\n      var element = this.element;\n      var enableDropText = false;\n      while (element.parentNode) {\n        element = element.parentNode;\n        if (element === this.dropZoneElement) {\n          enableDropText = true;\n          if (!dropTextArea) {\n            this.createDropTextHint();\n          } else {\n            dropTextArea.innerHTML = this.localizedTexts('dropFilesHint');\n          }\n        }\n      }\n      if (!enableDropText && dropTextArea) {\n        remove(dropTextArea);\n      }\n    } else if (!isNullOrUndefined(this.uploaderOptions) && this.uploaderOptions.dropArea === undefined) {\n      this.createDropTextHint();\n      this.dropZoneElement = this.uploadWrapper;\n      this.setProperties({\n        dropArea: this.uploadWrapper\n      }, true);\n    }\n    this.bindDropEvents();\n  };\n  Uploader.prototype.updateDropArea = function () {\n    if (this.dropArea) {\n      this.setDropArea();\n    } else {\n      this.dropZoneElement = null;\n      var dropTextArea = this.dropAreaWrapper.querySelector('.e-file-drop');\n      if (dropTextArea) {\n        remove(dropTextArea);\n      }\n    }\n  };\n  Uploader.prototype.createDropTextHint = function () {\n    var fileDropArea = this.createElement('span', {\n      className: DROP_AREA\n    });\n    fileDropArea.innerHTML = this.localizedTexts('dropFilesHint');\n    this.dropAreaWrapper.appendChild(fileDropArea);\n  };\n  Uploader.prototype.updateHTMLAttrToElement = function () {\n    if (!isNullOrUndefined(this.htmlAttributes)) {\n      for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n        var pro = _a[_i];\n        if (wrapperAttr.indexOf(pro) < 0) {\n          this.element.setAttribute(pro, this.htmlAttributes[\"\" + pro]);\n        }\n      }\n    }\n  };\n  Uploader.prototype.updateHTMLAttrToWrapper = function () {\n    if (!isNullOrUndefined(this.htmlAttributes)) {\n      for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n        var pro = _a[_i];\n        if (wrapperAttr.indexOf(pro) > -1) {\n          if (pro === 'class') {\n            var updatedClassValues = this.htmlAttributes[\"\" + pro].replace(/\\s+/g, ' ').trim();\n            if (updatedClassValues !== '') {\n              addClass([this.uploadWrapper], updatedClassValues.split(' '));\n            }\n          } else if (pro === 'style') {\n            var uploadStyle = this.uploadWrapper.getAttribute(pro);\n            uploadStyle = !isNullOrUndefined(uploadStyle) ? uploadStyle + this.htmlAttributes[\"\" + pro] : this.htmlAttributes[\"\" + pro];\n            this.uploadWrapper.setAttribute(pro, uploadStyle);\n          } else {\n            this.uploadWrapper.setAttribute(pro, this.htmlAttributes[\"\" + pro]);\n          }\n        }\n      }\n    }\n  };\n  Uploader.prototype.setMultipleSelection = function () {\n    if (this.multiple && !this.element.hasAttribute('multiple')) {\n      var newAttr = document.createAttribute('multiple');\n      newAttr.value = 'multiple';\n      this.element.setAttributeNode(newAttr);\n    } else if (!this.multiple) {\n      this.element.removeAttribute('multiple');\n    }\n  };\n  Uploader.prototype.checkAutoUpload = function (fileData) {\n    if (this.autoUpload) {\n      if (this.sequentialUpload) {\n        /* istanbul ignore next */\n        this.sequenceUpload(fileData);\n      } else {\n        this.upload(fileData);\n      }\n      this.removeActionButtons();\n    } else if (!this.actionButtons) {\n      this.renderActionButtons();\n    }\n    this.checkActionButtonStatus();\n  };\n  Uploader.prototype.sequenceUpload = function (fileData) {\n    if (this.filesData.length - fileData.length === 0 || this.filesData[this.filesData.length - fileData.length - 1].statusCode !== '1') {\n      if (this.multiple || this.count < 0) {\n        ++this.count;\n      }\n      var isFileListCreated = this.showFileList ? false : true;\n      if (typeof this.filesData[this.count] === 'object') {\n        this.isFirstFileOnSelection = false;\n        this.upload(this.filesData[this.count], isFileListCreated);\n        if (this.filesData[this.count].statusCode === '0') {\n          this.sequenceUpload(fileData);\n        }\n      } else {\n        --this.count;\n      }\n    }\n  };\n  Uploader.prototype.setCSSClass = function (oldCSSClass) {\n    var updatedOldCssClass = oldCSSClass;\n    if (!isNullOrUndefined(oldCSSClass)) {\n      updatedOldCssClass = oldCSSClass.replace(/\\s+/g, ' ').trim();\n    }\n    if (!isNullOrUndefined(oldCSSClass) && updatedOldCssClass !== '') {\n      removeClass([this.uploadWrapper], updatedOldCssClass.split(' '));\n    }\n    var updatedCssClassValue = this.cssClass;\n    if (!isNullOrUndefined(this.cssClass) && this.cssClass !== '') {\n      updatedCssClassValue = this.cssClass.replace(/\\s+/g, ' ').trim();\n    }\n    if (!isNullOrUndefined(this.cssClass) && updatedCssClassValue !== '') {\n      addClass([this.uploadWrapper], updatedCssClassValue.split(updatedCssClassValue.indexOf(',') > -1 ? ',' : ' '));\n    }\n  };\n  Uploader.prototype.wireEvents = function () {\n    EventHandler.add(this.browseButton, 'click', this.browseButtonClick, this);\n    EventHandler.add(this.element, 'change', this.onSelectFiles, this);\n    EventHandler.add(document, 'click', this.removeFocus, this);\n    this.keyboardModule = new KeyboardEvents(this.uploadWrapper, {\n      keyAction: this.keyActionHandler.bind(this),\n      keyConfigs: this.keyConfigs,\n      eventName: 'keydown'\n    });\n    if (this.isForm) {\n      EventHandler.add(this.formElement, 'reset', this.resetForm, this);\n    }\n  };\n  Uploader.prototype.unWireEvents = function () {\n    EventHandler.remove(this.browseButton, 'click', this.browseButtonClick);\n    EventHandler.remove(this.element, 'change', this.onSelectFiles);\n    EventHandler.remove(document, 'click', this.removeFocus);\n    if (this.isForm) {\n      EventHandler.remove(this.formElement, 'reset', this.resetForm);\n    }\n    if (this.keyboardModule) {\n      this.keyboardModule.destroy();\n    }\n  };\n  Uploader.prototype.resetForm = function () {\n    this.clearAll();\n  };\n  Uploader.prototype.keyActionHandler = function (e) {\n    var targetElement = e.target;\n    switch (e.action) {\n      case 'enter':\n        if (e.target === this.clearButton) {\n          this.clearButtonClick();\n        } else if (e.target === this.uploadButton) {\n          this.uploadButtonClick();\n        } else if (e.target === this.browseButton) {\n          this.browseButtonClick();\n        } else if (targetElement.classList.contains(PAUSE_UPLOAD)) {\n          var metaData = this.getCurrentMetaData(null, e);\n          metaData.file.statusCode = '4';\n          metaData.file.status = this.localizedTexts('pauseUpload');\n          this.abortUpload(metaData, false);\n        } else if (targetElement.classList.contains(RESUME_UPLOAD)) {\n          this.resumeUpload(this.getCurrentMetaData(null, e), e);\n        } else if (targetElement.classList.contains(RETRY_ICON)) {\n          var metaData = this.getCurrentMetaData(null, e);\n          if (!isNullOrUndefined(metaData)) {\n            metaData.file.statusCode = '1';\n            metaData.file.status = this.localizedTexts('readyToUploadMessage');\n            this.chunkUpload(metaData.file);\n          } else {\n            var target = e.target.parentElement;\n            var fileData = this.filesData[this.fileList.indexOf(target)];\n            this.retry(fileData);\n          }\n        } else {\n          this.removeFiles(e);\n          if (!targetElement.classList.contains(ABORT_ICON)) {\n            this.browseButton.focus();\n          }\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n    }\n  };\n  Uploader.prototype.getCurrentMetaData = function (fileInfo, e) {\n    var fileData;\n    var targetMetaData;\n    if (isNullOrUndefined(fileInfo)) {\n      var target = e.target.parentElement;\n      fileData = this.filesData[this.fileList.indexOf(target)];\n    } else {\n      fileData = fileInfo;\n    }\n    for (var i = 0; i < this.uploadMetaData.length; i++) {\n      if (this.uploadMetaData[i].file.name === fileData.name) {\n        targetMetaData = this.uploadMetaData[i];\n      }\n    }\n    return targetMetaData;\n  };\n  Uploader.prototype.removeFocus = function () {\n    if (this.uploadWrapper && this.listParent && this.listParent.querySelector('.' + ICON_FOCUSED)) {\n      document.activeElement.blur();\n      this.listParent.querySelector('.' + ICON_FOCUSED).classList.remove(ICON_FOCUSED);\n    }\n  };\n  Uploader.prototype.browseButtonClick = function () {\n    this.element.click();\n  };\n  Uploader.prototype.uploadButtonClick = function () {\n    if (this.sequentialUpload) {\n      this.sequenceUpload(this.filesData);\n    } else {\n      this.upload(this.filesData);\n    }\n  };\n  Uploader.prototype.clearButtonClick = function () {\n    this.clearAll();\n    /* istanbul ignore next */\n    if (this.sequentialUpload) {\n      this.count = -1;\n    }\n    this.actionCompleteCount = 0;\n  };\n  Uploader.prototype.bindDropEvents = function () {\n    if (this.dropZoneElement) {\n      EventHandler.add(this.dropZoneElement, 'drop', this.dropElement, this);\n      EventHandler.add(this.dropZoneElement, 'dragover', this.dragHover, this);\n      EventHandler.add(this.dropZoneElement, 'dragleave', this.onDragLeave, this);\n      EventHandler.add(this.dropZoneElement, 'paste', this.onPasteFile, this);\n      EventHandler.add(this.dropZoneElement, 'dragenter', this.onDragEnter, this);\n    }\n  };\n  Uploader.prototype.unBindDropEvents = function () {\n    if (this.dropZoneElement) {\n      EventHandler.remove(this.dropZoneElement, 'drop', this.dropElement);\n      EventHandler.remove(this.dropZoneElement, 'dragover', this.dragHover);\n      EventHandler.remove(this.dropZoneElement, 'dragleave', this.onDragLeave);\n      EventHandler.remove(this.dropZoneElement, 'dragenter', this.onDragEnter);\n    }\n  };\n  Uploader.prototype.onDragEnter = function (e) {\n    if (!this.enabled) {\n      return;\n    }\n    this.dropZoneElement.classList.add(DRAG_HOVER);\n    this.dragCounter = this.dragCounter + 1;\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  Uploader.prototype.onDragLeave = function () {\n    if (!this.enabled) {\n      return;\n    }\n    this.dragCounter = this.dragCounter - 1;\n    if (!this.dragCounter) {\n      this.dropZoneElement.classList.remove(DRAG_HOVER);\n    }\n  };\n  Uploader.prototype.dragHover = function (e) {\n    if (!this.enabled) {\n      return;\n    }\n    if (this.dropEffect !== 'Default') {\n      e.dataTransfer.dropEffect = this.dropEffect.toLowerCase();\n    }\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  /* istanbul ignore next */\n  Uploader.prototype.dropElement = function (e) {\n    this.dragCounter = 0;\n    this.dropZoneElement.classList.remove(DRAG_HOVER);\n    this.onSelectFiles(e);\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  /* istanbul ignore next */\n  Uploader.prototype.onPasteFile = function (event) {\n    var item = event.clipboardData.items;\n    if (event.type == 'paste' && this.browserName !== 'msie' && this.browserName !== 'edge' && this.browserName !== 'safari') {\n      this.element.files = event.clipboardData.files;\n    }\n    if (item.length !== 1) {\n      return;\n    }\n    var pasteFile = [].slice.call(item)[0];\n    if (pasteFile.kind === 'file' && pasteFile.type.match('^image/')) {\n      this.renderSelectedFiles(event, [pasteFile.getAsFile()], false, true);\n    }\n  };\n  Uploader.prototype.getSelectedFiles = function (index) {\n    var data = [];\n    var liElement = this.fileList[index];\n    var allFiles = this.getFilesData();\n    var nameElements = +liElement.getAttribute('data-files-count');\n    var startIndex = 0;\n    for (var i = 0; i < index; i++) {\n      startIndex += +this.fileList[i].getAttribute('data-files-count');\n    }\n    for (var j = startIndex; j < startIndex + nameElements; j++) {\n      data.push(allFiles[j]);\n    }\n    return data;\n  };\n  Uploader.prototype.removeFiles = function (args) {\n    if (!this.enabled) {\n      return;\n    }\n    var selectedElement = args.target.parentElement;\n    var index = this.fileList.indexOf(selectedElement);\n    var liElement = this.fileList[index];\n    var formUpload = this.isFormUpload();\n    var fileData = formUpload ? this.getSelectedFiles(index) : this.getFilesInArray(this.filesData[index]);\n    if (isNullOrUndefined(fileData)) {\n      return;\n    }\n    if (args.target.classList.contains(ABORT_ICON) && !formUpload) {\n      fileData[0].statusCode = '5';\n      if (!isNullOrUndefined(liElement)) {\n        var spinnerTarget = liElement.querySelector('.' + ABORT_ICON);\n        createSpinner({\n          target: spinnerTarget,\n          width: '20px'\n        });\n        showSpinner(spinnerTarget);\n      }\n      if (this.sequentialUpload) {\n        /* istanbul ignore next */\n        this.uploadSequential();\n      }\n      if (!liElement.classList.contains(RESTRICT_RETRY)) {\n        this.checkActionComplete(true);\n      }\n    } else if (!closest(args.target, '.' + SPINNER_PANE)) {\n      this.remove(fileData, false, false, true, args);\n    }\n    this.element.value = '';\n    this.checkActionButtonStatus();\n  };\n  Uploader.prototype.removeFilesData = function (file, customTemplate) {\n    var index;\n    if (customTemplate) {\n      if (!this.showFileList) {\n        index = this.filesData.indexOf(file);\n        this.filesData.splice(index, 1);\n      }\n      return;\n    }\n    var selectedElement = this.getLiElement(file);\n    if (isNullOrUndefined(selectedElement)) {\n      return;\n    }\n    detach(selectedElement);\n    index = this.fileList.indexOf(selectedElement);\n    this.fileList.splice(index, 1);\n    this.filesData.splice(index, 1);\n    if (this.fileList.length === 0 && !isNullOrUndefined(this.listParent)) {\n      detach(this.listParent);\n      this.listParent = null;\n      this.removeActionButtons();\n    }\n    if (this.sequentialUpload) {\n      /* istanbul ignore next */\n      if (index <= this.count) {\n        --this.count;\n      }\n    }\n  };\n  Uploader.prototype.removeUploadedFile = function (file, eventArgs, removeDirectly, custom) {\n    var _this = this;\n    var selectedFiles = file;\n    var ajax = new Ajax(this.asyncSettings.removeUrl, 'POST', true, null);\n    ajax.emitError = false;\n    var formData = new FormData();\n    ajax.beforeSend = function (e) {\n      eventArgs.currentRequest = ajax.httpRequest;\n      if (!removeDirectly) {\n        _this.trigger('removing', eventArgs, function (eventArgs) {\n          if (eventArgs.cancel) {\n            e.cancel = true;\n          } else {\n            _this.removingEventCallback(eventArgs, formData, selectedFiles, file);\n          }\n        });\n      } else {\n        _this.removingEventCallback(eventArgs, formData, selectedFiles, file);\n      }\n    };\n    ajax.onLoad = function (e) {\n      _this.removeCompleted(e, selectedFiles, custom);\n      return {};\n    };\n    /* istanbul ignore next */\n    ajax.onError = function (e) {\n      _this.removeFailed(e, selectedFiles, custom);\n      return {};\n    };\n    ajax.send(formData);\n  };\n  Uploader.prototype.removingEventCallback = function (eventArgs, formData, selectedFiles, file) {\n    /* istanbul ignore next */\n    var name = this.element.getAttribute('name');\n    var liElement = this.getLiElement(file);\n    if (!isNullOrUndefined(liElement) && (!isNullOrUndefined(liElement.querySelector('.' + DELETE_ICON)) || !isNullOrUndefined(liElement.querySelector('.' + REMOVE_ICON)))) {\n      var spinnerTarget = liElement.querySelector('.' + DELETE_ICON) ? liElement.querySelector('.' + DELETE_ICON) : liElement.querySelector('.' + REMOVE_ICON);\n      createSpinner({\n        target: spinnerTarget,\n        width: '20px'\n      });\n      showSpinner(spinnerTarget);\n    }\n    if (eventArgs.postRawFile && !isNullOrUndefined(selectedFiles.rawFile) && selectedFiles.rawFile !== '') {\n      formData.append(name, selectedFiles.rawFile, selectedFiles.name);\n    } else {\n      formData.append(name, selectedFiles.name);\n    }\n    this.updateFormData(formData, eventArgs.customFormData);\n  };\n  /* istanbul ignore next */\n  Uploader.prototype.updateFormData = function (formData, customData) {\n    if (customData.length > 0 && customData[0]) {\n      var _loop_1 = function (i) {\n        var data = customData[i];\n        // eslint-disable-next-line @typescript-eslint/tslint/config\n        var value = Object.keys(data).map(function (e) {\n          return data[\"\" + e];\n        });\n        formData.append(Object.keys(data)[0], value);\n      };\n      for (var i = 0; i < customData.length; i++) {\n        _loop_1(i);\n      }\n    }\n  };\n  /* istanbul ignore next */\n  Uploader.prototype.updateCustomheader = function (request, currentRequest) {\n    if (currentRequest.length > 0 && currentRequest[0]) {\n      var _loop_2 = function (i) {\n        var data = currentRequest[i];\n        // eslint-disable-next-line @typescript-eslint/tslint/config\n        var value = Object.keys(data).map(function (e) {\n          return data[\"\" + e];\n        });\n        request.setRequestHeader(Object.keys(data)[0], value);\n      };\n      for (var i = 0; i < currentRequest.length; i++) {\n        _loop_2(i);\n      }\n    }\n  };\n  Uploader.prototype.removeCompleted = function (e, files, customTemplate) {\n    var response = e && e.currentTarget ? this.getResponse(e) : null;\n    var status = e.target;\n    if (status.readyState === 4 && status.status >= 200 && status.status <= 299) {\n      var args = {\n        e: e,\n        response: response,\n        operation: 'remove',\n        file: this.updateStatus(files, this.localizedTexts('removedSuccessMessage'), '2')\n      };\n      this.trigger('success', args);\n      this.removeFilesData(files, customTemplate);\n      var index = this.uploadedFilesData.indexOf(files);\n      this.uploadedFilesData.splice(index, 1);\n      this.trigger('change', {\n        files: this.uploadedFilesData\n      });\n    } else {\n      this.removeFailed(e, files, customTemplate);\n    }\n  };\n  Uploader.prototype.removeFailed = function (e, files, customTemplate) {\n    var response = e && e.currentTarget ? this.getResponse(e) : null;\n    var args = {\n      e: e,\n      response: response,\n      operation: 'remove',\n      file: this.updateStatus(files, this.localizedTexts('removedFailedMessage'), '0')\n    };\n    if (!customTemplate) {\n      var index = this.filesData.indexOf(files);\n      var rootElement = this.fileList[index];\n      if (rootElement) {\n        rootElement.classList.remove(UPLOAD_SUCCESS);\n        rootElement.classList.add(UPLOAD_FAILED);\n        var statusElement = rootElement.querySelector('.' + STATUS);\n        if (statusElement) {\n          statusElement.classList.remove(UPLOAD_SUCCESS);\n          statusElement.classList.add(UPLOAD_FAILED);\n        }\n      }\n      this.checkActionButtonStatus();\n    }\n    this.trigger('failure', args);\n    var liElement = this.getLiElement(files);\n    /* istanbul ignore next */\n    if (!isNullOrUndefined(liElement) && !isNullOrUndefined(liElement.querySelector('.' + DELETE_ICON))) {\n      var spinnerTarget = liElement.querySelector('.' + DELETE_ICON);\n      hideSpinner(spinnerTarget);\n      detach(liElement.querySelector('.e-spinner-pane'));\n    }\n  };\n  /* istanbul ignore next */\n  Uploader.prototype.getFilesFromFolder = function (event) {\n    this.filesEntries = [];\n    var items = this.multiple ? event.dataTransfer.items : [event.dataTransfer.items[0]];\n    var validDirectoryUpload = this.checkDirectoryUpload(items);\n    if (!validDirectoryUpload) {\n      return;\n    }\n    var _loop_3 = function (i) {\n      var item = items[i].webkitGetAsEntry();\n      if (item.isFile) {\n        var files_2 = [];\n        item.file(function (fileObj) {\n          var path = item.fullPath;\n          files_2.push({\n            'path': path,\n            'file': fileObj\n          });\n        });\n        this_1.renderSelectedFiles(event, files_2, true);\n      } else if (item.isDirectory) {\n        this_1.traverseFileTree(item, event);\n      }\n    };\n    var this_1 = this;\n    for (var i = 0; i < items.length; i++) {\n      _loop_3(i);\n    }\n  };\n  /* istanbul ignore next */\n  Uploader.prototype.checkDirectoryUpload = function (items) {\n    for (var i = 0; items && i < items.length; i++) {\n      var item = items[i].webkitGetAsEntry();\n      if (item.isDirectory) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n  /* istanbul ignore next */\n  Uploader.prototype.traverseFileTree = function (item, event) {\n    /* eslint-enable @typescript-eslint/explicit-module-boundary-types */\n    if (item.isFile) {\n      this.filesEntries.push(item);\n    } else if (item.isDirectory) {\n      var directoryReader = item.createReader();\n      this.readFileFromDirectory(directoryReader, event);\n    }\n  };\n  /* istanbul ignore next */\n  Uploader.prototype.readFileFromDirectory = function (directoryReader, event) {\n    var _this = this;\n    directoryReader.readEntries(function (entries) {\n      for (var i = 0; i < entries.length; i++) {\n        _this.traverseFileTree(entries[i], event);\n      }\n      _this.pushFilesEntries(event);\n      if (entries.length) {\n        _this.readFileFromDirectory(directoryReader);\n      }\n    });\n  };\n  Uploader.prototype.pushFilesEntries = function (event) {\n    var _this = this;\n    var files = [];\n    var _loop_4 = function (i) {\n      this_2.filesEntries[i].file(function (fileObj) {\n        if (_this.filesEntries.length) {\n          var path = _this.filesEntries[i].fullPath;\n          files.push({\n            'path': path,\n            'file': fileObj\n          });\n          if (i === _this.filesEntries.length - 1) {\n            _this.filesEntries = [];\n            _this.renderSelectedFiles(event, files, true);\n          }\n        }\n      });\n    };\n    var this_2 = this;\n    for (var i = 0; i < this.filesEntries.length; i++) {\n      _loop_4(i);\n    }\n  };\n  Uploader.prototype.onSelectFiles = function (args) {\n    if (!this.enabled) {\n      return;\n    }\n    var targetFiles;\n    /* istanbul ignore next */\n    if (args.type === 'drop') {\n      if (this.directoryUpload) {\n        this.getFilesFromFolder(args);\n      } else {\n        var files = this.sortFilesList = args.dataTransfer.files;\n        if (this.browserName !== 'msie' && this.browserName !== 'edge' && this.browserName !== 'safari') {\n          this.element.files = files;\n        }\n        if (files.length > 0) {\n          targetFiles = this.multiple ? this.sortFileList(files) : [files[0]];\n          this.renderSelectedFiles(args, targetFiles);\n        }\n      }\n    } else {\n      targetFiles = [].slice.call(args.target.files);\n      this.renderSelectedFiles(args, targetFiles);\n    }\n    if (this.isAngular) {\n      args.stopPropagation();\n    }\n  };\n  /* istanbul ignore next */\n  Uploader.prototype.getBase64 = function (file) {\n    return new Promise(function (resolve, reject) {\n      var fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n      fileReader.onload = function () {\n        return resolve(fileReader.result);\n      };\n      fileReader.onerror = function (error) {\n        return reject(error);\n      };\n    });\n  };\n  /* istanbul ignore next */\n  /* tslint:ignore */\n  Uploader.prototype.renderSelectedFiles = function (args, targetFiles, directory, paste) {\n    var _this = this;\n    this.base64String = [];\n    var eventArgs = {\n      event: args,\n      cancel: false,\n      filesData: [],\n      isModified: false,\n      modifiedFilesData: [],\n      progressInterval: '',\n      isCanceled: false,\n      currentRequest: null,\n      customFormData: null\n    };\n    /* istanbul ignore next */\n    if (targetFiles.length < 1) {\n      eventArgs.isCanceled = true;\n      this.trigger('selected', eventArgs);\n      return;\n    }\n    this.flag = true;\n    var fileData = [];\n    if (!this.multiple) {\n      this.clearData(true);\n      targetFiles = [targetFiles[0]];\n    }\n    for (var i = 0; i < targetFiles.length; i++) {\n      var file = directory ? targetFiles[i].file : targetFiles[i];\n      this.updateInitialFileDetails(args, targetFiles, file, i, fileData, directory, paste);\n    }\n    eventArgs.filesData = fileData;\n    if (this.allowedExtensions.indexOf('*') > -1) {\n      this.allTypes = true;\n    }\n    if (this.enableHtmlSanitizer) {\n      for (var i = 0; i < fileData.length; i++) {\n        var sanitizeFile = SanitizeHtmlHelper.beforeSanitize();\n        var sanitizeFileName = SanitizeHtmlHelper.serializeValue(sanitizeFile, fileData[i].name);\n        if (sanitizeFileName != fileData[i].name) {\n          var encodedFileName = targetFiles[i].name.replace(/[\\u00A0-\\u9999<>\\&]/g, function (i) {\n            return '&#' + i.charCodeAt(0) + ';';\n          });\n          fileData[i].name = encodedFileName;\n          fileData[i].status = this.localizedTexts('invalidFileName');\n          fileData[i].statusCode = '0';\n        }\n      }\n    }\n    if (!this.allTypes) {\n      fileData = this.checkExtension(fileData);\n    }\n    this.trigger('selected', eventArgs, function (eventArgs) {\n      _this._internalRenderSelect(eventArgs, fileData);\n    });\n  };\n  Uploader.prototype.updateInitialFileDetails = function (args,\n  // eslint-disable-next-line @typescript-eslint/indent\n  targetFiles, file, i, fileData, directory, paste) {\n    var fileName = directory ? targetFiles[i].path.substring(1, targetFiles[i].path.length) : paste ? getUniqueID(file.name.substring(0, file.name.lastIndexOf('.'))) + '.' + this.getFileType(file.name) : this.directoryUpload ? targetFiles[i].webkitRelativePath : file.name;\n    var fileDetails = {\n      name: fileName,\n      rawFile: file,\n      size: file.size,\n      status: this.localizedTexts('readyToUploadMessage'),\n      type: this.getFileType(file.name),\n      validationMessages: this.validatedFileSize(file.size),\n      statusCode: '1',\n      id: getUniqueID(file.name.substring(0, file.name.lastIndexOf('.'))) + '.' + this.getFileType(file.name)\n    };\n    /* istanbul ignore next */\n    if (paste) {\n      fileDetails.fileSource = 'paste';\n    }\n    fileDetails.status = fileDetails.validationMessages.minSize !== '' ? this.localizedTexts('invalidMinFileSize') : fileDetails.validationMessages.maxSize !== '' ? this.localizedTexts('invalidMaxFileSize') : fileDetails.status;\n    if (fileDetails.validationMessages.minSize !== '' || fileDetails.validationMessages.maxSize !== '') {\n      fileDetails.statusCode = '0';\n    }\n    fileData.push(fileDetails);\n  };\n  Uploader.prototype._internalRenderSelect = function (eventArgs, fileData) {\n    if (!eventArgs.cancel) {\n      /* istanbul ignore next */\n      this.selectedFiles = this.selectedFiles.concat(fileData);\n      this.btnTabIndex = this.disableKeyboardNavigation ? '-1' : '0';\n      if (this.showFileList) {\n        if (eventArgs.isModified && eventArgs.modifiedFilesData.length > 0) {\n          for (var j = 0; j < eventArgs.modifiedFilesData.length; j++) {\n            for (var k = 0; k < fileData.length; k++) {\n              if (eventArgs.modifiedFilesData[j].id === fileData[k].id) {\n                eventArgs.modifiedFilesData[j].rawFile = fileData[k].rawFile;\n              }\n            }\n          }\n          var dataFiles = this.allTypes ? eventArgs.modifiedFilesData : this.checkExtension(eventArgs.modifiedFilesData);\n          this.updateSortedFileList(dataFiles);\n          this.filesData = dataFiles;\n          if (!this.isForm || this.allowUpload()) {\n            this.checkAutoUpload(dataFiles);\n          }\n        } else {\n          this.createFileList(fileData, true);\n          this.filesData = this.filesData.concat(fileData);\n          if (!this.isForm || this.allowUpload()) {\n            this.checkAutoUpload(fileData);\n          }\n        }\n        if (!isNullOrUndefined(eventArgs.progressInterval) && eventArgs.progressInterval !== '') {\n          this.progressInterval = eventArgs.progressInterval;\n        }\n      } else {\n        this.filesData = this.filesData.concat(fileData);\n        if (this.autoUpload) {\n          this.upload(this.filesData, true);\n        }\n      }\n      this.raiseActionComplete();\n      this.isFirstFileOnSelection = true;\n    }\n  };\n  Uploader.prototype.allowUpload = function () {\n    var allowFormUpload = false;\n    if (this.isForm && !isNullOrUndefined(this.asyncSettings.saveUrl) && this.asyncSettings.saveUrl !== '') {\n      allowFormUpload = true;\n    }\n    return allowFormUpload;\n  };\n  Uploader.prototype.isFormUpload = function () {\n    var isFormUpload = false;\n    if (this.isForm && (isNullOrUndefined(this.asyncSettings.saveUrl) || this.asyncSettings.saveUrl === '') && (isNullOrUndefined(this.asyncSettings.removeUrl) || this.asyncSettings.removeUrl === '')) {\n      isFormUpload = true;\n    }\n    return isFormUpload;\n  };\n  Uploader.prototype.clearData = function (singleUpload) {\n    if (!isNullOrUndefined(this.listParent)) {\n      detach(this.listParent);\n      this.listParent = null;\n    }\n    if (this.browserName !== 'msie' && !singleUpload) {\n      this.element.value = '';\n    }\n    this.fileList = [];\n    this.filesData = [];\n    this.removeActionButtons();\n  };\n  Uploader.prototype.updateSortedFileList = function (filesData) {\n    var previousListClone = this.createElement('div', {\n      id: 'clonewrapper'\n    });\n    var added = -1;\n    var removedList;\n    if (this.listParent) {\n      for (var i = 0; i < this.listParent.querySelectorAll('li').length; i++) {\n        var liElement = this.listParent.querySelectorAll('li')[i];\n        previousListClone.appendChild(liElement.cloneNode(true));\n      }\n      removedList = this.listParent.querySelectorAll('li');\n      for (var _i = 0, removedList_1 = removedList; _i < removedList_1.length; _i++) {\n        var item = removedList_1[_i];\n        detach(item);\n      }\n      this.removeActionButtons();\n      var oldList = [].slice.call(previousListClone.childNodes);\n      detach(this.listParent);\n      this.listParent = null;\n      this.fileList = [];\n      this.createParentUL();\n      for (var index = 0; index < filesData.length; index++) {\n        for (var j = 0; j < this.filesData.length; j++) {\n          if (this.filesData[j].name === filesData[index].name) {\n            this.listParent.appendChild(oldList[j]);\n            EventHandler.add(oldList[j].querySelector('.e-icons'), 'click', this.removeFiles, this);\n            this.fileList.push(oldList[j]);\n            added = index;\n          }\n        }\n        if (added !== index) {\n          this.createFileList([filesData[index]]);\n        }\n      }\n    } else {\n      this.createFileList(filesData);\n    }\n  };\n  Uploader.prototype.isBlank = function (str) {\n    return !str || /^\\s*$/.test(str);\n  };\n  Uploader.prototype.checkExtension = function (files) {\n    var dropFiles = files;\n    if (!this.isBlank(this.allowedExtensions)) {\n      var allowedExtensions = [];\n      var extensions = this.allowedExtensions.split(',');\n      for (var _i = 0, extensions_1 = extensions; _i < extensions_1.length; _i++) {\n        var extension = extensions_1[_i];\n        allowedExtensions.push(extension.trim().toLocaleLowerCase());\n      }\n      for (var i = 0; i < files.length; i++) {\n        if (allowedExtensions.indexOf(('.' + files[i].type).toLocaleLowerCase()) === -1) {\n          files[i].status = this.localizedTexts('invalidFileType');\n          files[i].statusCode = '0';\n        }\n      }\n    }\n    return dropFiles;\n  };\n  Uploader.prototype.validatedFileSize = function (fileSize) {\n    var minSizeError = '';\n    var maxSizeError = '';\n    if (fileSize < this.minFileSize) {\n      minSizeError = this.localizedTexts('invalidMinFileSize');\n    } else if (fileSize > this.maxFileSize) {\n      maxSizeError = this.localizedTexts('invalidMaxFileSize');\n    } else {\n      minSizeError = '';\n      maxSizeError = '';\n    }\n    var errorMessage = {\n      minSize: minSizeError,\n      maxSize: maxSizeError\n    };\n    return errorMessage;\n  };\n  Uploader.prototype.isPreLoadFile = function (fileData) {\n    var isPreload = false;\n    for (var i = 0; i < this.files.length; i++) {\n      if (this.files[i].name === fileData.name.slice(0, fileData.name.lastIndexOf('.')) && this.files[i].type === fileData.type) {\n        isPreload = true;\n      }\n    }\n    return isPreload;\n  };\n  Uploader.prototype.createCustomfileList = function (fileData) {\n    this.createParentUL();\n    for (var _i = 0, fileData_1 = fileData; _i < fileData_1.length; _i++) {\n      var listItem = fileData_1[_i];\n      var listElement = this.createElement('li', {\n        className: FILE,\n        attrs: {\n          'data-file-name': listItem.name\n        }\n      });\n      this.uploadTemplateFn = this.templateComplier(this.template);\n      var liTempCompiler = this.uploadTemplateFn(listItem, this, 'template', this.element.id + 'Template', this.isStringTemplate, null, listElement);\n      if (liTempCompiler) {\n        var fromElements = [].slice.call(liTempCompiler);\n        append(fromElements, listElement);\n      }\n      var index = fileData.indexOf(listItem);\n      var eventArgs = {\n        element: listElement,\n        fileInfo: listItem,\n        index: index,\n        isPreload: this.isPreLoadFile(listItem)\n      };\n      var eventsArgs = {\n        element: listElement,\n        fileInfo: listItem,\n        index: index,\n        isPreload: this.isPreLoadFile(listItem)\n      };\n      this.trigger('rendering', eventArgs);\n      this.trigger('fileListRendering', eventsArgs);\n      this.listParent.appendChild(listElement);\n      this.fileList.push(listElement);\n    }\n    this.renderReactTemplates();\n  };\n  Uploader.prototype.createParentUL = function () {\n    if (isNullOrUndefined(this.listParent)) {\n      this.listParent = this.createElement('ul', {\n        className: LIST_PARENT\n      });\n      this.uploadWrapper.appendChild(this.listParent);\n    }\n  };\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  Uploader.prototype.formFileList = function (fileData, files) {\n    var fileList = this.createElement('li', {\n      className: FILE\n    });\n    fileList.setAttribute('data-files-count', fileData.length + '');\n    var fileContainer = this.createElement('span', {\n      className: TEXT_CONTAINER\n    });\n    var statusMessage;\n    for (var _i = 0, fileData_2 = fileData; _i < fileData_2.length; _i++) {\n      var listItem = fileData_2[_i];\n      var fileNameEle = this.createElement('span', {\n        className: FILE_NAME\n      });\n      fileNameEle.innerHTML = this.getFileNameOnly(listItem.name);\n      var fileTypeEle = this.createElement('span', {\n        className: FILE_TYPE\n      });\n      var fileType = this.getFileType(listItem.name);\n      fileTypeEle.innerHTML = '.' + fileType;\n      if (!fileType) {\n        fileTypeEle.classList.add('e-hidden');\n      }\n      if (!this.enableRtl) {\n        fileContainer.appendChild(fileNameEle);\n        fileContainer.appendChild(fileTypeEle);\n      } else {\n        var rtlContainer = this.createElement('span', {\n          className: RTL_CONTAINER\n        });\n        rtlContainer.appendChild(fileTypeEle);\n        rtlContainer.appendChild(fileNameEle);\n        fileContainer.appendChild(rtlContainer);\n      }\n      this.truncateName(fileNameEle);\n      statusMessage = this.formValidateFileInfo(listItem, fileList);\n    }\n    fileList.appendChild(fileContainer);\n    this.setListToFileInfo(fileData, fileList);\n    var index = this.listParent.querySelectorAll('li').length;\n    var infoEle = this.createElement('span');\n    if (fileList.classList.contains(INVALID_FILE)) {\n      infoEle.classList.add(STATUS);\n      infoEle.classList.add(INVALID_FILE);\n      infoEle.innerText = fileData.length > 1 ? this.localizedTexts('invalidFileSelection') : statusMessage;\n    } else {\n      infoEle.classList.add(fileData.length > 1 ? INFORMATION : FILE_SIZE);\n      infoEle.innerText = fileData.length > 1 ? this.localizedTexts('totalFiles') + ': ' + fileData.length + ' , ' + this.localizedTexts('size') + ': ' + this.bytesToSize(this.getFileSize(fileData)) : this.bytesToSize(fileData[0].size);\n      this.createFormInput(fileData);\n    }\n    fileContainer.appendChild(infoEle);\n    if (isNullOrUndefined(fileList.querySelector('.e-icons'))) {\n      var iconElement = this.createElement('span', {\n        className: 'e-icons',\n        attrs: {\n          'tabindex': this.btnTabIndex\n        }\n      });\n      /* istanbul ignore next */\n      if (this.browserName === 'msie') {\n        iconElement.classList.add('e-msie');\n      }\n      iconElement.setAttribute('title', this.localizedTexts('remove'));\n      fileList.appendChild(fileContainer);\n      fileList.appendChild(iconElement);\n      EventHandler.add(iconElement, 'click', this.removeFiles, this);\n      iconElement.classList.add(REMOVE_ICON);\n    }\n    var eventArgs = {\n      element: fileList,\n      fileInfo: this.mergeFileInfo(fileData, fileList),\n      index: index,\n      isPreload: this.isPreLoadFile(this.mergeFileInfo(fileData, fileList))\n    };\n    var eventsArgs = {\n      element: fileList,\n      fileInfo: this.mergeFileInfo(fileData, fileList),\n      index: index,\n      isPreload: this.isPreLoadFile(this.mergeFileInfo(fileData, fileList))\n    };\n    this.trigger('rendering', eventArgs);\n    this.trigger('fileListRendering', eventsArgs);\n    this.listParent.appendChild(fileList);\n    this.fileList.push(fileList);\n  };\n  Uploader.prototype.formValidateFileInfo = function (listItem, fileList) {\n    var statusMessage = listItem.status;\n    var validationMessages = this.validatedFileSize(listItem.size);\n    if (validationMessages.minSize !== '' || validationMessages.maxSize !== '') {\n      this.addInvalidClass(fileList);\n      statusMessage = validationMessages.minSize !== '' ? this.localizedTexts('invalidMinFileSize') : validationMessages.maxSize !== '' ? this.localizedTexts('invalidMaxFileSize') : statusMessage;\n    }\n    var typeValidationMessage = this.checkExtension(this.getFilesInArray(listItem))[0].status;\n    if (typeValidationMessage === this.localizedTexts('invalidFileType')) {\n      this.addInvalidClass(fileList);\n      statusMessage = typeValidationMessage;\n    }\n    return statusMessage;\n  };\n  Uploader.prototype.addInvalidClass = function (fileList) {\n    fileList.classList.add(INVALID_FILE);\n  };\n  Uploader.prototype.createFormInput = function (fileData) {\n    if (this.browserName !== 'safari') {\n      var inputElement = this.element.cloneNode(true);\n      inputElement.classList.add(HIDDEN_INPUT);\n      for (var _i = 0, fileData_3 = fileData; _i < fileData_3.length; _i++) {\n        var listItem = fileData_3[_i];\n        listItem.input = inputElement;\n      }\n      inputElement.setAttribute('name', this.uploaderName);\n      this.uploadWrapper.querySelector('.' + INPUT_WRAPPER).appendChild(inputElement);\n      if (this.browserName !== 'msie' && this.browserName !== 'edge') {\n        this.element.value = '';\n      }\n    }\n  };\n  Uploader.prototype.getFileSize = function (fileData) {\n    var fileSize = 0;\n    for (var _i = 0, fileData_4 = fileData; _i < fileData_4.length; _i++) {\n      var file = fileData_4[_i];\n      fileSize += file.size;\n    }\n    return fileSize;\n  };\n  Uploader.prototype.mergeFileInfo = function (fileData, fileList) {\n    var result = {\n      name: '',\n      rawFile: '',\n      size: 0,\n      status: '',\n      type: '',\n      validationMessages: {\n        minSize: '',\n        maxSize: ''\n      },\n      statusCode: '1',\n      list: fileList\n    };\n    var fileNames = [];\n    var type = '';\n    for (var _i = 0, fileData_5 = fileData; _i < fileData_5.length; _i++) {\n      var listItem = fileData_5[_i];\n      fileNames.push(listItem.name);\n      type = listItem.type;\n    }\n    result.name = fileNames.join(', ');\n    result.size = this.getFileSize(fileData);\n    result.type = type;\n    result.status = this.statusForFormUpload(fileData, fileList);\n    return result;\n  };\n  Uploader.prototype.statusForFormUpload = function (fileData, fileList) {\n    var isValid = true;\n    var statusMessage;\n    for (var _i = 0, fileData_6 = fileData; _i < fileData_6.length; _i++) {\n      var listItem = fileData_6[_i];\n      statusMessage = listItem.status;\n      var validationMessages = this.validatedFileSize(listItem.size);\n      if (validationMessages.minSize !== '' || validationMessages.maxSize !== '') {\n        isValid = false;\n        statusMessage = validationMessages.minSize !== '' ? this.localizedTexts('invalidMinFileSize') : validationMessages.maxSize !== '' ? this.localizedTexts('invalidMaxFileSize') : statusMessage;\n      }\n      var typeValidationMessage = this.checkExtension(this.getFilesInArray(listItem))[0].status;\n      if (typeValidationMessage === this.localizedTexts('invalidFileType')) {\n        isValid = false;\n        statusMessage = typeValidationMessage;\n      }\n    }\n    if (!isValid) {\n      fileList.classList.add(INVALID_FILE);\n      statusMessage = fileData.length > 1 ? this.localizedTexts('invalidFileSelection') : statusMessage;\n    } else {\n      statusMessage = this.localizedTexts('totalFiles') + ': ' + fileData.length + ' , ' + this.localizedTexts('size') + ': ' + this.bytesToSize(this.getFileSize(fileData));\n    }\n    return statusMessage;\n  };\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  Uploader.prototype.formCustomFileList = function (fileData, files) {\n    this.createParentUL();\n    var fileList = this.createElement('li', {\n      className: FILE\n    });\n    fileList.setAttribute('data-files-count', fileData.length + '');\n    this.setListToFileInfo(fileData, fileList);\n    var result = this.mergeFileInfo(fileData, fileList);\n    fileList.setAttribute('data-file-name', result.name);\n    this.uploadTemplateFn = this.templateComplier(this.template);\n    var liTempCompiler = this.uploadTemplateFn(result, this, 'template', this.element.id + 'Template', this.isStringTemplate, null, fileList);\n    if (liTempCompiler) {\n      var fromElements = [].slice.call(liTempCompiler);\n      append(fromElements, fileList);\n    }\n    var index = this.listParent.querySelectorAll('li').length;\n    if (!fileList.classList.contains(INVALID_FILE)) {\n      this.createFormInput(fileData);\n    }\n    var eventArgs = {\n      element: fileList,\n      fileInfo: result,\n      index: index,\n      isPreload: this.isPreLoadFile(result)\n    };\n    var eventsArgs = {\n      element: fileList,\n      fileInfo: result,\n      index: index,\n      isPreload: this.isPreLoadFile(result)\n    };\n    this.trigger('rendering', eventArgs);\n    this.trigger('fileListRendering', eventsArgs);\n    this.listParent.appendChild(fileList);\n    this.fileList.push(fileList);\n    this.renderReactTemplates();\n  };\n  /* eslint-disable valid-jsdoc, jsdoc/require-param */\n  /**\n   * Create the file list for specified files data.\n   *\n   * @param { FileInfo[] } fileData - Specifies the files data for file list creation.\n   * @returns {void}\n   */\n  Uploader.prototype.createFileList = function (fileData, isSelectedFile) {\n    /* eslint-enable valid-jsdoc, jsdoc/require-param */\n    this.createParentUL();\n    if (this.template !== '' && !isNullOrUndefined(this.template)) {\n      if (this.isFormUpload()) {\n        this.uploadWrapper.classList.add(FORM_UPLOAD);\n        this.formCustomFileList(fileData, this.element.files);\n      } else {\n        this.createCustomfileList(fileData);\n      }\n    } else if (this.isFormUpload()) {\n      this.uploadWrapper.classList.add(FORM_UPLOAD);\n      this.formFileList(fileData, this.element.files);\n    } else {\n      for (var _i = 0, fileData_7 = fileData; _i < fileData_7.length; _i++) {\n        var listItem = fileData_7[_i];\n        var liElement = this.createElement('li', {\n          className: FILE,\n          attrs: {\n            'data-file-name': listItem.name,\n            'data-files-count': '1'\n          }\n        });\n        var textContainer = this.createElement('span', {\n          className: TEXT_CONTAINER\n        });\n        var textElement = this.createElement('span', {\n          className: FILE_NAME,\n          attrs: {\n            'title': listItem.name\n          }\n        });\n        textElement.innerHTML = this.getFileNameOnly(listItem.name);\n        var fileExtension = this.createElement('span', {\n          className: FILE_TYPE\n        });\n        var fileType = this.getFileType(listItem.name);\n        fileExtension.innerHTML = '.' + fileType;\n        if (!fileType) {\n          fileExtension.classList.add('e-hidden');\n        }\n        if (!this.enableRtl) {\n          textContainer.appendChild(textElement);\n          textContainer.appendChild(fileExtension);\n        } else {\n          var rtlContainer = this.createElement('span', {\n            className: RTL_CONTAINER\n          });\n          rtlContainer.appendChild(fileExtension);\n          rtlContainer.appendChild(textElement);\n          textContainer.appendChild(rtlContainer);\n        }\n        var fileSize = this.createElement('span', {\n          className: FILE_SIZE\n        });\n        fileSize.innerHTML = this.bytesToSize(listItem.size);\n        textContainer.appendChild(fileSize);\n        var statusElement = this.createElement('span', {\n          className: STATUS\n        });\n        textContainer.appendChild(statusElement);\n        statusElement.innerHTML = listItem.status;\n        liElement.appendChild(textContainer);\n        var iconElement = this.createElement('span', {\n          className: ' e-icons',\n          attrs: {\n            'tabindex': this.btnTabIndex\n          }\n        });\n        /* istanbul ignore next */\n        if (this.browserName === 'msie') {\n          iconElement.classList.add('e-msie');\n        }\n        iconElement.setAttribute('title', this.localizedTexts('remove'));\n        liElement.appendChild(iconElement);\n        EventHandler.add(iconElement, 'click', this.removeFiles, this);\n        if (listItem.statusCode === '2') {\n          statusElement.classList.add(UPLOAD_SUCCESS);\n          iconElement.classList.add(DELETE_ICON);\n          iconElement.setAttribute('title', this.localizedTexts('delete'));\n        } else if (listItem.statusCode !== '1') {\n          statusElement.classList.remove(UPLOAD_SUCCESS);\n          statusElement.classList.add(VALIDATION_FAILS);\n        }\n        if (this.autoUpload && listItem.statusCode === '1' && this.asyncSettings.saveUrl !== '') {\n          statusElement.innerHTML = '';\n        }\n        if (!iconElement.classList.contains(DELETE_ICON)) {\n          iconElement.classList.add(REMOVE_ICON);\n        }\n        var index = fileData.indexOf(listItem);\n        var eventArgs = {\n          element: liElement,\n          fileInfo: listItem,\n          index: index,\n          isPreload: this.isPreLoadFile(listItem)\n        };\n        var eventsArgs = {\n          element: liElement,\n          fileInfo: listItem,\n          index: index,\n          isPreload: this.isPreLoadFile(listItem)\n        };\n        this.trigger('rendering', eventArgs);\n        this.trigger('fileListRendering', eventsArgs);\n        this.listParent.appendChild(liElement);\n        this.fileList.push(liElement);\n        this.truncateName(textElement);\n        var preventActionComplete = this.flag;\n        if (this.isPreLoadFile(listItem)) {\n          this.flag = false;\n          this.checkActionComplete(true);\n          this.flag = preventActionComplete;\n        }\n      }\n    }\n  };\n  Uploader.prototype.getSlicedName = function (nameElement) {\n    var text = nameElement.textContent;\n    nameElement.dataset.tail = text.slice(text.length - 10);\n  };\n  Uploader.prototype.setListToFileInfo = function (fileData, fileList) {\n    for (var _i = 0, fileData_8 = fileData; _i < fileData_8.length; _i++) {\n      var listItem = fileData_8[_i];\n      listItem.list = fileList;\n    }\n  };\n  Uploader.prototype.truncateName = function (name) {\n    var nameElement = name;\n    if (this.browserName !== 'edge' && nameElement.offsetWidth < nameElement.scrollWidth) {\n      this.getSlicedName(nameElement);\n      /* istanbul ignore next */\n    } else if (nameElement.offsetWidth + 1 < nameElement.scrollWidth) {\n      this.getSlicedName(nameElement);\n    }\n  };\n  Uploader.prototype.getFileType = function (name) {\n    var extension;\n    var index = name.lastIndexOf('.');\n    if (index >= 0) {\n      extension = name.substring(index + 1);\n    }\n    return extension ? extension : '';\n  };\n  Uploader.prototype.getFileNameOnly = function (name) {\n    var type = this.getFileType(name);\n    var names = name.split('.' + type);\n    return type = names[0];\n  };\n  Uploader.prototype.setInitialAttributes = function () {\n    if (this.initialAttr.accept) {\n      this.element.setAttribute('accept', this.initialAttr.accept);\n    }\n    if (this.initialAttr.disabled) {\n      this.element.setAttribute('disabled', 'disabled');\n    }\n    if (this.initialAttr.multiple) {\n      var newAttr = document.createAttribute('multiple');\n      this.element.setAttributeNode(newAttr);\n    }\n  };\n  Uploader.prototype.filterfileList = function (files) {\n    var filterFiles = [];\n    var li;\n    for (var i = 0; i < files.length; i++) {\n      li = this.getLiElement(files[i]);\n      if (!li.classList.contains(UPLOAD_SUCCESS)) {\n        filterFiles.push(files[i]);\n      }\n    }\n    return filterFiles;\n  };\n  Uploader.prototype.updateStatus = function (files, status, statusCode, updateLiStatus) {\n    if (updateLiStatus === void 0) {\n      updateLiStatus = true;\n    }\n    if (!(status === '' || isNullOrUndefined(status)) && !(statusCode === '' || isNullOrUndefined(statusCode))) {\n      files.status = status;\n      files.statusCode = statusCode;\n    }\n    if (updateLiStatus) {\n      var li = this.getLiElement(files);\n      if (!isNullOrUndefined(li)) {\n        if (!isNullOrUndefined(li.querySelector('.' + STATUS)) && !(status === '' || isNullOrUndefined(status))) {\n          li.querySelector('.' + STATUS).textContent = status;\n        }\n      }\n    }\n    return files;\n  };\n  Uploader.prototype.getLiElement = function (files) {\n    var index;\n    for (var i = 0; i < this.filesData.length; i++) {\n      if (!isNullOrUndefined(files) && (!isNullOrUndefined(this.filesData[i].id) && !isNullOrUndefined(files.id) ? this.filesData[i].name === files.name && this.filesData[i].id === files.id : this.filesData[i].name === files.name)) {\n        index = i;\n      }\n    }\n    return this.fileList[index];\n  };\n  Uploader.prototype.createProgressBar = function (liElement) {\n    var progressbarWrapper = this.createElement('span', {\n      className: PROGRESS_WRAPPER\n    });\n    var progressBar = this.createElement('progressbar', {\n      className: PROGRESSBAR,\n      attrs: {\n        value: '0',\n        max: '100'\n      }\n    });\n    var progressbarInnerWrapper = this.createElement('span', {\n      className: PROGRESS_INNER_WRAPPER\n    });\n    progressBar.setAttribute('style', 'width: 0%');\n    var progressbarText = this.createElement('span', {\n      className: PROGRESSBAR_TEXT\n    });\n    progressbarText.textContent = '0%';\n    progressbarInnerWrapper.appendChild(progressBar);\n    progressbarWrapper.appendChild(progressbarInnerWrapper);\n    progressbarWrapper.appendChild(progressbarText);\n    liElement.querySelector('.' + TEXT_CONTAINER).appendChild(progressbarWrapper);\n  };\n  /* istanbul ignore next */\n  Uploader.prototype.updateProgressbar = function (e, li) {\n    if (!isNaN(Math.round(e.loaded / e.total * 100)) && !isNullOrUndefined(li.querySelector('.' + PROGRESSBAR))) {\n      if (!isNullOrUndefined(this.progressInterval) && this.progressInterval !== '') {\n        var value = Math.round(e.loaded / e.total * 100) % parseInt(this.progressInterval, 10);\n        if (value === 0 || value === 100) {\n          this.changeProgressValue(li, Math.round(e.loaded / e.total * 100).toString() + '%');\n        }\n      } else {\n        this.changeProgressValue(li, Math.round(e.loaded / e.total * 100).toString() + '%');\n      }\n    }\n  };\n  Uploader.prototype.changeProgressValue = function (li, progressValue) {\n    li.querySelector('.' + PROGRESSBAR).setAttribute('style', 'width:' + progressValue);\n    li.querySelector('.' + PROGRESSBAR_TEXT).textContent = progressValue;\n  };\n  Uploader.prototype.uploadInProgress = function (e, files, customUI, request) {\n    var li = this.getLiElement(files);\n    if (isNullOrUndefined(li) && !customUI) {\n      return;\n    }\n    if (!isNullOrUndefined(li)) {\n      /* istanbul ignore next */\n      if (files.statusCode === '5') {\n        this.cancelUploadingFile(files, e, request, li);\n      }\n      if (!(li.querySelectorAll('.' + PROGRESS_WRAPPER).length > 0) && li.querySelector('.' + STATUS)) {\n        li.querySelector('.' + STATUS).classList.add(UPLOAD_INPROGRESS);\n        this.createProgressBar(li);\n        this.updateProgressBarClasses(li, UPLOAD_INPROGRESS);\n        li.querySelector('.' + STATUS).classList.remove(UPLOAD_FAILED);\n      }\n      this.updateProgressbar(e, li);\n      var iconEle = li.querySelector('.' + REMOVE_ICON);\n      if (!isNullOrUndefined(iconEle)) {\n        iconEle.classList.add(ABORT_ICON, UPLOAD_INPROGRESS);\n        iconEle.setAttribute('title', this.localizedTexts('abort'));\n        iconEle.classList.remove(REMOVE_ICON);\n      }\n    } else {\n      this.cancelUploadingFile(files, e, request);\n    }\n    var args = {\n      e: e,\n      operation: 'upload',\n      file: this.updateStatus(files, this.localizedTexts('inProgress'), '3')\n    };\n    this.trigger('progress', args);\n  };\n  /* istanbul ignore next */\n  Uploader.prototype.cancelUploadingFile = function (files, e, request, li) {\n    var _this = this;\n    if (files.statusCode === '5') {\n      var eventArgs = {\n        event: e,\n        fileData: files,\n        cancel: false,\n        customFormData: []\n      };\n      this.trigger('canceling', eventArgs, function (eventArgs) {\n        if (eventArgs.cancel) {\n          files.statusCode = '3';\n          if (!isNullOrUndefined(li)) {\n            var spinnerTarget = li.querySelector('.' + ABORT_ICON);\n            if (!isNullOrUndefined(spinnerTarget)) {\n              hideSpinner(spinnerTarget);\n              detach(li.querySelector('.e-spinner-pane'));\n            }\n          }\n        } else {\n          request.emitError = false;\n          request.httpRequest.abort();\n          var formData = new FormData();\n          if (files.statusCode === '5') {\n            var name_1 = _this.element.getAttribute('name');\n            formData.append(name_1, files.name);\n            formData.append('cancel-uploading', files.name);\n            _this.updateFormData(formData, eventArgs.customFormData);\n            var ajax = new Ajax(_this.asyncSettings.removeUrl, 'POST', true, null);\n            ajax.emitError = false;\n            ajax.onLoad = function (e) {\n              _this.removecanceledFile(e, files);\n              return {};\n            };\n            ajax.send(formData);\n          }\n        }\n      });\n    }\n  };\n  Uploader.prototype.removecanceledFile = function (e, file) {\n    var liElement = this.getLiElement(file);\n    if (isNullOrUndefined(liElement) || liElement.querySelector('.' + RETRY_ICON) || isNullOrUndefined(liElement.querySelector('.' + ABORT_ICON))) {\n      return;\n    }\n    this.updateStatus(file, this.localizedTexts('fileUploadCancel'), '5');\n    this.renderFailureState(e, file, liElement);\n    var spinnerTarget = liElement.querySelector('.' + REMOVE_ICON);\n    if (!isNullOrUndefined(liElement)) {\n      hideSpinner(spinnerTarget);\n      if (!isNullOrUndefined(liElement.querySelector('.e-spinner-pane'))) {\n        detach(liElement.querySelector('.e-spinner-pane'));\n      }\n    }\n    var requestResponse = e && e.currentTarget ? this.getResponse(e) : null;\n    var args = {\n      event: e,\n      response: requestResponse,\n      operation: 'cancel',\n      file: file\n    };\n    this.trigger('success', args);\n  };\n  Uploader.prototype.renderFailureState = function (e, file, liElement) {\n    var _this = this;\n    this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n    this.removeProgressbar(liElement, 'failure');\n    if (!isNullOrUndefined(liElement.querySelector('.e-file-status'))) {\n      liElement.querySelector('.e-file-status').classList.add(UPLOAD_FAILED);\n    }\n    var deleteIcon = liElement.querySelector('.' + ABORT_ICON);\n    if (isNullOrUndefined(deleteIcon)) {\n      return;\n    }\n    deleteIcon.classList.remove(ABORT_ICON, UPLOAD_INPROGRESS);\n    deleteIcon.classList.add(REMOVE_ICON);\n    deleteIcon.setAttribute('title', this.localizedTexts('remove'));\n    this.pauseButton = this.createElement('span', {\n      className: 'e-icons e-file-reload-btn',\n      attrs: {\n        'tabindex': this.btnTabIndex\n      }\n    });\n    deleteIcon.parentElement.insertBefore(this.pauseButton, deleteIcon);\n    this.pauseButton.setAttribute('title', this.localizedTexts('retry'));\n    var retryElement = liElement.querySelector('.' + RETRY_ICON);\n    /* istanbul ignore next */\n    retryElement.addEventListener('click', function (e) {\n      _this.reloadcanceledFile(e, file, liElement, false);\n    }, false);\n  };\n  Uploader.prototype.reloadcanceledFile = function (e, file, liElement, custom) {\n    file.statusCode = '1';\n    file.status = this.localizedTexts('readyToUploadMessage');\n    if (!custom) {\n      if (!isNullOrUndefined(liElement.querySelector('.' + STATUS))) {\n        liElement.querySelector('.' + STATUS).classList.remove(UPLOAD_FAILED);\n      }\n      if (!isNullOrUndefined(liElement.querySelector('.' + RETRY_ICON))) {\n        detach(liElement.querySelector('.' + RETRY_ICON));\n      }\n      this.pauseButton = null;\n    }\n    /* istanbul ignore next */\n    if (!isNullOrUndefined(liElement)) {\n      liElement.classList.add(RESTRICT_RETRY);\n    }\n    this.upload([file]);\n  };\n  /* istanbul ignore next */\n  Uploader.prototype.uploadComplete = function (e, file, customUI) {\n    var status = e.target;\n    if (status.readyState === 4 && status.status >= 200 && status.status <= 299) {\n      var li = this.getLiElement(file);\n      if (isNullOrUndefined(li) && (!customUI || isNullOrUndefined(customUI))) {\n        return;\n      }\n      if (!isNullOrUndefined(li)) {\n        this.updateProgressBarClasses(li, UPLOAD_SUCCESS);\n        this.removeProgressbar(li, 'success');\n        var iconEle = li.querySelector('.' + ABORT_ICON);\n        if (!isNullOrUndefined(iconEle)) {\n          iconEle.classList.add(DELETE_ICON);\n          iconEle.setAttribute('title', this.localizedTexts('delete'));\n          iconEle.classList.remove(ABORT_ICON);\n          iconEle.classList.remove(UPLOAD_INPROGRESS);\n        }\n      }\n      this.raiseSuccessEvent(e, file);\n    } else {\n      this.uploadFailed(e, file);\n    }\n  };\n  Uploader.prototype.getResponse = function (e) {\n    var target = e.currentTarget;\n    var response = {\n      readyState: target.readyState,\n      statusCode: target.status,\n      statusText: target.statusText,\n      headers: target.getAllResponseHeaders(),\n      withCredentials: target.withCredentials\n    };\n    return response;\n  };\n  Uploader.prototype.raiseSuccessEvent = function (e, file) {\n    var _this = this;\n    var response = e && e.currentTarget ? this.getResponse(e) : null;\n    var statusMessage = this.localizedTexts('uploadSuccessMessage');\n    var args = {\n      e: e,\n      response: response,\n      operation: 'upload',\n      file: this.updateStatus(file, statusMessage, '2', false),\n      statusText: statusMessage\n    };\n    var liElement = this.getLiElement(file);\n    if (!isNullOrUndefined(liElement)) {\n      var spinnerEle = liElement.querySelector('.' + SPINNER_PANE);\n      if (!isNullOrUndefined(spinnerEle)) {\n        hideSpinner(liElement);\n        detach(spinnerEle);\n      }\n    }\n    this.trigger('success', args, function (args) {\n      _this.updateStatus(file, args.statusText, '2');\n      _this.uploadedFilesData.push(file);\n      _this.trigger('change', {\n        file: _this.uploadedFilesData\n      });\n      _this.checkActionButtonStatus();\n      if (_this.fileList.length > 0) {\n        if (!_this.getLiElement(file).classList.contains(RESTRICT_RETRY)) {\n          _this.uploadSequential();\n          _this.checkActionComplete(true);\n        } else {\n          /* istanbul ignore next */\n          _this.getLiElement(file).classList.remove(RESTRICT_RETRY);\n        }\n      }\n    });\n  };\n  Uploader.prototype.uploadFailed = function (e, file) {\n    var _this = this;\n    var li = this.getLiElement(file);\n    var response = e && e.currentTarget ? this.getResponse(e) : null;\n    var statusMessage = this.localizedTexts('uploadFailedMessage');\n    var args = {\n      e: e,\n      response: response,\n      operation: 'upload',\n      file: this.updateStatus(file, statusMessage, '0', false),\n      statusText: statusMessage\n    };\n    if (!isNullOrUndefined(li)) {\n      this.renderFailureState(e, file, li);\n    }\n    this.trigger('failure', args, function (args) {\n      _this.updateStatus(file, args.statusText, '0');\n      _this.checkActionButtonStatus();\n      _this.uploadSequential();\n      _this.checkActionComplete(true);\n    });\n  };\n  Uploader.prototype.uploadSequential = function () {\n    if (this.sequentialUpload) {\n      if (this.autoUpload) {\n        /* istanbul ignore next */\n        this.checkAutoUpload(this.filesData);\n      } else {\n        this.uploadButtonClick();\n      }\n    }\n  };\n  Uploader.prototype.checkActionComplete = function (increment) {\n    if (increment) {\n      ++this.actionCompleteCount;\n    } else {\n      --this.actionCompleteCount;\n    }\n    this.raiseActionComplete();\n  };\n  Uploader.prototype.raiseActionComplete = function () {\n    if (this.filesData.length === this.actionCompleteCount && this.flag) {\n      this.flag = false;\n      var eventArgs = {\n        fileData: []\n      };\n      eventArgs.fileData = this.getSelectedFileStatus(this.selectedFiles);\n      this.trigger('actionComplete', eventArgs);\n    }\n  };\n  Uploader.prototype.getSelectedFileStatus = function (selectedFiles) {\n    var matchFiles = [];\n    var matchFilesIndex = 0;\n    for (var selectFileIndex = 0; selectFileIndex < selectedFiles.length; selectFileIndex++) {\n      var selectedFileData = selectedFiles[selectFileIndex];\n      for (var fileDataIndex = 0; fileDataIndex < this.filesData.length; fileDataIndex++) {\n        if (this.filesData[fileDataIndex].name === selectedFileData.name && this.filesData[fileDataIndex].status === selectedFileData.status) {\n          matchFiles[matchFilesIndex] = this.filesData[fileDataIndex];\n          ++matchFilesIndex;\n        }\n      }\n    }\n    return matchFiles;\n  };\n  Uploader.prototype.updateProgressBarClasses = function (li, className) {\n    var progressBar = li.querySelector('.' + PROGRESSBAR);\n    if (!isNullOrUndefined(progressBar)) {\n      progressBar.classList.add(className);\n    }\n  };\n  Uploader.prototype.removeProgressbar = function (li, callType) {\n    var _this = this;\n    if (!isNullOrUndefined(li.querySelector('.' + PROGRESS_WRAPPER))) {\n      this.progressAnimation = new Animation({\n        duration: 1250\n      });\n      this.progressAnimation.animate(li.querySelector('.' + PROGRESS_WRAPPER), {\n        name: 'FadeOut'\n      });\n      this.progressAnimation.animate(li.querySelector('.' + PROGRESSBAR_TEXT), {\n        name: 'FadeOut'\n      });\n      setTimeout(function () {\n        _this.animateProgressBar(li, callType);\n      }, 750);\n    }\n  };\n  /* istanbul ignore next */\n  Uploader.prototype.animateProgressBar = function (li, callType) {\n    if (callType === 'success') {\n      li.classList.add(UPLOAD_SUCCESS);\n      if (!isNullOrUndefined(li.querySelector('.' + STATUS))) {\n        li.querySelector('.' + STATUS).classList.remove(UPLOAD_INPROGRESS);\n        this.progressAnimation.animate(li.querySelector('.' + STATUS), {\n          name: 'FadeIn'\n        });\n        li.querySelector('.' + STATUS).classList.add(UPLOAD_SUCCESS);\n      }\n    } else {\n      if (!isNullOrUndefined(li.querySelector('.' + STATUS))) {\n        li.querySelector('.' + STATUS).classList.remove(UPLOAD_INPROGRESS);\n        this.progressAnimation.animate(li.querySelector('.' + STATUS), {\n          name: 'FadeIn'\n        });\n        li.querySelector('.' + STATUS).classList.add(UPLOAD_FAILED);\n      }\n    }\n    if (li.querySelector('.' + PROGRESS_WRAPPER)) {\n      detach(li.querySelector('.' + PROGRESS_WRAPPER));\n    }\n  };\n  Uploader.prototype.setExtensions = function (extensions) {\n    if (extensions !== '' && !isNullOrUndefined(extensions)) {\n      this.element.setAttribute('accept', extensions);\n    } else {\n      this.element.removeAttribute('accept');\n    }\n  };\n  Uploader.prototype.templateComplier = function (uploadTemplate) {\n    if (uploadTemplate) {\n      try {\n        if (selectAll(uploadTemplate, document).length) {\n          return compile(select(uploadTemplate, document).innerHTML.trim());\n        } else {\n          return compile(uploadTemplate);\n        }\n      } catch (exception) {\n        return compile(uploadTemplate);\n      }\n    }\n    return undefined;\n  };\n  Uploader.prototype.setRTL = function () {\n    if (this.enableRtl) {\n      addClass([this.uploadWrapper], RTL);\n    } else {\n      removeClass([this.uploadWrapper], RTL);\n    }\n  };\n  Uploader.prototype.localizedTexts = function (localeText) {\n    this.l10n.setLocale(this.locale);\n    return this.l10n.getConstant(localeText);\n  };\n  Uploader.prototype.setControlStatus = function () {\n    if (!this.enabled) {\n      this.uploadWrapper.classList.add(DISABLED);\n      this.element.setAttribute('disabled', 'disabled');\n      this.browseButton.setAttribute('disabled', 'disabled');\n      if (!isNullOrUndefined(this.clearButton)) {\n        this.clearButton.setAttribute('disabled', 'disabled');\n      }\n      if (!isNullOrUndefined(this.uploadButton)) {\n        this.uploadButton.setAttribute('disabled', 'disabled');\n      }\n    } else {\n      if (this.uploadWrapper.classList.contains(DISABLED)) {\n        this.uploadWrapper.classList.remove(DISABLED);\n      }\n      if (!isNullOrUndefined(this.browseButton) && this.element.hasAttribute('disabled')) {\n        this.element.removeAttribute('disabled');\n        this.browseButton.removeAttribute('disabled');\n      }\n      if (!isNullOrUndefined(this.clearButton) && this.clearButton.hasAttribute('disabled')) {\n        this.clearButton.removeAttribute('disabled');\n      }\n      if (!isNullOrUndefined(this.uploadButton) && this.uploadButton.hasAttribute('disabled')) {\n        this.uploadButton.hasAttribute('disabled');\n      }\n    }\n  };\n  Uploader.prototype.checkHTMLAttributes = function (isDynamic) {\n    var attributes = isDynamic ? isNullOrUndefined(this.htmlAttributes) ? [] : Object.keys(this.htmlAttributes) : ['accept', 'multiple', 'disabled'];\n    for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {\n      var prop = attributes_1[_i];\n      if (!isNullOrUndefined(this.element.getAttribute(prop))) {\n        switch (prop) {\n          case 'accept':\n            if (isNullOrUndefined(this.uploaderOptions) || this.uploaderOptions['allowedExtensions'] === undefined || isDynamic) {\n              this.setProperties({\n                allowedExtensions: this.element.getAttribute('accept')\n              }, !isDynamic);\n              this.initialAttr.accept = this.allowedExtensions;\n            }\n            break;\n          case 'multiple':\n            if (isNullOrUndefined(this.uploaderOptions) || this.uploaderOptions['multiple'] === undefined || isDynamic) {\n              var isMutiple = this.element.getAttribute(prop) === 'multiple' || this.element.getAttribute(prop) === '' || this.element.getAttribute(prop) === 'true' ? true : false;\n              this.setProperties({\n                multiple: isMutiple\n              }, !isDynamic);\n              this.initialAttr.multiple = true;\n            }\n            break;\n          case 'disabled':\n            if (isNullOrUndefined(this.uploaderOptions) || this.uploaderOptions['enabled'] === undefined || isDynamic) {\n              var isDisabled = this.element.getAttribute(prop) === 'disabled' || this.element.getAttribute(prop) === '' || this.element.getAttribute(prop) === 'true' ? false : true;\n              this.setProperties({\n                enabled: isDisabled\n              }, !isDynamic);\n              this.initialAttr.disabled = true;\n            }\n        }\n      }\n    }\n  };\n  Uploader.prototype.chunkUpload = function (file, custom, fileIndex) {\n    var start = 0;\n    var end = Math.min(this.asyncSettings.chunkSize, file.size);\n    var index = 0;\n    var blob = file.rawFile.slice(start, end);\n    var metaData = {\n      chunkIndex: index,\n      blob: blob,\n      file: file,\n      start: start,\n      end: end,\n      retryCount: 0,\n      request: null\n    };\n    this.sendRequest(file, metaData, custom, fileIndex);\n  };\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  Uploader.prototype.sendRequest = function (file, metaData, custom, fileIndex) {\n    var _this = this;\n    var formData = new FormData();\n    var blob = file.rawFile.slice(metaData.start, metaData.end);\n    formData.append(this.uploaderName, blob, file.name);\n    formData.append('chunk-index', metaData.chunkIndex.toString());\n    formData.append('chunkIndex', metaData.chunkIndex.toString());\n    var totalChunk = Math.max(Math.ceil(file.size / this.asyncSettings.chunkSize), 1);\n    formData.append('total-chunk', totalChunk.toString());\n    formData.append('totalChunk', totalChunk.toString());\n    var ajax = new Ajax({\n      url: this.asyncSettings.saveUrl,\n      type: 'POST',\n      async: true,\n      contentType: null\n    });\n    ajax.emitError = false;\n    ajax.onLoad = function (e) {\n      _this.chunkUploadComplete(e, metaData, custom);\n      return {};\n    };\n    ajax.onUploadProgress = function (e) {\n      _this.chunkUploadInProgress(e, metaData, custom);\n      return {};\n    };\n    var eventArgs = {\n      fileData: file,\n      customFormData: [],\n      cancel: false,\n      chunkSize: this.asyncSettings.chunkSize === 0 ? null : this.asyncSettings.chunkSize\n    };\n    ajax.beforeSend = function (e) {\n      eventArgs.currentRequest = ajax.httpRequest;\n      eventArgs.currentChunkIndex = metaData.chunkIndex;\n      if (eventArgs.currentChunkIndex === 0) {\n        // This event is currently not required but to avoid breaking changes for previous customer, we have included.\n        _this.trigger('uploading', eventArgs, function (eventArgs) {\n          _this.uploadingEventCallback(formData, eventArgs, e, file);\n        });\n      } else {\n        _this.trigger('chunkUploading', eventArgs, function (eventArgs) {\n          _this.uploadingEventCallback(formData, eventArgs, e, file);\n        });\n      }\n    };\n    /* istanbul ignore next */\n    ajax.onError = function (e) {\n      _this.chunkUploadFailed(e, metaData, custom);\n      return {};\n    };\n    ajax.send(formData);\n    metaData.request = ajax;\n  };\n  Uploader.prototype.uploadingEventCallback = function (formData, eventArgs, e, file) {\n    if (eventArgs.cancel) {\n      this.eventCancelByArgs(e, eventArgs, file);\n    } else {\n      this.updateFormData(formData, eventArgs.customFormData);\n    }\n  };\n  Uploader.prototype.eventCancelByArgs = function (e, eventArgs, file) {\n    var _this = this;\n    e.cancel = true;\n    if (eventArgs.fileData.statusCode === '5') {\n      return;\n    }\n    eventArgs.fileData.statusCode = '5';\n    eventArgs.fileData.status = this.localizedTexts('fileUploadCancel');\n    var liElement = this.getLiElement(eventArgs.fileData);\n    if (liElement) {\n      if (!isNullOrUndefined(liElement.querySelector('.' + STATUS))) {\n        liElement.querySelector('.' + STATUS).innerHTML = this.localizedTexts('fileUploadCancel');\n        liElement.querySelector('.' + STATUS).classList.add(UPLOAD_FAILED);\n      }\n      this.pauseButton = this.createElement('span', {\n        className: 'e-icons e-file-reload-btn',\n        attrs: {\n          'tabindex': this.btnTabIndex\n        }\n      });\n      var removeIcon = liElement.querySelector('.' + REMOVE_ICON);\n      if (removeIcon) {\n        removeIcon.parentElement.insertBefore(this.pauseButton, removeIcon);\n      }\n      this.pauseButton.setAttribute('title', this.localizedTexts('retry'));\n      /* istanbul ignore next */\n      this.pauseButton.addEventListener('click', function (e) {\n        _this.reloadcanceledFile(e, file, liElement);\n      }, false);\n      this.checkActionButtonStatus();\n    }\n  };\n  Uploader.prototype.checkChunkUpload = function () {\n    return this.asyncSettings.chunkSize <= 0 || isNullOrUndefined(this.asyncSettings.chunkSize) ? false : true;\n  };\n  Uploader.prototype.chunkUploadComplete = function (e, metaData, custom) {\n    var _this = this;\n    var response = e.target;\n    var liElement;\n    if (response.readyState === 4 && response.status >= 200 && response.status < 300) {\n      var requestResponse = e && e.currentTarget ? this.getResponse(e) : null;\n      var totalChunk = Math.max(Math.ceil(metaData.file.size / this.asyncSettings.chunkSize), 1);\n      var eventArgs = {\n        event: e,\n        file: metaData.file,\n        chunkIndex: metaData.chunkIndex,\n        totalChunk: totalChunk,\n        chunkSize: this.asyncSettings.chunkSize,\n        response: requestResponse\n      };\n      this.trigger('chunkSuccess', eventArgs);\n      if (isNullOrUndefined(custom) || !custom) {\n        liElement = this.getLiElement(metaData.file);\n      }\n      this.updateMetaData(metaData);\n      if (metaData.end === metaData.file.size) {\n        metaData.file.statusCode = '3';\n      }\n      if (metaData.file.statusCode === '5') {\n        var eventArgs_1 = {\n          event: e,\n          fileData: metaData.file,\n          cancel: false,\n          customFormData: []\n        };\n        this.trigger('canceling', eventArgs_1, function (eventArgs) {\n          /* istanbul ignore next */\n          if (eventArgs.cancel) {\n            metaData.file.statusCode = '3';\n            var spinnerTarget = liElement.querySelector('.' + ABORT_ICON);\n            if (!isNullOrUndefined(liElement) && !isNullOrUndefined(spinnerTarget)) {\n              hideSpinner(spinnerTarget);\n              detach(liElement.querySelector('.e-spinner-pane'));\n            }\n            _this.sendNextRequest(metaData);\n          } else {\n            metaData.request.emitError = false;\n            response.abort();\n            var formData = new FormData();\n            var name_2 = _this.element.getAttribute('name');\n            formData.append(name_2, metaData.file.name);\n            formData.append('cancel-uploading', metaData.file.name);\n            formData.append('cancelUploading', metaData.file.name);\n            _this.updateFormData(formData, eventArgs.customFormData);\n            var ajax = new Ajax(_this.asyncSettings.removeUrl, 'POST', true, null);\n            ajax.emitError = false;\n            ajax.onLoad = function (e) {\n              _this.removeChunkFile(e, metaData, custom);\n              return {};\n            };\n            ajax.send(formData);\n          }\n        });\n      } else {\n        if (totalChunk - 1 === metaData.chunkIndex && totalChunk > metaData.chunkIndex) {\n          var index = this.pausedData.indexOf(metaData);\n          if (index >= 0) {\n            this.pausedData.splice(index, 1);\n          }\n          if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom) && liElement) {\n            if (liElement && !isNullOrUndefined(liElement.querySelector('.' + PAUSE_UPLOAD))) {\n              detach(liElement.querySelector('.' + PAUSE_UPLOAD));\n            }\n            this.removeChunkProgressBar(metaData);\n          }\n          this.raiseSuccessEvent(e, metaData.file);\n          return;\n        }\n        if (metaData.file.statusCode !== '4') {\n          this.sendNextRequest(metaData);\n        }\n      }\n    } else {\n      this.chunkUploadFailed(e, metaData);\n    }\n  };\n  Uploader.prototype.sendNextRequest = function (metaData) {\n    metaData.start = metaData.end;\n    metaData.end += this.asyncSettings.chunkSize;\n    metaData.end = Math.min(metaData.end, metaData.file.size);\n    metaData.chunkIndex += 1;\n    this.sendRequest(metaData.file, metaData);\n  };\n  Uploader.prototype.removeChunkFile = function (e, metaData, custom) {\n    if (isNullOrUndefined(this.template) && isNullOrUndefined(custom) && !custom) {\n      var liElement = this.getLiElement(metaData.file);\n      var deleteIcon = liElement.querySelector('.' + ABORT_ICON);\n      var spinnerTarget = deleteIcon;\n      this.updateStatus(metaData.file, this.localizedTexts('fileUploadCancel'), '5');\n      this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n      this.removeProgressbar(liElement, 'failure');\n      deleteIcon && deleteIcon.classList.remove(ABORT_ICON);\n      deleteIcon && deleteIcon.classList.add(REMOVE_ICON);\n      deleteIcon && deleteIcon.setAttribute('title', this.localizedTexts('remove'));\n      var pauseIcon = liElement.querySelector('.' + PAUSE_UPLOAD);\n      pauseIcon && pauseIcon.classList.add(RETRY_ICON);\n      pauseIcon && pauseIcon.classList.remove(PAUSE_UPLOAD);\n      pauseIcon && pauseIcon.setAttribute('title', this.localizedTexts('retry'));\n      if (!isNullOrUndefined(liElement) && !isNullOrUndefined(deleteIcon) && !isNullOrUndefined(liElement.querySelector('.e-spinner-pane'))) {\n        hideSpinner(spinnerTarget);\n        detach(liElement.querySelector('.e-spinner-pane'));\n      }\n    }\n  };\n  Uploader.prototype.pauseUpload = function (metaData, e, custom) {\n    metaData.file.statusCode = '4';\n    metaData.file.status = this.localizedTexts('pause');\n    this.updateMetaData(metaData);\n    var eventArgs = {\n      event: e ? e : null,\n      file: metaData.file,\n      chunkIndex: metaData.chunkIndex,\n      chunkCount: Math.round(metaData.file.size / this.asyncSettings.chunkSize),\n      chunkSize: this.asyncSettings.chunkSize\n    };\n    this.abortUpload(metaData, custom, eventArgs);\n  };\n  Uploader.prototype.abortUpload = function (metaData, custom, eventArgs) {\n    if (metaData.file.statusCode !== '4') {\n      metaData.request.emitError = false;\n      metaData.request.httpRequest.abort();\n    }\n    var liElement = this.getLiElement(metaData.file);\n    if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom)) {\n      var targetElement = liElement.querySelector('.' + PAUSE_UPLOAD);\n      targetElement.classList.remove(PAUSE_UPLOAD);\n      targetElement.classList.add(RESUME_UPLOAD);\n      targetElement.setAttribute('title', this.localizedTexts('resume'));\n      targetElement.nextElementSibling.classList.add(REMOVE_ICON);\n      targetElement.nextElementSibling.classList.remove(ABORT_ICON);\n      targetElement.nextElementSibling.setAttribute('title', this.localizedTexts('remove'));\n    }\n    for (var i = 0; i < this.pausedData.length; i++) {\n      if (this.pausedData[i].file.name === metaData.file.name) {\n        this.pausedData.splice(i, 1);\n      }\n    }\n    this.pausedData.push(metaData);\n    this.trigger('pausing', eventArgs);\n  };\n  Uploader.prototype.resumeUpload = function (metaData, e, custom) {\n    var liElement = this.getLiElement(metaData.file);\n    var targetElement;\n    if (!isNullOrUndefined(liElement)) {\n      targetElement = liElement.querySelector('.' + RESUME_UPLOAD);\n    }\n    if (!isNullOrUndefined(targetElement) && (isNullOrUndefined(custom) || !custom)) {\n      targetElement.classList.remove(RESUME_UPLOAD);\n      targetElement.classList.add(PAUSE_UPLOAD);\n      targetElement.setAttribute('title', this.localizedTexts('pause'));\n      targetElement.nextElementSibling.classList.remove(REMOVE_ICON);\n      targetElement.nextElementSibling.classList.add(ABORT_ICON);\n      targetElement.nextElementSibling.setAttribute('title', this.localizedTexts('abort'));\n    }\n    metaData.file.status = this.localizedTexts('inProgress');\n    metaData.file.statusCode = '3';\n    this.updateMetaData(metaData);\n    var eventArgs = {\n      event: e ? e : null,\n      file: metaData.file,\n      chunkIndex: metaData.chunkIndex,\n      chunkCount: Math.round(metaData.file.size / this.asyncSettings.chunkSize),\n      chunkSize: this.asyncSettings.chunkSize\n    };\n    this.trigger('resuming', eventArgs);\n    for (var i = 0; i < this.pausedData.length; i++) {\n      if (this.pausedData[i].end === this.pausedData[i].file.size) {\n        this.chunkUploadComplete(e, metaData, custom);\n      } else {\n        if (this.pausedData[i].file.name === metaData.file.name) {\n          this.pausedData[i].start = this.pausedData[i].end;\n          this.pausedData[i].end = this.pausedData[i].end + this.asyncSettings.chunkSize;\n          this.pausedData[i].end = Math.min(this.pausedData[i].end, this.pausedData[i].file.size);\n          this.pausedData[i].chunkIndex = this.pausedData[i].chunkIndex + 1;\n          this.sendRequest(this.pausedData[i].file, this.pausedData[i], custom);\n        }\n      }\n    }\n  };\n  Uploader.prototype.updateMetaData = function (metaData) {\n    if (this.uploadMetaData.indexOf(metaData) === -1) {\n      this.uploadMetaData.push(metaData);\n    } else {\n      this.uploadMetaData.splice(this.uploadMetaData.indexOf(metaData), 1);\n      this.uploadMetaData.push(metaData);\n    }\n  };\n  Uploader.prototype.removeChunkProgressBar = function (metaData) {\n    var liElement = this.getLiElement(metaData.file);\n    if (!isNullOrUndefined(liElement)) {\n      this.updateProgressBarClasses(liElement, UPLOAD_SUCCESS);\n      this.removeProgressbar(liElement, 'success');\n      var cancelButton = liElement.querySelector('.' + ABORT_ICON);\n      if (!isNullOrUndefined(cancelButton)) {\n        cancelButton.classList.add(DELETE_ICON);\n        cancelButton.setAttribute('title', this.localizedTexts('delete'));\n        cancelButton.classList.remove(ABORT_ICON, UPLOAD_INPROGRESS);\n      }\n    }\n  };\n  Uploader.prototype.chunkUploadFailed = function (e, metaData, custom) {\n    var _this = this;\n    var chunkCount = Math.max(Math.ceil(metaData.file.size / this.asyncSettings.chunkSize), 1);\n    var liElement;\n    if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom)) {\n      liElement = this.getLiElement(metaData.file);\n    }\n    var requestResponse = e && e.currentTarget ? this.getResponse(e) : null;\n    var eventArgs = {\n      event: e,\n      file: metaData.file,\n      chunkIndex: metaData.chunkIndex,\n      totalChunk: chunkCount,\n      chunkSize: this.asyncSettings.chunkSize,\n      cancel: false,\n      response: requestResponse\n    };\n    this.trigger('chunkFailure', eventArgs, function (eventArgs) {\n      // To prevent triggering of failure event\n      if (!eventArgs.cancel) {\n        if (metaData.retryCount < _this.asyncSettings.retryCount) {\n          setTimeout(function () {\n            _this.retryRequest(liElement, metaData, custom);\n          }, _this.asyncSettings.retryAfterDelay);\n        } else {\n          if (!isNullOrUndefined(liElement)) {\n            var pauseButton = liElement.querySelector('.' + PAUSE_UPLOAD) ? liElement.querySelector('.' + PAUSE_UPLOAD) : liElement.querySelector('.' + RESUME_UPLOAD);\n            if (!isNullOrUndefined(pauseButton)) {\n              pauseButton.classList.add(RETRY_ICON);\n              pauseButton.classList.remove(PAUSE_UPLOAD, RESUME_UPLOAD);\n            }\n            _this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n            _this.removeProgressbar(liElement, 'failure');\n            liElement.querySelector('.e-icons').classList.remove(UPLOAD_INPROGRESS);\n            var iconElement = liElement.querySelector('.' + ABORT_ICON) ? liElement.querySelector('.' + ABORT_ICON) : liElement.querySelector('.' + REMOVE_ICON);\n            iconElement.classList.remove(ABORT_ICON);\n            if (!isNullOrUndefined(liElement.querySelector('.' + PAUSE_UPLOAD))) {\n              detach(liElement.querySelector('.' + PAUSE_UPLOAD));\n            }\n            if (metaData.start > 0) {\n              iconElement.classList.add(DELETE_ICON);\n              iconElement.setAttribute('title', _this.localizedTexts('delete'));\n            } else {\n              iconElement.classList.add(REMOVE_ICON);\n              iconElement.setAttribute('title', _this.localizedTexts('remove'));\n            }\n          }\n          metaData.retryCount = 0;\n          var file_1 = metaData.file;\n          var failureMessage = _this.localizedTexts('uploadFailedMessage');\n          var args = {\n            e: e,\n            response: requestResponse,\n            operation: 'upload',\n            file: _this.updateStatus(file_1, failureMessage, '0', false),\n            statusText: failureMessage\n          };\n          _this.trigger('failure', args, function (args) {\n            _this.updateStatus(file_1, args.statusText, '0');\n            _this.uploadSequential();\n            _this.checkActionComplete(true);\n          });\n        }\n      }\n    });\n  };\n  Uploader.prototype.retryRequest = function (liElement, metaData, custom) {\n    if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom) && liElement) {\n      this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n    }\n    metaData.retryCount += 1;\n    this.sendRequest(metaData.file, metaData);\n  };\n  Uploader.prototype.checkPausePlayAction = function (e) {\n    var targetElement = e.target;\n    var selectedElement = e.target.parentElement;\n    var index = this.fileList.indexOf(selectedElement);\n    var fileData = this.filesData[index];\n    var metaData = this.getCurrentMetaData(fileData);\n    if (targetElement.classList.contains(PAUSE_UPLOAD)) {\n      /* istanbul ignore next */\n      this.pauseUpload(metaData, e);\n    } else if (targetElement.classList.contains(RESUME_UPLOAD)) {\n      /* istanbul ignore next */\n      this.resumeUpload(metaData, e);\n    } else if (targetElement.classList.contains(RETRY_ICON)) {\n      if (metaData.file.status === this.localizedTexts('fileUploadCancel')) {\n        this.retryUpload(metaData, false);\n      } else {\n        this.retryUpload(metaData, true);\n      }\n    }\n  };\n  Uploader.prototype.retryUpload = function (metaData, fromcanceledStage) {\n    if (fromcanceledStage) {\n      metaData.end = metaData.end + this.asyncSettings.chunkSize;\n      metaData.start = metaData.start + this.asyncSettings.chunkSize;\n      this.sendRequest(metaData.file, metaData);\n    } else {\n      metaData.file.statusCode = '1';\n      metaData.file.status = this.localizedTexts('readyToUploadMessage');\n      this.chunkUpload(metaData.file);\n    }\n    /* istanbul ignore next */\n    this.getLiElement(metaData.file).classList.add(RESTRICT_RETRY);\n  };\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  Uploader.prototype.chunkUploadInProgress = function (e, metaData, custom) {\n    var _this = this;\n    if (metaData.file.statusCode === '4') {\n      return;\n    }\n    if (metaData.file.statusCode !== '4' && metaData.file.statusCode !== '5') {\n      metaData.file.statusCode = '3';\n      metaData.file.status = this.localizedTexts('inProgress');\n    }\n    this.updateMetaData(metaData);\n    var liElement = this.getLiElement(metaData.file);\n    if (isNullOrUndefined(liElement)) {\n      return;\n    }\n    var retryElement = liElement.querySelector('.' + RETRY_ICON);\n    if (!isNullOrUndefined(retryElement)) {\n      retryElement.classList.add(PAUSE_UPLOAD);\n      retryElement.setAttribute('title', this.localizedTexts('pause'));\n      retryElement.classList.remove(RETRY_ICON);\n    }\n    if (!isNullOrUndefined(liElement)) {\n      if (!(liElement.querySelectorAll('.' + PROGRESS_WRAPPER).length > 0)) {\n        var statusElement = liElement.querySelector('.' + STATUS);\n        if (isNullOrUndefined(this.template)) {\n          statusElement.classList.add(UPLOAD_INPROGRESS);\n          statusElement.classList.remove(UPLOAD_FAILED);\n          this.createProgressBar(liElement);\n          this.updateProgressBarClasses(liElement, UPLOAD_INPROGRESS);\n        }\n        var clearIcon = liElement.querySelector('.' + REMOVE_ICON) ? liElement.querySelector('.' + REMOVE_ICON) : liElement.querySelector('.' + DELETE_ICON);\n        if (!isNullOrUndefined(clearIcon)) {\n          clearIcon.classList.add(ABORT_ICON);\n          clearIcon.setAttribute('title', this.localizedTexts('abort'));\n          clearIcon.classList.remove(REMOVE_ICON);\n        }\n      }\n      if (!isNaN(Math.round(e.loaded / e.total * 100)) && isNullOrUndefined(this.template) && metaData.file.statusCode !== '4') {\n        var progressVal = void 0;\n        var totalChunks = Math.ceil(metaData.file.size / this.asyncSettings.chunkSize) - 1;\n        if (this.asyncSettings.chunkSize && totalChunks) {\n          progressVal = Math.round(metaData.chunkIndex / totalChunks * 100);\n          this.changeProgressValue(liElement, progressVal.toString() + '%');\n        }\n      }\n      if (metaData.chunkIndex === 0) {\n        this.checkActionButtonStatus();\n      }\n    }\n    if (isNullOrUndefined(liElement.querySelector('.' + PAUSE_UPLOAD)) && isNullOrUndefined(this.template) && isNullOrUndefined(liElement.querySelector('.' + DELETE_ICON))) {\n      this.pauseButton = this.createElement('span', {\n        className: 'e-icons e-file-pause-btn',\n        attrs: {\n          'tabindex': this.btnTabIndex\n        }\n      });\n      if (this.browserName === 'msie') {\n        this.pauseButton.classList.add('e-msie');\n      }\n      var abortIcon = liElement.querySelector('.' + ABORT_ICON);\n      abortIcon.parentElement.insertBefore(this.pauseButton, abortIcon);\n      this.pauseButton.setAttribute('title', this.localizedTexts('pause'));\n      this.pauseButton.addEventListener('click', function (e) {\n        _this.checkPausePlayAction(e);\n      }, false);\n    }\n  };\n  /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\n  /**\n   * It is used to convert bytes value into kilobytes or megabytes depending on the size based\n   * on [binary prefix](https://en.wikipedia.org/wiki/Binary_prefix).\n   *\n   * @param { number } bytes - Specifies the file size in bytes.\n   * @returns {string}\n   */\n  Uploader.prototype.bytesToSize = function (bytes) {\n    var i = -1;\n    if (!bytes) {\n      return '0.0 KB';\n    }\n    do {\n      bytes = bytes / 1024;\n      i++;\n    } while (bytes > 99);\n    if (i >= 2) {\n      bytes = bytes * 1024;\n      i = 1;\n    }\n    return Math.max(bytes, 0).toFixed(1) + ' ' + ['KB', 'MB'][i];\n  };\n  /**\n   * Allows you to sort the file data alphabetically based on its file name clearly.\n   *\n   * @param { FileList } filesData - specifies the files data for upload.\n   * @returns {File[]}\n   */\n  /* istanbul ignore next */\n  Uploader.prototype.sortFileList = function (filesData) {\n    filesData = filesData ? filesData : this.sortFilesList;\n    var files = filesData;\n    var fileNames = [];\n    for (var i = 0; i < files.length; i++) {\n      fileNames.push(files[i].name);\n    }\n    var sortedFileNames = fileNames.sort();\n    var sortedFilesData = [];\n    for (var _i = 0, sortedFileNames_1 = sortedFileNames; _i < sortedFileNames_1.length; _i++) {\n      var name_3 = sortedFileNames_1[_i];\n      for (var i = 0; i < files.length; i++) {\n        if (name_3 === files[i].name) {\n          sortedFilesData.push(files[i]);\n        }\n      }\n    }\n    return sortedFilesData;\n  };\n  /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\n  /**\n   * Removes the component from the DOM and detaches all its related event handlers. Also it removes the attributes and classes.\n   *\n   * @method destroy\n   * @returns {void}\n   */\n  Uploader.prototype.destroy = function () {\n    this.element.value = null;\n    this.clearTemplate();\n    this.clearAll();\n    this.unWireEvents();\n    this.unBindDropEvents();\n    if (this.multiple) {\n      this.element.removeAttribute('multiple');\n    }\n    if (!this.enabled) {\n      this.element.removeAttribute('disabled');\n    }\n    this.element.removeAttribute('accept');\n    this.setInitialAttributes();\n    var attributes = ['aria-label', 'directory', 'webkitdirectory', 'tabindex'];\n    for (var _i = 0, attributes_2 = attributes; _i < attributes_2.length; _i++) {\n      var key = attributes_2[_i];\n      this.element.removeAttribute(key);\n    }\n    if (!isNullOrUndefined(this.uploadWrapper)) {\n      this.uploadWrapper.parentElement.appendChild(this.element);\n      detach(this.uploadWrapper);\n    }\n    this.uploadWrapper = null;\n    this.uploadWrapper = null;\n    this.browseButton = null;\n    this.dropAreaWrapper = null;\n    this.dropZoneElement = null;\n    this.dropArea = null;\n    this.keyboardModule = null;\n    this.clearButton = null;\n    this.uploadButton = null;\n    _super.prototype.destroy.call(this);\n  };\n  /**\n   * Allows you to call the upload process manually by calling save URL action.\n   * To process the selected files (added in upload queue), pass an empty argument otherwise\n   * upload the specific file based on its argument.\n   *\n   * @param { FileInfo | FileInfo[] } files - Specifies the files data for upload.\n   * @param {boolean} custom - Specifies whether the uploader is rendered with custom file list.\n   * @returns {void}\n   */\n  Uploader.prototype.upload = function (files, custom) {\n    var _this = this;\n    files = files ? files : this.filesData;\n    if (this.sequentialUpload && (this.isFirstFileOnSelection || custom)) {\n      this.sequenceUpload(files);\n    } else {\n      var uploadFiles_1 = this.getFilesInArray(files);\n      var eventArgs = {\n        customFormData: [],\n        currentRequest: null,\n        cancel: false\n      };\n      this.trigger('beforeUpload', eventArgs, function (eventArgs) {\n        if (!eventArgs.cancel) {\n          _this.uploadFiles(uploadFiles_1, custom);\n        }\n      });\n    }\n  };\n  Uploader.prototype.getFilesInArray = function (files) {\n    var uploadFiles = [];\n    if (files instanceof Array) {\n      uploadFiles = files;\n    } else {\n      uploadFiles.push(files);\n    }\n    return uploadFiles;\n  };\n  /* istanbul ignore next */\n  Uploader.prototype.serverReadFileBase64 = function (fileIndex, position, totalCount) {\n    var _this = this;\n    return new Promise(function (resolve, reject) {\n      var file = _this.fileStreams[fileIndex].rawFile;\n      try {\n        var reader = new FileReader();\n        reader.onload = function (args) {\n          return function () {\n            try {\n              var contents = args.result;\n              var data = contents ? contents.split(';base64,')[1] : null;\n              resolve(data);\n            } catch (e) {\n              reject(e);\n            }\n          };\n        }(reader);\n        reader.readAsDataURL(file.slice(position, position + totalCount));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  /* istanbul ignore next */\n  Uploader.prototype.uploadFileCount = function (ele) {\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    var files = this.filesData;\n    if (!files || files.length === 0) {\n      return -1;\n    }\n    var result = files.length;\n    return result;\n  };\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  /* istanbul ignore next */\n  Uploader.prototype.getFileRead = function (index, ele) {\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    var files = this.filesData;\n    if (!files || files.length === 0) {\n      return -1;\n    }\n    var file = files[index];\n    var fileCount = this.newFileRef++;\n    this.fileStreams[fileCount] = file;\n    return fileCount;\n  };\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  /* istanbul ignore next */\n  Uploader.prototype.getFileInfo = function (index, ele) {\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    var files = this.filesData;\n    if (!files || files.length === 0) {\n      return null;\n    }\n    var file = files[index];\n    if (!file) {\n      return null;\n    }\n    return this.filesData[index];\n  };\n  Uploader.prototype.uploadFiles = function (files, custom) {\n    var selectedFiles = [];\n    if (this.asyncSettings.saveUrl === '' || isNullOrUndefined(this.asyncSettings.saveUrl)) {\n      return;\n    }\n    if (!custom || isNullOrUndefined(custom)) {\n      if (!this.multiple) {\n        var file = [];\n        file.push(files[0]);\n        selectedFiles = this.filterfileList(file);\n      } else {\n        selectedFiles = this.filterfileList(files);\n      }\n    } else {\n      selectedFiles = files;\n    }\n    for (var i = 0; i < selectedFiles.length; i++) {\n      this.uploadFilesRequest(selectedFiles, i, custom);\n    }\n  };\n  Uploader.prototype.uploadFilesRequest = function (selectedFiles, i, custom) {\n    var _this = this;\n    var cloneFiles = [];\n    var chunkEnabled = this.checkChunkUpload();\n    var ajax = new Ajax(this.asyncSettings.saveUrl, 'POST', true, null);\n    ajax.emitError = false;\n    var getFileData;\n    var eventArgs = {\n      fileData: selectedFiles[i],\n      customFormData: [],\n      cancel: false\n    };\n    var formData = new FormData();\n    ajax.beforeSend = function (e) {\n      eventArgs.currentRequest = ajax.httpRequest;\n      _this.trigger('uploading', eventArgs, function (eventArgs) {\n        /* istanbul ignore next */\n        if (eventArgs.cancel) {\n          _this.eventCancelByArgs(e, eventArgs, selectedFiles[i]);\n        }\n        _this.updateFormData(formData, eventArgs.customFormData);\n      });\n    };\n    if (selectedFiles[i].statusCode === '1') {\n      var name_4 = this.element.getAttribute('name');\n      formData.append(name_4, selectedFiles[i].rawFile, selectedFiles[i].name);\n      if (chunkEnabled && selectedFiles[i].size > this.asyncSettings.chunkSize) {\n        this.chunkUpload(selectedFiles[i], custom, i);\n      } else {\n        ajax.onLoad = function (e) {\n          if (eventArgs.cancel) {\n            return {};\n          } else {\n            _this.uploadComplete(e, selectedFiles[i], custom);\n            return {};\n          }\n        };\n        ajax.onUploadProgress = function (e) {\n          if (eventArgs.cancel) {\n            return {};\n          } else {\n            _this.uploadInProgress(e, selectedFiles[i], custom, ajax);\n            return {};\n          }\n        };\n        /* istanbul ignore next */\n        ajax.onError = function (e) {\n          _this.uploadFailed(e, selectedFiles[i]);\n          return {};\n        };\n        ajax.send(formData);\n      }\n    }\n  };\n  Uploader.prototype.spliceFiles = function (liIndex) {\n    var liElement = this.fileList[liIndex];\n    var allFiles = this.getFilesData();\n    var nameElements = +liElement.getAttribute('data-files-count');\n    var startIndex = 0;\n    for (var i = 0; i < liIndex; i++) {\n      startIndex += +this.fileList[i].getAttribute('data-files-count');\n    }\n    var endIndex = startIndex + nameElements - 1;\n    for (var j = endIndex; j >= startIndex; j--) {\n      allFiles.splice(j, 1);\n    }\n  };\n  /* eslint-disable valid-jsdoc, jsdoc/require-param */\n  /**\n   * Remove the uploaded file from server manually by calling the remove URL action.\n   * If you pass an empty argument to this method, the complete file list can be cleared,\n   * otherwise remove the specific file based on its argument (“file_data”).\n   *\n   * @param { FileInfo | FileInfo[] } fileData - specifies the files data to remove from file list/server.\n   * @param { boolean } customTemplate - Set true if the component rendering with customize template.\n   * @param { boolean } removeDirectly - Set true if files remove without removing event.\n   * @param { boolean } postRawFile - Set false, to post file name only to the remove action.\n   * @returns {void}\n   */\n  Uploader.prototype.remove = function (fileData, customTemplate, removeDirectly, postRawFile, args) {\n    var _this = this;\n    if (isNullOrUndefined(postRawFile)) {\n      postRawFile = true;\n    }\n    var eventArgs = {\n      event: args,\n      cancel: false,\n      filesData: [],\n      customFormData: [],\n      postRawFile: postRawFile,\n      currentRequest: null\n    };\n    var beforeEventArgs = {\n      cancel: false,\n      customFormData: [],\n      currentRequest: null\n    };\n    this.trigger('beforeRemove', beforeEventArgs, function (beforeEventArgs) {\n      if (!beforeEventArgs.cancel) {\n        if (_this.isFormUpload()) {\n          eventArgs.filesData = fileData;\n          _this.trigger('removing', eventArgs, function (eventArgs) {\n            if (!eventArgs.cancel) {\n              var removingFiles = _this.getFilesInArray(fileData);\n              var isLiRemoved = false;\n              var liIndex = void 0;\n              for (var _i = 0, removingFiles_1 = removingFiles; _i < removingFiles_1.length; _i++) {\n                var data = removingFiles_1[_i];\n                if (!isLiRemoved) {\n                  liIndex = _this.fileList.indexOf(data.list);\n                }\n                if (liIndex > -1) {\n                  var inputElement = !isNullOrUndefined(data.input) ? data.input : null;\n                  if (inputElement) {\n                    detach(inputElement);\n                  }\n                  _this.spliceFiles(liIndex);\n                  detach(_this.fileList[liIndex]);\n                  _this.fileList.splice(liIndex, 1);\n                  isLiRemoved = true;\n                  liIndex = -1;\n                }\n              }\n            }\n          });\n        } else if (_this.isForm && (isNullOrUndefined(_this.asyncSettings.removeUrl) || _this.asyncSettings.removeUrl === '')) {\n          eventArgs.filesData = _this.getFilesData();\n          _this.trigger('removing', eventArgs, function (eventArgs) {\n            if (!eventArgs.cancel) {\n              _this.clearAll();\n            }\n          });\n        } else {\n          var removeFiles = [];\n          fileData = !isNullOrUndefined(fileData) ? fileData : _this.filesData;\n          if (fileData instanceof Array) {\n            removeFiles = fileData;\n          } else {\n            removeFiles.push(fileData);\n          }\n          eventArgs.filesData = removeFiles;\n          var removeUrl = _this.asyncSettings.removeUrl;\n          var validUrl = removeUrl === '' || isNullOrUndefined(removeUrl) ? false : true;\n          var _loop_5 = function (files) {\n            var fileUploadedIndex = _this.uploadedFilesData.indexOf(files);\n            if ((files.statusCode === '2' || files.statusCode === '4' || files.statusCode === '0' && fileUploadedIndex !== -1) && validUrl) {\n              _this.removeUploadedFile(files, eventArgs, removeDirectly, customTemplate);\n            } else {\n              if (!removeDirectly) {\n                _this.trigger('removing', eventArgs, function (eventArgs) {\n                  if (!eventArgs.cancel) {\n                    _this.removeFilesData(files, customTemplate);\n                  }\n                });\n              } else {\n                _this.removeFilesData(files, customTemplate);\n              }\n            }\n            if (args && !args.target.classList.contains(REMOVE_ICON)) {\n              _this.checkActionComplete(false);\n            }\n          };\n          for (var _i = 0, removeFiles_1 = removeFiles; _i < removeFiles_1.length; _i++) {\n            var files = removeFiles_1[_i];\n            _loop_5(files);\n          }\n        }\n      }\n    });\n  };\n  /* eslint-enable valid-jsdoc, jsdoc/require-param */\n  /**\n   * Clear all the file entries from list that can be uploaded files or added in upload queue.\n   *\n   * @returns {void}\n   */\n  Uploader.prototype.clearAll = function () {\n    var _this = this;\n    if (isNullOrUndefined(this.listParent)) {\n      if (this.browserName !== 'msie') {\n        this.element.value = '';\n      }\n      this.filesData = [];\n      return;\n    }\n    var eventArgs = {\n      cancel: false,\n      filesData: this.filesData\n    };\n    this.trigger('clearing', eventArgs, function (eventArgs) {\n      if (!eventArgs.cancel) {\n        _this.clearData();\n        _this.actionCompleteCount = 0;\n        _this.count = -1;\n      }\n    });\n  };\n  /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\n  /**\n   * Get the data of files which are shown in file list.\n   *\n   * @param { number } index - specifies the file list item(li) index.\n   * @returns {FileInfo[]}\n   */\n  Uploader.prototype.getFilesData = function (index) {\n    if (isNullOrUndefined(index)) {\n      return this.filesData;\n    } else {\n      return this.getSelectedFiles(index);\n    }\n  };\n  /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\n  /**\n   * Pauses the in-progress chunked upload based on the file data.\n   *\n   * @param { FileInfo | FileInfo[] } fileData - specifies the files data to pause from uploading.\n   * @param { boolean } custom - Set true if used custom UI.\n   * @returns {void}\n   */\n  Uploader.prototype.pause = function (fileData, custom) {\n    fileData = fileData ? fileData : this.filesData;\n    var fileDataFiles = this.getFilesInArray(fileData);\n    this.pauseUploading(fileDataFiles, custom);\n  };\n  Uploader.prototype.pauseUploading = function (fileData, custom) {\n    var files = this.getFiles(fileData);\n    for (var i = 0; i < files.length; i++) {\n      if (files[i].statusCode === '3') {\n        this.pauseUpload(this.getCurrentMetaData(files[i], null), null, custom);\n      }\n    }\n  };\n  Uploader.prototype.getFiles = function (fileData) {\n    var files = [];\n    if (!isNullOrUndefined(fileData) && !(fileData instanceof Array)) {\n      files.push(fileData);\n    } else {\n      files = fileData;\n    }\n    return files;\n  };\n  /**\n   * Resumes the chunked upload that is previously paused based on the file data.\n   *\n   * @param { FileInfo | FileInfo[] } fileData - specifies the files data to resume the paused file.\n   * @param { boolean } custom - Set true if used custom UI.\n   * @returns {void}\n   */\n  Uploader.prototype.resume = function (fileData, custom) {\n    fileData = fileData ? fileData : this.filesData;\n    var fileDataFiles = this.getFilesInArray(fileData);\n    this.resumeFiles(fileDataFiles, custom);\n  };\n  Uploader.prototype.resumeFiles = function (fileData, custom) {\n    var files = this.getFiles(fileData);\n    for (var i = 0; i < files.length; i++) {\n      if (files[i].statusCode === '4') {\n        this.resumeUpload(this.getCurrentMetaData(files[i], null), null, custom);\n      }\n    }\n  };\n  /**\n   * Retries the canceled or failed file upload based on the file data.\n   *\n   * @param { FileInfo | FileInfo[] } fileData - specifies the files data to retry the canceled or failed file.\n   * @param { boolean } fromcanceledStage - Set true to retry from canceled stage and set false to retry from initial stage.\n   * @param {boolean} custom -Specifies whether the uploader is rendered with custom file list.\n   * @returns {void}\n   */\n  Uploader.prototype.retry = function (fileData, fromcanceledStage, custom) {\n    fileData = fileData ? fileData : this.filesData;\n    var fileDataFiles = this.getFilesInArray(fileData);\n    if (this.sequentialUpload && this.isFirstFileOnSelection) {\n      this.isFirstFileOnSelection = false;\n    }\n    this.retryFailedFiles(fileDataFiles, fromcanceledStage, custom);\n  };\n  Uploader.prototype.retryFailedFiles = function (fileData, fromcanceledStage, custom) {\n    var files = this.getFiles(fileData);\n    for (var i = 0; i < files.length; i++) {\n      if (files[i].statusCode === '5' || files[i].statusCode === '0') {\n        if (this.asyncSettings.chunkSize > 0 && this.getCurrentMetaData(files[i], null)) {\n          this.retryUpload(this.getCurrentMetaData(files[i], null), fromcanceledStage);\n        } else {\n          var liElement = void 0;\n          if (!custom) {\n            liElement = this.fileList[this.filesData.indexOf(files[i])];\n          }\n          this.reloadcanceledFile(null, files[i], liElement, custom);\n        }\n      }\n    }\n  };\n  /**\n   * Stops the in-progress chunked upload based on the file data.\n   * When the file upload is canceled, the partially uploaded file is removed from server.\n   *\n   * @param { FileInfo | FileInfo[] } fileData - specifies the files data to cancel the progressing file.\n   * @returns {void}\n   */\n  Uploader.prototype.cancel = function (fileData) {\n    fileData = fileData ? fileData : this.filesData;\n    var cancelingFiles = this.getFilesInArray(fileData);\n    this.cancelUpload(cancelingFiles);\n  };\n  Uploader.prototype.cancelUpload = function (fileData) {\n    var files = this.getFiles(fileData);\n    if (this.asyncSettings.chunkSize > 0) {\n      for (var i = 0; i < files.length; i++) {\n        if (files[i].statusCode === '3') {\n          var metaData = this.getCurrentMetaData(files[i], null);\n          metaData.file.statusCode = '5';\n          metaData.file.status = this.localizedTexts('fileUploadCancel');\n          this.updateMetaData(metaData);\n          this.showHideUploadSpinner(files[i]);\n        }\n      }\n    } else {\n      for (var i = 0; i < files.length; i++) {\n        if (files[i].statusCode === '3') {\n          files[i].statusCode = '5';\n          files[i].status = this.localizedTexts('fileUploadCancel');\n          this.showHideUploadSpinner(files[i]);\n        }\n      }\n    }\n  };\n  Uploader.prototype.showHideUploadSpinner = function (files) {\n    var liElement = this.getLiElement(files);\n    if (!isNullOrUndefined(liElement) && isNullOrUndefined(this.template)) {\n      var spinnerTarget = liElement.querySelector('.' + ABORT_ICON);\n      createSpinner({\n        target: spinnerTarget,\n        width: '20px'\n      });\n      showSpinner(spinnerTarget);\n    }\n  };\n  __decorate([Complex({\n    saveUrl: '',\n    removeUrl: ''\n  }, AsyncSettings)], Uploader.prototype, \"asyncSettings\", void 0);\n  __decorate([Property(false)], Uploader.prototype, \"sequentialUpload\", void 0);\n  __decorate([Property({})], Uploader.prototype, \"htmlAttributes\", void 0);\n  __decorate([Property('')], Uploader.prototype, \"cssClass\", void 0);\n  __decorate([Property(true)], Uploader.prototype, \"enabled\", void 0);\n  __decorate([Property(null)], Uploader.prototype, \"template\", void 0);\n  __decorate([Property(true)], Uploader.prototype, \"multiple\", void 0);\n  __decorate([Property(true)], Uploader.prototype, \"autoUpload\", void 0);\n  __decorate([Property(true)], Uploader.prototype, \"enableHtmlSanitizer\", void 0);\n  __decorate([Complex({}, ButtonsProps)], Uploader.prototype, \"buttons\", void 0);\n  __decorate([Property('')], Uploader.prototype, \"allowedExtensions\", void 0);\n  __decorate([Property(0)], Uploader.prototype, \"minFileSize\", void 0);\n  __decorate([Property(30000000)], Uploader.prototype, \"maxFileSize\", void 0);\n  __decorate([Property(null)], Uploader.prototype, \"dropArea\", void 0);\n  __decorate([Collection([{}], FilesProp)], Uploader.prototype, \"files\", void 0);\n  __decorate([Property(true)], Uploader.prototype, \"showFileList\", void 0);\n  __decorate([Property(false)], Uploader.prototype, \"directoryUpload\", void 0);\n  __decorate([Property('Default')], Uploader.prototype, \"dropEffect\", void 0);\n  __decorate([Event()], Uploader.prototype, \"created\", void 0);\n  __decorate([Event()], Uploader.prototype, \"actionComplete\", void 0);\n  __decorate([Event()], Uploader.prototype, \"rendering\", void 0);\n  __decorate([Event()], Uploader.prototype, \"beforeUpload\", void 0);\n  __decorate([Event()], Uploader.prototype, \"fileListRendering\", void 0);\n  __decorate([Event()], Uploader.prototype, \"selected\", void 0);\n  __decorate([Event()], Uploader.prototype, \"uploading\", void 0);\n  __decorate([Event()], Uploader.prototype, \"success\", void 0);\n  __decorate([Event()], Uploader.prototype, \"failure\", void 0);\n  __decorate([Event()], Uploader.prototype, \"removing\", void 0);\n  __decorate([Event()], Uploader.prototype, \"beforeRemove\", void 0);\n  __decorate([Event()], Uploader.prototype, \"clearing\", void 0);\n  __decorate([Event()], Uploader.prototype, \"progress\", void 0);\n  __decorate([Event()], Uploader.prototype, \"change\", void 0);\n  __decorate([Event()], Uploader.prototype, \"chunkSuccess\", void 0);\n  __decorate([Event()], Uploader.prototype, \"chunkFailure\", void 0);\n  __decorate([Event()], Uploader.prototype, \"chunkUploading\", void 0);\n  __decorate([Event()], Uploader.prototype, \"canceling\", void 0);\n  __decorate([Event()], Uploader.prototype, \"pausing\", void 0);\n  __decorate([Event()], Uploader.prototype, \"resuming\", void 0);\n  Uploader = __decorate([NotifyPropertyChanges], Uploader);\n  return Uploader;\n}(Component);\nexport { Uploader };\n/* eslint-enable @typescript-eslint/no-explicit-any */","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","Property","Event","EventHandler","L10n","compile","isNullOrUndefined","SanitizeHtmlHelper","NotifyPropertyChanges","detach","append","Animation","addClass","removeClass","KeyboardEvents","setValue","getValue","ChildProperty","Collection","Complex","Browser","Ajax","getUniqueID","closest","remove","createSpinner","showSpinner","hideSpinner","select","selectAll","CONTROL_WRAPPER","INPUT_WRAPPER","DROP_AREA","DROP_WRAPPER","LIST_PARENT","FILE","STATUS","ACTION_BUTTONS","UPLOAD_BUTTONS","CLEAR_BUTTONS","FILE_NAME","FILE_TYPE","FILE_SIZE","REMOVE_ICON","DELETE_ICON","SPINNER_PANE","ABORT_ICON","RETRY_ICON","DRAG_HOVER","PROGRESS_WRAPPER","PROGRESSBAR","PROGRESSBAR_TEXT","UPLOAD_INPROGRESS","UPLOAD_SUCCESS","UPLOAD_FAILED","TEXT_CONTAINER","VALIDATION_FAILS","RTL","DISABLED","RTL_CONTAINER","ICON_FOCUSED","PROGRESS_INNER_WRAPPER","PAUSE_UPLOAD","RESUME_UPLOAD","RESTRICT_RETRY","wrapperAttr","FORM_UPLOAD","HIDDEN_INPUT","INVALID_FILE","INFORMATION","FilesProp","_super","apply","ButtonsProps","AsyncSettings","Uploader","options","element","_this","call","initialAttr","accept","multiple","disabled","uploadedFilesData","base64String","isForm","allTypes","pausedData","uploadMetaData","tabIndex","btnTabIndex","disableKeyboardNavigation","count","actionCompleteCount","flag","selectedFiles","uploaderName","fileStreams","newFileRef","isFirstFileOnSelection","dragCounter","isAngular","fileList","filesData","uploaderOptions","onPropertyChanged","newProp","oldProp","_i","_a","keys","prop","setExtensions","allowedExtensions","clearAll","setControlStatus","setMultipleSelection","setRTL","reRenderFileList","buttons","browse","clear","upload","renderButtonTemplates","unBindDropEvents","updateDropArea","updateHTMLAttrToElement","updateHTMLAttrToWrapper","checkHTMLAttributes","renderPreLoadFiles","updateDirectoryAttributes","l10n","setLocale","locale","setLocalizedTexts","preLocaleObj","setCSSClass","cssClass","template","browseButton","innerText","localizedTexts","setAttribute","uploadWrapper","querySelector","innerHTML","updateFileList","getKeyValue","val","keyValue","status","classList","contains","autoUpload","uploadButton","clearButton","listParent","createFileList","actionButtons","removeActionButtons","renderActionButtons","checkActionButtonStatus","preRender","localeText","Browse","Clear","Upload","invalidFileName","dropFilesHint","invalidMaxFileSize","invalidMinFileSize","invalidFileType","uploadFailedMessage","uploadSuccessMessage","removedSuccessMessage","removedFailedMessage","inProgress","readyToUploadMessage","abort","cancel","delete","pauseUpload","pause","resume","retry","fileUploadCancel","invalidFileSelection","totalFiles","size","formRendered","ejInstance","tagName","inputElement","createElement","attrs","type","index","attributes","nodeName","nodeValue","hasAttribute","appendChild","isPureReactComponent","props","name","id","getAttribute","keyConfigs","enter","browserName","info","parentEle","document","documentElement","parentElement","formElement","getPersistData","addOnPersist","getModuleName","directoryUpload","removeAttribute","render","renderBrowseButton","initializeUpload","wireEvents","className","textContent","blur","isPreloadFiles","focus","wireActionButtonEvents","serverActionButtonsEventBind","unwireActionButtonEvents","add","uploadButtonClick","clearButtonClick","uploadText","clearText","inputWrapper","insertBefore","dropAreaWrapper","setDropArea","files","enablePersistence","slice","clearData","files_1","data","fileData","split","rawFile","validationMessages","minSize","maxSize","statusCode","push","allowUpload","showFileList","sequentialUpload","length_1","querySelectorAll","dropTextArea","dropArea","dropZoneElement","enableDropText","parentNode","createDropTextHint","undefined","setProperties","bindDropEvents","fileDropArea","htmlAttributes","pro","indexOf","updatedClassValues","replace","trim","uploadStyle","newAttr","createAttribute","value","setAttributeNode","checkAutoUpload","sequenceUpload","isFileListCreated","oldCSSClass","updatedOldCssClass","updatedCssClassValue","browseButtonClick","onSelectFiles","removeFocus","keyboardModule","keyAction","keyActionHandler","bind","eventName","resetForm","unWireEvents","destroy","e","targetElement","action","metaData","getCurrentMetaData","file","abortUpload","resumeUpload","chunkUpload","removeFiles","preventDefault","stopPropagation","fileInfo","targetMetaData","activeElement","click","dropElement","dragHover","onDragLeave","onPasteFile","onDragEnter","enabled","dropEffect","dataTransfer","toLowerCase","event","item","clipboardData","items","pasteFile","kind","match","renderSelectedFiles","getAsFile","getSelectedFiles","liElement","allFiles","getFilesData","nameElements","startIndex","j","args","selectedElement","formUpload","isFormUpload","getFilesInArray","spinnerTarget","width","uploadSequential","checkActionComplete","removeFilesData","customTemplate","splice","getLiElement","removeUploadedFile","eventArgs","removeDirectly","custom","ajax","asyncSettings","removeUrl","emitError","formData","FormData","beforeSend","currentRequest","httpRequest","trigger","removingEventCallback","onLoad","removeCompleted","onError","removeFailed","send","postRawFile","updateFormData","customFormData","customData","_loop_1","map","updateCustomheader","request","_loop_2","setRequestHeader","response","currentTarget","getResponse","readyState","operation","updateStatus","rootElement","statusElement","getFilesFromFolder","filesEntries","validDirectoryUpload","checkDirectoryUpload","_loop_3","webkitGetAsEntry","isFile","files_2","fileObj","path","fullPath","this_1","isDirectory","traverseFileTree","directoryReader","createReader","readFileFromDirectory","readEntries","entries","pushFilesEntries","_loop_4","this_2","targetFiles","sortFilesList","sortFileList","getBase64","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","directory","paste","isModified","modifiedFilesData","progressInterval","isCanceled","updateInitialFileDetails","enableHtmlSanitizer","sanitizeFile","beforeSanitize","sanitizeFileName","serializeValue","encodedFileName","charCodeAt","checkExtension","_internalRenderSelect","fileName","substring","lastIndexOf","getFileType","webkitRelativePath","fileDetails","validatedFileSize","fileSource","concat","k","dataFiles","updateSortedFileList","raiseActionComplete","allowFormUpload","saveUrl","singleUpload","previousListClone","added","removedList","cloneNode","removedList_1","oldList","childNodes","createParentUL","isBlank","str","test","dropFiles","extensions","extensions_1","extension","toLocaleLowerCase","fileSize","minSizeError","maxSizeError","minFileSize","maxFileSize","errorMessage","isPreLoadFile","isPreload","createCustomfileList","fileData_1","listItem","listElement","uploadTemplateFn","templateComplier","liTempCompiler","isStringTemplate","fromElements","eventsArgs","renderReactTemplates","formFileList","fileContainer","statusMessage","fileData_2","fileNameEle","getFileNameOnly","fileTypeEle","fileType","enableRtl","rtlContainer","truncateName","formValidateFileInfo","setListToFileInfo","infoEle","bytesToSize","getFileSize","createFormInput","iconElement","mergeFileInfo","addInvalidClass","typeValidationMessage","fileData_3","input","fileData_4","list","fileNames","fileData_5","join","statusForFormUpload","isValid","fileData_6","formCustomFileList","isSelectedFile","fileData_7","textContainer","textElement","fileExtension","preventActionComplete","getSlicedName","nameElement","text","dataset","tail","fileData_8","offsetWidth","scrollWidth","names","setInitialAttributes","filterfileList","filterFiles","li","updateLiStatus","createProgressBar","progressbarWrapper","progressBar","max","progressbarInnerWrapper","progressbarText","updateProgressbar","isNaN","Math","round","loaded","total","parseInt","changeProgressValue","toString","progressValue","uploadInProgress","customUI","cancelUploadingFile","updateProgressBarClasses","iconEle","name_1","removecanceledFile","renderFailureState","requestResponse","removeProgressbar","deleteIcon","pauseButton","retryElement","addEventListener","reloadcanceledFile","uploadComplete","raiseSuccessEvent","uploadFailed","statusText","headers","getAllResponseHeaders","withCredentials","spinnerEle","increment","getSelectedFileStatus","matchFiles","matchFilesIndex","selectFileIndex","selectedFileData","fileDataIndex","callType","progressAnimation","duration","animate","setTimeout","animateProgressBar","uploadTemplate","exception","getConstant","isDynamic","attributes_1","isMutiple","isDisabled","fileIndex","start","end","min","chunkSize","blob","chunkIndex","retryCount","sendRequest","totalChunk","ceil","url","async","contentType","chunkUploadComplete","onUploadProgress","chunkUploadInProgress","currentChunkIndex","uploadingEventCallback","chunkUploadFailed","eventCancelByArgs","removeIcon","checkChunkUpload","updateMetaData","eventArgs_1","sendNextRequest","name_2","removeChunkFile","removeChunkProgressBar","pauseIcon","chunkCount","nextElementSibling","cancelButton","retryRequest","retryAfterDelay","file_1","failureMessage","checkPausePlayAction","retryUpload","fromcanceledStage","clearIcon","progressVal","totalChunks","abortIcon","bytes","toFixed","sortedFileNames","sort","sortedFilesData","sortedFileNames_1","name_3","clearTemplate","attributes_2","uploadFiles_1","uploadFiles","serverReadFileBase64","position","totalCount","reader","contents","uploadFileCount","ele","getFileRead","fileCount","getFileInfo","uploadFilesRequest","cloneFiles","chunkEnabled","getFileData","name_4","spliceFiles","liIndex","endIndex","beforeEventArgs","removingFiles","isLiRemoved","removingFiles_1","validUrl","_loop_5","fileUploadedIndex","removeFiles_1","fileDataFiles","pauseUploading","getFiles","resumeFiles","retryFailedFiles","cancelingFiles","cancelUpload","showHideUploadSpinner"],"sources":["C:/Users/Pedro Uema/Desktop/thaiweb/front-end/node_modules/@syncfusion/ej2-inputs/src/uploader/uploader.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Component, Property, Event, EventHandler, L10n, compile, isNullOrUndefined, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, detach, append, Animation } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, KeyboardEvents, setValue, getValue, ChildProperty } from '@syncfusion/ej2-base';\nimport { Collection, Complex, Browser, Ajax, getUniqueID, closest, remove } from '@syncfusion/ej2-base';\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { select, selectAll } from '@syncfusion/ej2-base';\nvar CONTROL_WRAPPER = 'e-upload e-control-wrapper';\nvar INPUT_WRAPPER = 'e-file-select';\nvar DROP_AREA = 'e-file-drop';\nvar DROP_WRAPPER = 'e-file-select-wrap';\nvar LIST_PARENT = 'e-upload-files';\nvar FILE = 'e-upload-file-list';\nvar STATUS = 'e-file-status';\nvar ACTION_BUTTONS = 'e-upload-actions';\nvar UPLOAD_BUTTONS = 'e-file-upload-btn e-css e-btn e-flat e-primary';\nvar CLEAR_BUTTONS = 'e-file-clear-btn e-css e-btn e-flat';\nvar FILE_NAME = 'e-file-name';\nvar FILE_TYPE = 'e-file-type';\nvar FILE_SIZE = 'e-file-size';\nvar REMOVE_ICON = 'e-file-remove-btn';\nvar DELETE_ICON = 'e-file-delete-btn';\nvar SPINNER_PANE = 'e-spinner-pane';\nvar ABORT_ICON = 'e-file-abort-btn';\nvar RETRY_ICON = 'e-file-reload-btn';\nvar DRAG_HOVER = 'e-upload-drag-hover';\nvar PROGRESS_WRAPPER = 'e-upload-progress-wrap';\nvar PROGRESSBAR = 'e-upload-progress-bar';\nvar PROGRESSBAR_TEXT = 'e-progress-bar-text';\nvar UPLOAD_INPROGRESS = 'e-upload-progress';\nvar UPLOAD_SUCCESS = 'e-upload-success';\nvar UPLOAD_FAILED = 'e-upload-fails';\nvar TEXT_CONTAINER = 'e-file-container';\nvar VALIDATION_FAILS = 'e-validation-fails';\nvar RTL = 'e-rtl';\nvar DISABLED = 'e-disabled';\nvar RTL_CONTAINER = 'e-rtl-container';\nvar ICON_FOCUSED = 'e-clear-icon-focus';\nvar PROGRESS_INNER_WRAPPER = 'e-progress-inner-wrap';\nvar PAUSE_UPLOAD = 'e-file-pause-btn';\nvar RESUME_UPLOAD = 'e-file-play-btn';\nvar RESTRICT_RETRY = 'e-restrict-retry';\nvar wrapperAttr = ['title', 'style', 'class'];\nvar FORM_UPLOAD = 'e-form-upload';\nvar HIDDEN_INPUT = 'e-hidden-file-input';\nvar INVALID_FILE = 'e-file-invalid';\nvar INFORMATION = 'e-file-information';\nvar FilesProp = /** @class */ (function (_super) {\n    __extends(FilesProp, _super);\n    function FilesProp() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], FilesProp.prototype, \"name\", void 0);\n    __decorate([\n        Property(null)\n    ], FilesProp.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], FilesProp.prototype, \"type\", void 0);\n    return FilesProp;\n}(ChildProperty));\nexport { FilesProp };\nvar ButtonsProps = /** @class */ (function (_super) {\n    __extends(ButtonsProps, _super);\n    function ButtonsProps() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Browse...')\n    ], ButtonsProps.prototype, \"browse\", void 0);\n    __decorate([\n        Property('Upload')\n    ], ButtonsProps.prototype, \"upload\", void 0);\n    __decorate([\n        Property('Clear')\n    ], ButtonsProps.prototype, \"clear\", void 0);\n    return ButtonsProps;\n}(ChildProperty));\nexport { ButtonsProps };\nvar AsyncSettings = /** @class */ (function (_super) {\n    __extends(AsyncSettings, _super);\n    function AsyncSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], AsyncSettings.prototype, \"saveUrl\", void 0);\n    __decorate([\n        Property('')\n    ], AsyncSettings.prototype, \"removeUrl\", void 0);\n    __decorate([\n        Property(0)\n    ], AsyncSettings.prototype, \"chunkSize\", void 0);\n    __decorate([\n        Property(3)\n    ], AsyncSettings.prototype, \"retryCount\", void 0);\n    __decorate([\n        Property(500)\n    ], AsyncSettings.prototype, \"retryAfterDelay\", void 0);\n    return AsyncSettings;\n}(ChildProperty));\nexport { AsyncSettings };\n/**\n * The uploader component allows to upload images, documents, and other files from local to server.\n * ```html\n * <input type='file' name='images[]' id='upload'/>\n * ```\n * ```typescript\n * <script>\n *   var uploadObj = new Uploader();\n *   uploadObj.appendTo('#upload');\n * </script>\n * ```\n */\nvar Uploader = /** @class */ (function (_super) {\n    __extends(Uploader, _super);\n    /**\n     * Triggers when change the Uploader value.\n     *\n     * @param {UploaderModel} options - Specifies the Uploader model.\n     * @param {string | HTMLInputElement} element - Specifies the element to render as component.\n     * @private\n     */\n    function Uploader(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.initialAttr = { accept: null, multiple: false, disabled: false };\n        _this.uploadedFilesData = [];\n        _this.base64String = [];\n        _this.isForm = false;\n        _this.allTypes = false;\n        _this.pausedData = [];\n        _this.uploadMetaData = [];\n        _this.tabIndex = '0';\n        _this.btnTabIndex = '0';\n        _this.disableKeyboardNavigation = false;\n        _this.count = -1;\n        _this.actionCompleteCount = 0;\n        _this.flag = true;\n        _this.selectedFiles = [];\n        _this.uploaderName = 'UploadFiles';\n        _this.fileStreams = [];\n        _this.newFileRef = 0;\n        _this.isFirstFileOnSelection = false;\n        _this.dragCounter = 0;\n        _this.isAngular = false;\n        /**\n         * Get the file item(li) which are shown in file list.\n         *\n         * @private\n         */\n        _this.fileList = [];\n        /**\n         * Get the data of files which are shown in file list.\n         *\n         * @private\n         */\n        _this.filesData = [];\n        _this.uploaderOptions = options;\n        return _this;\n    }\n    /**\n     * Calls internally if any of the property value is changed.\n     *\n     * @param {UploaderModel} newProp - Returns the dynamic property value of the component.\n     * @param {UploaderModel} oldProp - Returns the previous property value of the component.\n     * @returns {void}\n     * @private\n     */\n    Uploader.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'allowedExtensions':\n                    this.setExtensions(this.allowedExtensions);\n                    this.clearAll();\n                    break;\n                case 'enabled':\n                    this.setControlStatus();\n                    break;\n                case 'multiple':\n                    this.setMultipleSelection();\n                    break;\n                case 'enableRtl':\n                    this.setRTL();\n                    this.reRenderFileList();\n                    break;\n                case 'buttons':\n                    this.buttons.browse = isNullOrUndefined(this.buttons.browse) ? '' : this.buttons.browse;\n                    this.buttons.clear = isNullOrUndefined(this.buttons.clear) ? '' : this.buttons.clear;\n                    this.buttons.upload = isNullOrUndefined(this.buttons.upload) ? '' : this.buttons.upload;\n                    this.renderButtonTemplates();\n                    break;\n                case 'dropArea':\n                    this.unBindDropEvents();\n                    this.updateDropArea();\n                    break;\n                case 'htmlAttributes':\n                    this.updateHTMLAttrToElement();\n                    this.updateHTMLAttrToWrapper();\n                    this.checkHTMLAttributes(true);\n                    break;\n                case 'files':\n                    this.renderPreLoadFiles();\n                    break;\n                case 'directoryUpload':\n                    this.updateDirectoryAttributes();\n                    break;\n                case 'template':\n                    this.clearAll();\n                    break;\n                case 'minFileSize':\n                case 'maxFileSize':\n                case 'autoUpload':\n                    this.clearAll();\n                    break;\n                case 'sequentialUpload':\n                    this.clearAll();\n                    break;\n                case 'locale':\n                    this.l10n.setLocale(this.locale);\n                    this.setLocalizedTexts();\n                    this.preLocaleObj = getValue('currentLocale', this.l10n);\n                    break;\n                case 'cssClass':\n                    this.setCSSClass(oldProp.cssClass);\n                    break;\n            }\n        }\n    };\n    Uploader.prototype.setLocalizedTexts = function () {\n        if (isNullOrUndefined(this.template)) {\n            if (typeof (this.buttons.browse) === 'string') {\n                this.browseButton.innerText = (this.buttons.browse === 'Browse...') ?\n                    this.localizedTexts('Browse') : this.buttons.browse;\n                this.browseButton.setAttribute('title', this.browseButton.innerText);\n                if (this.uploadWrapper && !isNullOrUndefined(this.uploadWrapper.querySelector('.' + DROP_AREA))) {\n                    this.uploadWrapper.querySelector('.' + DROP_AREA).innerHTML = this.localizedTexts('dropFilesHint');\n                }\n            }\n            this.updateFileList();\n        }\n    };\n    Uploader.prototype.getKeyValue = function (val) {\n        var keyValue;\n        for (var _i = 0, _a = Object.keys(this.preLocaleObj); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (this.preLocaleObj[\"\" + key] === val) {\n                keyValue = key;\n            }\n        }\n        return keyValue;\n    };\n    Uploader.prototype.updateFileList = function () {\n        var element;\n        /* istanbul ignore next */\n        if (this.fileList.length > 0 && !isNullOrUndefined(this.uploadWrapper.querySelector('.' + LIST_PARENT))) {\n            for (var i = 0; i < this.fileList.length; i++) {\n                element = this.fileList[i].querySelector('.e-file-status');\n                element.innerHTML = this.localizedTexts(this.getKeyValue(this.filesData[i].status));\n                this.filesData[i].status = this.localizedTexts(this.getKeyValue(this.filesData[i].status));\n                if (this.fileList[i].classList.contains(UPLOAD_SUCCESS)) {\n                    this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('delete'));\n                }\n                if (this.fileList[i].querySelector('.e-file-play-btn')) {\n                    this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('resume'));\n                }\n                if (this.fileList[i].querySelector('.e-file-remove-btn')) {\n                    this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('remove'));\n                }\n                if (this.fileList[i].querySelector('.e-file-reload-btn')) {\n                    this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('retry'));\n                }\n                if (!this.autoUpload) {\n                    this.uploadButton.innerText = (this.buttons.upload === 'Upload') ?\n                        this.localizedTexts('Upload') : this.buttons.upload;\n                    this.uploadButton.setAttribute('title', this.localizedTexts('Upload'));\n                    this.clearButton.innerText = (this.buttons.clear === 'Clear') ?\n                        this.localizedTexts('Clear') : this.buttons.clear;\n                    this.clearButton.setAttribute('title', this.localizedTexts('Clear'));\n                }\n            }\n        }\n    };\n    Uploader.prototype.reRenderFileList = function () {\n        if (this.listParent) {\n            detach(this.listParent);\n            this.listParent = null;\n            this.fileList = [];\n            this.createFileList(this.filesData);\n            if (this.actionButtons) {\n                this.removeActionButtons();\n                this.renderActionButtons();\n                this.checkActionButtonStatus();\n            }\n        }\n    };\n    Uploader.prototype.preRender = function () {\n        this.localeText = { Browse: 'Browse...', Clear: 'Clear', Upload: 'Upload', invalidFileName: 'File Name is not allowed',\n            dropFilesHint: 'Or drop files here', invalidMaxFileSize: 'File size is too large',\n            invalidMinFileSize: 'File size is too small', invalidFileType: 'File type is not allowed',\n            uploadFailedMessage: 'File failed to upload', uploadSuccessMessage: 'File uploaded successfully',\n            removedSuccessMessage: 'File removed successfully', removedFailedMessage: 'Unable to remove file', inProgress: 'Uploading',\n            readyToUploadMessage: 'Ready to upload', abort: 'Abort', remove: 'Remove', cancel: 'Cancel', delete: 'Delete file',\n            pauseUpload: 'File upload paused', pause: 'Pause', resume: 'Resume', retry: 'Retry',\n            fileUploadCancel: 'File upload canceled', invalidFileSelection: 'Invalid files selected', totalFiles: 'Total files',\n            size: 'Size'\n        };\n        this.l10n = new L10n('uploader', this.localeText, this.locale);\n        this.preLocaleObj = getValue('currentLocale', this.l10n);\n        this.formRendered();\n        this.updateHTMLAttrToElement();\n        this.checkHTMLAttributes(false);\n        var ejInstance = getValue('ej2_instances', this.element);\n        /* istanbul ignore next */\n        if (this.element.tagName === 'EJS-UPLOADER') {\n            var inputElement = this.createElement('input', { attrs: { type: 'file' } });\n            var index = 0;\n            for (index; index < this.element.attributes.length; index++) {\n                if (this.element.attributes[index].nodeName !== 'id') {\n                    inputElement.setAttribute(this.element.attributes[index].nodeName, this.element.attributes[index].nodeValue);\n                }\n                else if (this.element.attributes[index].nodeName === 'id') {\n                    inputElement.setAttribute(this.element.attributes[index].nodeName, getUniqueID('uploader'));\n                }\n                inputElement.innerHTML = this.element.innerHTML;\n            }\n            if (!inputElement.hasAttribute('name')) {\n                inputElement.setAttribute('name', 'UploadFiles');\n            }\n            this.element.appendChild(inputElement);\n            this.element = inputElement;\n            setValue('ej2_instances', ejInstance, this.element);\n        }\n        /* istanbul ignore next */\n        if (ejInstance[0].isPureReactComponent) {\n            if (!isNullOrUndefined(ejInstance[0].props.name)) {\n                this.element.setAttribute('name', ejInstance[0].props.name);\n            }\n            else if (!isNullOrUndefined(ejInstance[0].props.id) && isNullOrUndefined(ejInstance[0].props.name)) {\n                this.element.setAttribute('name', ejInstance[0].props.id);\n            }\n            else {\n                this.element.setAttribute('name', 'UploadFiles');\n            }\n        }\n        if (isNullOrUndefined(this.element.getAttribute('name'))) {\n            this.element.setAttribute('name', this.element.getAttribute('id'));\n        }\n        if (!this.element.hasAttribute('type')) {\n            this.element.setAttribute('type', 'file');\n        }\n        this.updateDirectoryAttributes();\n        this.keyConfigs = {\n            enter: 'enter'\n        };\n        if (this.element.hasAttribute('tabindex')) {\n            this.tabIndex = this.element.getAttribute('tabindex');\n        }\n        this.browserName = Browser.info.name;\n        this.uploaderName = this.element.getAttribute('name');\n    };\n    Uploader.prototype.formRendered = function () {\n        var parentEle = closest(this.element, 'form');\n        if (!isNullOrUndefined(parentEle)) {\n            for (; parentEle && parentEle !== document.documentElement; parentEle = parentEle.parentElement) {\n                if (parentEle.tagName === 'FORM') {\n                    this.isForm = true;\n                    this.formElement = parentEle;\n                    parentEle.setAttribute('enctype', 'multipart/form-data');\n                    parentEle.setAttribute('encoding', 'multipart/form-data');\n                }\n            }\n        }\n    };\n    Uploader.prototype.getPersistData = function () {\n        return this.addOnPersist(['filesData']);\n    };\n    /**\n     * Return the module name of the component.\n     *\n     * @returns {string} Returns the component name.\n     */\n    Uploader.prototype.getModuleName = function () {\n        return 'uploader';\n    };\n    Uploader.prototype.updateDirectoryAttributes = function () {\n        if (this.directoryUpload) {\n            this.element.setAttribute('directory', 'true');\n            this.element.setAttribute('webkitdirectory', 'true');\n        }\n        else {\n            this.element.removeAttribute('directory');\n            this.element.removeAttribute('webkitdirectory');\n        }\n    };\n    /**\n     * To Initialize the control rendering\n     *\n     * @private\n     * @returns {void}\n     */\n    Uploader.prototype.render = function () {\n        this.renderBrowseButton();\n        this.initializeUpload();\n        this.updateHTMLAttrToWrapper();\n        this.wireEvents();\n        this.setMultipleSelection();\n        this.setExtensions(this.allowedExtensions);\n        this.setRTL();\n        this.renderPreLoadFiles();\n        this.setControlStatus();\n        this.setCSSClass();\n    };\n    Uploader.prototype.renderBrowseButton = function () {\n        this.browseButton = this.createElement('button', { className: 'e-css e-btn', attrs: { 'type': 'button' } });\n        this.browseButton.setAttribute('tabindex', this.tabIndex);\n        if (typeof (this.buttons.browse) === 'string') {\n            this.browseButton.textContent = (this.buttons.browse === 'Browse...') ?\n                this.localizedTexts('Browse') : this.buttons.browse;\n            this.browseButton.setAttribute('title', this.browseButton.innerText);\n        }\n        else {\n            this.browseButton.appendChild(this.buttons.browse);\n        }\n        this.element.setAttribute('aria-label', 'Uploader');\n    };\n    Uploader.prototype.renderActionButtons = function () {\n        this.element.setAttribute('tabindex', '-1');\n        this.actionButtons = this.createElement('div', { className: ACTION_BUTTONS });\n        this.uploadButton = this.createElement('button', { className: UPLOAD_BUTTONS,\n            attrs: { 'type': 'button', 'tabindex': this.btnTabIndex } });\n        this.clearButton = this.createElement('button', { className: CLEAR_BUTTONS,\n            attrs: { 'type': 'button', 'tabindex': this.btnTabIndex } });\n        this.actionButtons.appendChild(this.clearButton);\n        this.actionButtons.appendChild(this.uploadButton);\n        this.renderButtonTemplates();\n        this.uploadWrapper.appendChild(this.actionButtons);\n        this.browseButton.blur();\n        if (!this.isPreloadFiles) {\n            this.uploadButton.focus();\n        }\n        this.wireActionButtonEvents();\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.serverActionButtonsEventBind = function (element) {\n        if (element && !this.isForm) {\n            this.browseButton.blur();\n            this.actionButtons = element;\n            this.uploadButton = this.actionButtons.querySelector('.e-file-upload-btn');\n            this.clearButton = this.actionButtons.querySelector('.e-file-clear-btn');\n            this.uploadButton.focus();\n            this.unwireActionButtonEvents();\n            this.wireActionButtonEvents();\n            this.checkActionButtonStatus();\n        }\n    };\n    Uploader.prototype.wireActionButtonEvents = function () {\n        EventHandler.add(this.uploadButton, 'click', this.uploadButtonClick, this);\n        EventHandler.add(this.clearButton, 'click', this.clearButtonClick, this);\n    };\n    Uploader.prototype.unwireActionButtonEvents = function () {\n        EventHandler.remove(this.uploadButton, 'click', this.uploadButtonClick);\n        EventHandler.remove(this.clearButton, 'click', this.clearButtonClick);\n    };\n    Uploader.prototype.removeActionButtons = function () {\n        if (this.actionButtons) {\n            this.unwireActionButtonEvents();\n            detach(this.actionButtons);\n            this.actionButtons = null;\n        }\n    };\n    Uploader.prototype.renderButtonTemplates = function () {\n        if (typeof (this.buttons.browse) === 'string') {\n            this.browseButton.textContent = (this.buttons.browse === 'Browse...') ?\n                this.localizedTexts('Browse') : this.buttons.browse;\n            this.browseButton.setAttribute('title', this.browseButton.textContent);\n        }\n        else {\n            this.browseButton.innerHTML = '';\n            this.browseButton.appendChild(this.buttons.browse);\n        }\n        if (this.uploadButton) {\n            var uploadText = isNullOrUndefined(this.buttons.upload) ? 'Upload' : this.buttons.upload;\n            this.buttons.upload = uploadText;\n            if (typeof (this.buttons.upload) === 'string') {\n                this.uploadButton.textContent = (this.buttons.upload === 'Upload') ?\n                    this.localizedTexts('Upload') : this.buttons.upload;\n                this.uploadButton.setAttribute('title', this.uploadButton.textContent);\n            }\n            else {\n                this.uploadButton.innerHTML = '';\n                this.uploadButton.appendChild(this.buttons.upload);\n            }\n        }\n        if (this.clearButton) {\n            var clearText = isNullOrUndefined(this.buttons.clear) ? 'Clear' : this.buttons.clear;\n            this.buttons.clear = clearText;\n            if (typeof (this.buttons.clear) === 'string') {\n                this.clearButton.textContent = (this.buttons.clear === 'Clear') ?\n                    this.localizedTexts('Clear') : this.buttons.clear;\n                this.clearButton.setAttribute('title', this.clearButton.textContent);\n            }\n            else {\n                this.clearButton.innerHTML = '';\n                this.clearButton.appendChild(this.buttons.clear);\n            }\n        }\n    };\n    Uploader.prototype.initializeUpload = function () {\n        this.element.setAttribute('tabindex', '-1');\n        var inputWrapper = this.createElement('span', { className: INPUT_WRAPPER });\n        this.element.parentElement.insertBefore(inputWrapper, this.element);\n        this.dropAreaWrapper = this.createElement('div', { className: DROP_WRAPPER });\n        this.element.parentElement.insertBefore(this.dropAreaWrapper, this.element);\n        inputWrapper.appendChild(this.element);\n        this.dropAreaWrapper.appendChild(this.browseButton);\n        this.dropAreaWrapper.appendChild(inputWrapper);\n        this.uploadWrapper = this.createElement('div', { className: CONTROL_WRAPPER });\n        this.dropAreaWrapper.parentElement.insertBefore(this.uploadWrapper, this.dropAreaWrapper);\n        this.uploadWrapper.appendChild(this.dropAreaWrapper);\n        this.setDropArea();\n    };\n    Uploader.prototype.renderPreLoadFiles = function () {\n        if (this.files.length) {\n            if (this.enablePersistence && this.filesData.length) {\n                this.createFileList(this.filesData);\n                return;\n            }\n            if (isNullOrUndefined(this.files[0].size)) {\n                return;\n            }\n            this.isPreloadFiles = true;\n            var files = [].slice.call(this.files);\n            var filesData = [];\n            if (!this.multiple) {\n                this.clearData();\n                files = [files[0]];\n            }\n            for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {\n                var data = files_1[_i];\n                var fileData = {\n                    name: data.name + '.' + data.type.split('.')[data.type.split('.').length - 1],\n                    rawFile: '',\n                    size: data.size,\n                    status: this.localizedTexts('uploadSuccessMessage'),\n                    type: data.type,\n                    validationMessages: { minSize: '', maxSize: '' },\n                    statusCode: '2'\n                };\n                filesData.push(fileData);\n                this.filesData.push(fileData);\n            }\n            this.createFileList(filesData);\n            if (!this.autoUpload && this.listParent && !this.actionButtons && (!this.isForm || this.allowUpload()) && this.showFileList) {\n                this.renderActionButtons();\n            }\n            this.checkActionButtonStatus();\n            if (this.sequentialUpload) {\n                this.count = this.filesData.length - 1;\n            }\n            this.isPreloadFiles = false;\n        }\n    };\n    Uploader.prototype.checkActionButtonStatus = function () {\n        if (this.actionButtons) {\n            var length_1 = this.uploadWrapper.querySelectorAll('.' + VALIDATION_FAILS).length +\n                this.uploadWrapper.querySelectorAll('.e-upload-fails:not(.e-upload-progress)').length +\n                this.uploadWrapper.querySelectorAll('span.' + UPLOAD_SUCCESS).length +\n                this.uploadWrapper.querySelectorAll('span.' + UPLOAD_INPROGRESS).length;\n            if (length_1 > 0 && length_1 === this.uploadWrapper.querySelectorAll('li').length) {\n                this.uploadButton.setAttribute('disabled', 'disabled');\n            }\n            else {\n                this.uploadButton.removeAttribute('disabled');\n            }\n        }\n    };\n    Uploader.prototype.setDropArea = function () {\n        var dropTextArea = this.dropAreaWrapper.querySelector('.e-file-drop');\n        if (this.dropArea) {\n            this.dropZoneElement = (typeof (this.dropArea) !== 'string') ? this.dropArea :\n                select(this.dropArea, document);\n            var element = this.element;\n            var enableDropText = false;\n            while (element.parentNode) {\n                element = element.parentNode;\n                if (element === this.dropZoneElement) {\n                    enableDropText = true;\n                    if (!dropTextArea) {\n                        this.createDropTextHint();\n                    }\n                    else {\n                        dropTextArea.innerHTML = this.localizedTexts('dropFilesHint');\n                    }\n                }\n            }\n            if (!enableDropText && dropTextArea) {\n                remove(dropTextArea);\n            }\n        }\n        else if (!isNullOrUndefined(this.uploaderOptions) && this.uploaderOptions.dropArea === undefined) {\n            this.createDropTextHint();\n            this.dropZoneElement = this.uploadWrapper;\n            this.setProperties({ dropArea: this.uploadWrapper }, true);\n        }\n        this.bindDropEvents();\n    };\n    Uploader.prototype.updateDropArea = function () {\n        if (this.dropArea) {\n            this.setDropArea();\n        }\n        else {\n            this.dropZoneElement = null;\n            var dropTextArea = this.dropAreaWrapper.querySelector('.e-file-drop');\n            if (dropTextArea) {\n                remove(dropTextArea);\n            }\n        }\n    };\n    Uploader.prototype.createDropTextHint = function () {\n        var fileDropArea = this.createElement('span', { className: DROP_AREA });\n        fileDropArea.innerHTML = this.localizedTexts('dropFilesHint');\n        this.dropAreaWrapper.appendChild(fileDropArea);\n    };\n    Uploader.prototype.updateHTMLAttrToElement = function () {\n        if (!isNullOrUndefined(this.htmlAttributes)) {\n            for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n                var pro = _a[_i];\n                if (wrapperAttr.indexOf(pro) < 0) {\n                    this.element.setAttribute(pro, this.htmlAttributes[\"\" + pro]);\n                }\n            }\n        }\n    };\n    Uploader.prototype.updateHTMLAttrToWrapper = function () {\n        if (!isNullOrUndefined(this.htmlAttributes)) {\n            for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n                var pro = _a[_i];\n                if (wrapperAttr.indexOf(pro) > -1) {\n                    if (pro === 'class') {\n                        var updatedClassValues = (this.htmlAttributes[\"\" + pro].replace(/\\s+/g, ' ')).trim();\n                        if (updatedClassValues !== '') {\n                            addClass([this.uploadWrapper], updatedClassValues.split(' '));\n                        }\n                    }\n                    else if (pro === 'style') {\n                        var uploadStyle = this.uploadWrapper.getAttribute(pro);\n                        uploadStyle = !isNullOrUndefined(uploadStyle) ? (uploadStyle + this.htmlAttributes[\"\" + pro]) :\n                            this.htmlAttributes[\"\" + pro];\n                        this.uploadWrapper.setAttribute(pro, uploadStyle);\n                    }\n                    else {\n                        this.uploadWrapper.setAttribute(pro, this.htmlAttributes[\"\" + pro]);\n                    }\n                }\n            }\n        }\n    };\n    Uploader.prototype.setMultipleSelection = function () {\n        if (this.multiple && !this.element.hasAttribute('multiple')) {\n            var newAttr = document.createAttribute('multiple');\n            newAttr.value = 'multiple';\n            this.element.setAttributeNode(newAttr);\n        }\n        else if (!this.multiple) {\n            this.element.removeAttribute('multiple');\n        }\n    };\n    Uploader.prototype.checkAutoUpload = function (fileData) {\n        if (this.autoUpload) {\n            if (this.sequentialUpload) {\n                /* istanbul ignore next */\n                this.sequenceUpload(fileData);\n            }\n            else {\n                this.upload(fileData);\n            }\n            this.removeActionButtons();\n        }\n        else if (!this.actionButtons) {\n            this.renderActionButtons();\n        }\n        this.checkActionButtonStatus();\n    };\n    Uploader.prototype.sequenceUpload = function (fileData) {\n        if (this.filesData.length - fileData.length === 0 ||\n            this.filesData[(this.filesData.length - fileData.length - 1)].statusCode !== '1') {\n            if (this.multiple || this.count < 0) {\n                ++this.count;\n            }\n            var isFileListCreated = this.showFileList ? false : true;\n            if (typeof this.filesData[this.count] === 'object') {\n                this.isFirstFileOnSelection = false;\n                this.upload(this.filesData[this.count], isFileListCreated);\n                if (this.filesData[this.count].statusCode === '0') {\n                    this.sequenceUpload(fileData);\n                }\n            }\n            else {\n                --this.count;\n            }\n        }\n    };\n    Uploader.prototype.setCSSClass = function (oldCSSClass) {\n        var updatedOldCssClass = oldCSSClass;\n        if (!isNullOrUndefined(oldCSSClass)) {\n            updatedOldCssClass = (oldCSSClass.replace(/\\s+/g, ' ')).trim();\n        }\n        if (!isNullOrUndefined(oldCSSClass) && updatedOldCssClass !== '') {\n            removeClass([this.uploadWrapper], updatedOldCssClass.split(' '));\n        }\n        var updatedCssClassValue = this.cssClass;\n        if (!isNullOrUndefined(this.cssClass) && this.cssClass !== '') {\n            updatedCssClassValue = (this.cssClass.replace(/\\s+/g, ' ')).trim();\n        }\n        if (!isNullOrUndefined(this.cssClass) && updatedCssClassValue !== '') {\n            addClass([this.uploadWrapper], updatedCssClassValue.split(updatedCssClassValue.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Uploader.prototype.wireEvents = function () {\n        EventHandler.add(this.browseButton, 'click', this.browseButtonClick, this);\n        EventHandler.add(this.element, 'change', this.onSelectFiles, this);\n        EventHandler.add(document, 'click', this.removeFocus, this);\n        this.keyboardModule = new KeyboardEvents(this.uploadWrapper, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.isForm) {\n            EventHandler.add(this.formElement, 'reset', this.resetForm, this);\n        }\n    };\n    Uploader.prototype.unWireEvents = function () {\n        EventHandler.remove(this.browseButton, 'click', this.browseButtonClick);\n        EventHandler.remove(this.element, 'change', this.onSelectFiles);\n        EventHandler.remove(document, 'click', this.removeFocus);\n        if (this.isForm) {\n            EventHandler.remove(this.formElement, 'reset', this.resetForm);\n        }\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n        }\n    };\n    Uploader.prototype.resetForm = function () {\n        this.clearAll();\n    };\n    Uploader.prototype.keyActionHandler = function (e) {\n        var targetElement = e.target;\n        switch (e.action) {\n            case 'enter':\n                if (e.target === this.clearButton) {\n                    this.clearButtonClick();\n                }\n                else if (e.target === this.uploadButton) {\n                    this.uploadButtonClick();\n                }\n                else if (e.target === this.browseButton) {\n                    this.browseButtonClick();\n                }\n                else if (targetElement.classList.contains(PAUSE_UPLOAD)) {\n                    var metaData = this.getCurrentMetaData(null, e);\n                    metaData.file.statusCode = '4';\n                    metaData.file.status = this.localizedTexts('pauseUpload');\n                    this.abortUpload(metaData, false);\n                }\n                else if (targetElement.classList.contains(RESUME_UPLOAD)) {\n                    this.resumeUpload(this.getCurrentMetaData(null, e), e);\n                }\n                else if (targetElement.classList.contains(RETRY_ICON)) {\n                    var metaData = this.getCurrentMetaData(null, e);\n                    if (!isNullOrUndefined(metaData)) {\n                        metaData.file.statusCode = '1';\n                        metaData.file.status = this.localizedTexts('readyToUploadMessage');\n                        this.chunkUpload(metaData.file);\n                    }\n                    else {\n                        var target = e.target.parentElement;\n                        var fileData = this.filesData[this.fileList.indexOf(target)];\n                        this.retry(fileData);\n                    }\n                }\n                else {\n                    this.removeFiles(e);\n                    if (!targetElement.classList.contains(ABORT_ICON)) {\n                        this.browseButton.focus();\n                    }\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                break;\n        }\n    };\n    Uploader.prototype.getCurrentMetaData = function (fileInfo, e) {\n        var fileData;\n        var targetMetaData;\n        if (isNullOrUndefined(fileInfo)) {\n            var target = e.target.parentElement;\n            fileData = this.filesData[this.fileList.indexOf(target)];\n        }\n        else {\n            fileData = fileInfo;\n        }\n        for (var i = 0; i < this.uploadMetaData.length; i++) {\n            if (this.uploadMetaData[i].file.name === fileData.name) {\n                targetMetaData = this.uploadMetaData[i];\n            }\n        }\n        return targetMetaData;\n    };\n    Uploader.prototype.removeFocus = function () {\n        if (this.uploadWrapper && this.listParent && this.listParent.querySelector('.' + ICON_FOCUSED)) {\n            document.activeElement.blur();\n            this.listParent.querySelector('.' + ICON_FOCUSED).classList.remove(ICON_FOCUSED);\n        }\n    };\n    Uploader.prototype.browseButtonClick = function () {\n        this.element.click();\n    };\n    Uploader.prototype.uploadButtonClick = function () {\n        if (this.sequentialUpload) {\n            this.sequenceUpload(this.filesData);\n        }\n        else {\n            this.upload(this.filesData);\n        }\n    };\n    Uploader.prototype.clearButtonClick = function () {\n        this.clearAll();\n        /* istanbul ignore next */\n        if (this.sequentialUpload) {\n            this.count = -1;\n        }\n        this.actionCompleteCount = 0;\n    };\n    Uploader.prototype.bindDropEvents = function () {\n        if (this.dropZoneElement) {\n            EventHandler.add(this.dropZoneElement, 'drop', this.dropElement, this);\n            EventHandler.add(this.dropZoneElement, 'dragover', this.dragHover, this);\n            EventHandler.add(this.dropZoneElement, 'dragleave', this.onDragLeave, this);\n            EventHandler.add(this.dropZoneElement, 'paste', this.onPasteFile, this);\n            EventHandler.add(this.dropZoneElement, 'dragenter', this.onDragEnter, this);\n        }\n    };\n    Uploader.prototype.unBindDropEvents = function () {\n        if (this.dropZoneElement) {\n            EventHandler.remove(this.dropZoneElement, 'drop', this.dropElement);\n            EventHandler.remove(this.dropZoneElement, 'dragover', this.dragHover);\n            EventHandler.remove(this.dropZoneElement, 'dragleave', this.onDragLeave);\n            EventHandler.remove(this.dropZoneElement, 'dragenter', this.onDragEnter);\n        }\n    };\n    Uploader.prototype.onDragEnter = function (e) {\n        if (!this.enabled) {\n            return;\n        }\n        this.dropZoneElement.classList.add(DRAG_HOVER);\n        this.dragCounter = this.dragCounter + 1;\n        e.preventDefault();\n        e.stopPropagation();\n    };\n    Uploader.prototype.onDragLeave = function () {\n        if (!this.enabled) {\n            return;\n        }\n        this.dragCounter = this.dragCounter - 1;\n        if (!this.dragCounter) {\n            this.dropZoneElement.classList.remove(DRAG_HOVER);\n        }\n    };\n    Uploader.prototype.dragHover = function (e) {\n        if (!this.enabled) {\n            return;\n        }\n        if (this.dropEffect !== 'Default') {\n            e.dataTransfer.dropEffect = this.dropEffect.toLowerCase();\n        }\n        e.preventDefault();\n        e.stopPropagation();\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.dropElement = function (e) {\n        this.dragCounter = 0;\n        this.dropZoneElement.classList.remove(DRAG_HOVER);\n        this.onSelectFiles(e);\n        e.preventDefault();\n        e.stopPropagation();\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.onPasteFile = function (event) {\n        var item = event.clipboardData.items;\n        if (event.type == 'paste' && this.browserName !== 'msie' && this.browserName !== 'edge' && this.browserName !== 'safari') {\n            this.element.files = event.clipboardData.files;\n        }\n        if (item.length !== 1) {\n            return;\n        }\n        var pasteFile = [].slice.call(item)[0];\n        if ((pasteFile.kind === 'file') && pasteFile.type.match('^image/')) {\n            this.renderSelectedFiles(event, [pasteFile.getAsFile()], false, true);\n        }\n    };\n    Uploader.prototype.getSelectedFiles = function (index) {\n        var data = [];\n        var liElement = this.fileList[index];\n        var allFiles = this.getFilesData();\n        var nameElements = +liElement.getAttribute('data-files-count');\n        var startIndex = 0;\n        for (var i = 0; i < index; i++) {\n            startIndex += (+this.fileList[i].getAttribute('data-files-count'));\n        }\n        for (var j = startIndex; j < (startIndex + nameElements); j++) {\n            data.push(allFiles[j]);\n        }\n        return data;\n    };\n    Uploader.prototype.removeFiles = function (args) {\n        if (!this.enabled) {\n            return;\n        }\n        var selectedElement = args.target.parentElement;\n        var index = this.fileList.indexOf(selectedElement);\n        var liElement = this.fileList[index];\n        var formUpload = this.isFormUpload();\n        var fileData = formUpload ? this.getSelectedFiles(index) : this.getFilesInArray(this.filesData[index]);\n        if (isNullOrUndefined(fileData)) {\n            return;\n        }\n        if (args.target.classList.contains(ABORT_ICON) && !formUpload) {\n            fileData[0].statusCode = '5';\n            if (!isNullOrUndefined(liElement)) {\n                var spinnerTarget = liElement.querySelector('.' + ABORT_ICON);\n                createSpinner({ target: spinnerTarget, width: '20px' });\n                showSpinner(spinnerTarget);\n            }\n            if (this.sequentialUpload) {\n                /* istanbul ignore next */\n                this.uploadSequential();\n            }\n            if (!(liElement.classList.contains(RESTRICT_RETRY))) {\n                this.checkActionComplete(true);\n            }\n        }\n        else if (!closest(args.target, '.' + SPINNER_PANE)) {\n            this.remove(fileData, false, false, true, args);\n        }\n        this.element.value = '';\n        this.checkActionButtonStatus();\n    };\n    Uploader.prototype.removeFilesData = function (file, customTemplate) {\n        var index;\n        if (customTemplate) {\n            if (!this.showFileList) {\n                index = this.filesData.indexOf(file);\n                this.filesData.splice(index, 1);\n            }\n            return;\n        }\n        var selectedElement = this.getLiElement(file);\n        if (isNullOrUndefined(selectedElement)) {\n            return;\n        }\n        detach(selectedElement);\n        index = this.fileList.indexOf(selectedElement);\n        this.fileList.splice(index, 1);\n        this.filesData.splice(index, 1);\n        if (this.fileList.length === 0 && !isNullOrUndefined(this.listParent)) {\n            detach(this.listParent);\n            this.listParent = null;\n            this.removeActionButtons();\n        }\n        if (this.sequentialUpload) {\n            /* istanbul ignore next */\n            if (index <= this.count) {\n                --this.count;\n            }\n        }\n    };\n    Uploader.prototype.removeUploadedFile = function (file, eventArgs, removeDirectly, custom) {\n        var _this = this;\n        var selectedFiles = file;\n        var ajax = new Ajax(this.asyncSettings.removeUrl, 'POST', true, null);\n        ajax.emitError = false;\n        var formData = new FormData();\n        ajax.beforeSend = function (e) {\n            eventArgs.currentRequest = ajax.httpRequest;\n            if (!removeDirectly) {\n                _this.trigger('removing', eventArgs, function (eventArgs) {\n                    if (eventArgs.cancel) {\n                        e.cancel = true;\n                    }\n                    else {\n                        _this.removingEventCallback(eventArgs, formData, selectedFiles, file);\n                    }\n                });\n            }\n            else {\n                _this.removingEventCallback(eventArgs, formData, selectedFiles, file);\n            }\n        };\n        ajax.onLoad = function (e) {\n            _this.removeCompleted(e, selectedFiles, custom);\n            return {};\n        };\n        /* istanbul ignore next */\n        ajax.onError = function (e) {\n            _this.removeFailed(e, selectedFiles, custom);\n            return {};\n        };\n        ajax.send(formData);\n    };\n    Uploader.prototype.removingEventCallback = function (eventArgs, formData, selectedFiles, file) {\n        /* istanbul ignore next */\n        var name = this.element.getAttribute('name');\n        var liElement = this.getLiElement(file);\n        if (!isNullOrUndefined(liElement) && (!isNullOrUndefined(liElement.querySelector('.' + DELETE_ICON)) ||\n            !isNullOrUndefined(liElement.querySelector('.' + REMOVE_ICON)))) {\n            var spinnerTarget = liElement.querySelector('.' + DELETE_ICON) ?\n                liElement.querySelector('.' + DELETE_ICON) :\n                liElement.querySelector('.' + REMOVE_ICON);\n            createSpinner({ target: spinnerTarget, width: '20px' });\n            showSpinner(spinnerTarget);\n        }\n        if (eventArgs.postRawFile && !isNullOrUndefined(selectedFiles.rawFile) && selectedFiles.rawFile !== '') {\n            formData.append(name, selectedFiles.rawFile, selectedFiles.name);\n        }\n        else {\n            formData.append(name, selectedFiles.name);\n        }\n        this.updateFormData(formData, eventArgs.customFormData);\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.updateFormData = function (formData, customData) {\n        if (customData.length > 0 && customData[0]) {\n            var _loop_1 = function (i) {\n                var data = customData[i];\n                // eslint-disable-next-line @typescript-eslint/tslint/config\n                var value = Object.keys(data).map(function (e) {\n                    return data[\"\" + e];\n                });\n                formData.append(Object.keys(data)[0], value);\n            };\n            for (var i = 0; i < customData.length; i++) {\n                _loop_1(i);\n            }\n        }\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.updateCustomheader = function (request, currentRequest) {\n        if (currentRequest.length > 0 && currentRequest[0]) {\n            var _loop_2 = function (i) {\n                var data = currentRequest[i];\n                // eslint-disable-next-line @typescript-eslint/tslint/config\n                var value = Object.keys(data).map(function (e) {\n                    return data[\"\" + e];\n                });\n                request.setRequestHeader(Object.keys(data)[0], value);\n            };\n            for (var i = 0; i < currentRequest.length; i++) {\n                _loop_2(i);\n            }\n        }\n    };\n    Uploader.prototype.removeCompleted = function (e, files, customTemplate) {\n        var response = e && e.currentTarget ? this.getResponse(e) : null;\n        var status = e.target;\n        if (status.readyState === 4 && status.status >= 200 && status.status <= 299) {\n            var args = {\n                e: e, response: response, operation: 'remove', file: this.updateStatus(files, this.localizedTexts('removedSuccessMessage'), '2')\n            };\n            this.trigger('success', args);\n            this.removeFilesData(files, customTemplate);\n            var index = this.uploadedFilesData.indexOf(files);\n            this.uploadedFilesData.splice(index, 1);\n            this.trigger('change', { files: this.uploadedFilesData });\n        }\n        else {\n            this.removeFailed(e, files, customTemplate);\n        }\n    };\n    Uploader.prototype.removeFailed = function (e, files, customTemplate) {\n        var response = e && e.currentTarget ? this.getResponse(e) : null;\n        var args = {\n            e: e, response: response, operation: 'remove', file: this.updateStatus(files, this.localizedTexts('removedFailedMessage'), '0')\n        };\n        if (!customTemplate) {\n            var index = this.filesData.indexOf(files);\n            var rootElement = this.fileList[index];\n            if (rootElement) {\n                rootElement.classList.remove(UPLOAD_SUCCESS);\n                rootElement.classList.add(UPLOAD_FAILED);\n                var statusElement = rootElement.querySelector('.' + STATUS);\n                if (statusElement) {\n                    statusElement.classList.remove(UPLOAD_SUCCESS);\n                    statusElement.classList.add(UPLOAD_FAILED);\n                }\n            }\n            this.checkActionButtonStatus();\n        }\n        this.trigger('failure', args);\n        var liElement = this.getLiElement(files);\n        /* istanbul ignore next */\n        if (!isNullOrUndefined(liElement) && !isNullOrUndefined(liElement.querySelector('.' + DELETE_ICON))) {\n            var spinnerTarget = liElement.querySelector('.' + DELETE_ICON);\n            hideSpinner(spinnerTarget);\n            detach(liElement.querySelector('.e-spinner-pane'));\n        }\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.getFilesFromFolder = function (event) {\n        this.filesEntries = [];\n        var items = this.multiple ?\n            event.dataTransfer.items : [event.dataTransfer.items[0]];\n        var validDirectoryUpload = this.checkDirectoryUpload(items);\n        if (!validDirectoryUpload) {\n            return;\n        }\n        var _loop_3 = function (i) {\n            var item = items[i].webkitGetAsEntry();\n            if (item.isFile) {\n                var files_2 = [];\n                (item).file(function (fileObj) {\n                    var path = item.fullPath;\n                    files_2.push({ 'path': path, 'file': fileObj });\n                });\n                this_1.renderSelectedFiles(event, files_2, true);\n            }\n            else if (item.isDirectory) {\n                this_1.traverseFileTree(item, event);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < items.length; i++) {\n            _loop_3(i);\n        }\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.checkDirectoryUpload = function (items) {\n        for (var i = 0; items && i < items.length; i++) {\n            var item = items[i].webkitGetAsEntry();\n            if (item.isDirectory) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n    /* istanbul ignore next */\n    Uploader.prototype.traverseFileTree = function (item, event) {\n        /* eslint-enable @typescript-eslint/explicit-module-boundary-types */\n        if (item.isFile) {\n            this.filesEntries.push(item);\n        }\n        else if (item.isDirectory) {\n            var directoryReader = item.createReader();\n            this.readFileFromDirectory(directoryReader, event);\n        }\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.readFileFromDirectory = function (directoryReader, event) {\n        var _this = this;\n        directoryReader.readEntries(function (entries) {\n            for (var i = 0; i < entries.length; i++) {\n                _this.traverseFileTree(entries[i], event);\n            }\n            _this.pushFilesEntries(event);\n            if (entries.length) {\n                _this.readFileFromDirectory(directoryReader);\n            }\n        });\n    };\n    Uploader.prototype.pushFilesEntries = function (event) {\n        var _this = this;\n        var files = [];\n        var _loop_4 = function (i) {\n            this_2.filesEntries[i].file(function (fileObj) {\n                if (_this.filesEntries.length) {\n                    var path = _this.filesEntries[i].fullPath;\n                    files.push({ 'path': path, 'file': fileObj });\n                    if (i === _this.filesEntries.length - 1) {\n                        _this.filesEntries = [];\n                        _this.renderSelectedFiles(event, files, true);\n                    }\n                }\n            });\n        };\n        var this_2 = this;\n        for (var i = 0; i < this.filesEntries.length; i++) {\n            _loop_4(i);\n        }\n    };\n    Uploader.prototype.onSelectFiles = function (args) {\n        if (!this.enabled) {\n            return;\n        }\n        var targetFiles;\n        /* istanbul ignore next */\n        if (args.type === 'drop') {\n            if (this.directoryUpload) {\n                this.getFilesFromFolder(args);\n            }\n            else {\n                var files = this.sortFilesList = args.dataTransfer.files;\n                if (this.browserName !== 'msie' && this.browserName !== 'edge' && this.browserName !== 'safari') {\n                    this.element.files = files;\n                }\n                if (files.length > 0) {\n                    targetFiles = this.multiple ? this.sortFileList(files) : [files[0]];\n                    this.renderSelectedFiles(args, targetFiles);\n                }\n            }\n        }\n        else {\n            targetFiles = [].slice.call(args.target.files);\n            this.renderSelectedFiles(args, targetFiles);\n        }\n        if (this.isAngular) {\n            args.stopPropagation();\n        }\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.getBase64 = function (file) {\n        return new Promise(function (resolve, reject) {\n            var fileReader = new FileReader();\n            fileReader.readAsDataURL(file);\n            fileReader.onload = function () { return resolve(fileReader.result); };\n            fileReader.onerror = function (error) { return reject(error); };\n        });\n    };\n    /* istanbul ignore next */\n    /* tslint:ignore */\n    Uploader.prototype.renderSelectedFiles = function (args, targetFiles, directory, paste) {\n        var _this = this;\n        this.base64String = [];\n        var eventArgs = {\n            event: args,\n            cancel: false,\n            filesData: [],\n            isModified: false,\n            modifiedFilesData: [],\n            progressInterval: '',\n            isCanceled: false,\n            currentRequest: null,\n            customFormData: null\n        };\n        /* istanbul ignore next */\n        if (targetFiles.length < 1) {\n            eventArgs.isCanceled = true;\n            this.trigger('selected', eventArgs);\n            return;\n        }\n        this.flag = true;\n        var fileData = [];\n        if (!this.multiple) {\n            this.clearData(true);\n            targetFiles = [targetFiles[0]];\n        }\n        for (var i = 0; i < targetFiles.length; i++) {\n            var file = directory ? targetFiles[i].file : targetFiles[i];\n            this.updateInitialFileDetails(args, targetFiles, file, i, fileData, directory, paste);\n        }\n        eventArgs.filesData = fileData;\n        if (this.allowedExtensions.indexOf('*') > -1) {\n            this.allTypes = true;\n        }\n        if (this.enableHtmlSanitizer) {\n            for (var i = 0; i < fileData.length; i++) {\n                var sanitizeFile = SanitizeHtmlHelper.beforeSanitize();\n                var sanitizeFileName = SanitizeHtmlHelper.serializeValue(sanitizeFile, fileData[i].name);\n                if (sanitizeFileName != fileData[i].name) {\n                    var encodedFileName = targetFiles[i].name.replace(/[\\u00A0-\\u9999<>\\&]/g, function (i) {\n                        return '&#' + i.charCodeAt(0) + ';';\n                    });\n                    fileData[i].name = encodedFileName;\n                    fileData[i].status = this.localizedTexts('invalidFileName');\n                    fileData[i].statusCode = '0';\n                }\n            }\n        }\n        if (!this.allTypes) {\n            fileData = this.checkExtension(fileData);\n        }\n        this.trigger('selected', eventArgs, function (eventArgs) {\n            _this._internalRenderSelect(eventArgs, fileData);\n        });\n    };\n    Uploader.prototype.updateInitialFileDetails = function (args, \n    // eslint-disable-next-line @typescript-eslint/indent\n    targetFiles, file, i, fileData, directory, paste) {\n        var fileName = directory ? targetFiles[i].path.substring(1, targetFiles[i].path.length) : paste ?\n            getUniqueID(file.name.substring(0, file.name.lastIndexOf('.'))) + '.' + this.getFileType(file.name) :\n            this.directoryUpload ? targetFiles[i].webkitRelativePath : file.name;\n        var fileDetails = {\n            name: fileName,\n            rawFile: file,\n            size: file.size,\n            status: this.localizedTexts('readyToUploadMessage'),\n            type: this.getFileType(file.name),\n            validationMessages: this.validatedFileSize(file.size),\n            statusCode: '1',\n            id: getUniqueID(file.name.substring(0, file.name.lastIndexOf('.'))) + '.' + this.getFileType(file.name)\n        };\n        /* istanbul ignore next */\n        if (paste) {\n            fileDetails.fileSource = 'paste';\n        }\n        fileDetails.status = fileDetails.validationMessages.minSize !== '' ? this.localizedTexts('invalidMinFileSize') :\n            fileDetails.validationMessages.maxSize !== '' ? this.localizedTexts('invalidMaxFileSize') : fileDetails.status;\n        if (fileDetails.validationMessages.minSize !== '' || fileDetails.validationMessages.maxSize !== '') {\n            fileDetails.statusCode = '0';\n        }\n        fileData.push(fileDetails);\n    };\n    Uploader.prototype._internalRenderSelect = function (eventArgs, fileData) {\n        if (!eventArgs.cancel) {\n            /* istanbul ignore next */\n            this.selectedFiles = this.selectedFiles.concat(fileData);\n            this.btnTabIndex = this.disableKeyboardNavigation ? '-1' : '0';\n            if (this.showFileList) {\n                if (eventArgs.isModified && eventArgs.modifiedFilesData.length > 0) {\n                    for (var j = 0; j < eventArgs.modifiedFilesData.length; j++) {\n                        for (var k = 0; k < fileData.length; k++) {\n                            if (eventArgs.modifiedFilesData[j].id === fileData[k].id) {\n                                eventArgs.modifiedFilesData[j].rawFile = fileData[k].rawFile;\n                            }\n                        }\n                    }\n                    var dataFiles = this.allTypes ? eventArgs.modifiedFilesData :\n                        this.checkExtension(eventArgs.modifiedFilesData);\n                    this.updateSortedFileList(dataFiles);\n                    this.filesData = dataFiles;\n                    if (!this.isForm || this.allowUpload()) {\n                        this.checkAutoUpload(dataFiles);\n                    }\n                }\n                else {\n                    this.createFileList(fileData, true);\n                    this.filesData = this.filesData.concat(fileData);\n                    if (!this.isForm || this.allowUpload()) {\n                        this.checkAutoUpload(fileData);\n                    }\n                }\n                if (!isNullOrUndefined(eventArgs.progressInterval) && eventArgs.progressInterval !== '') {\n                    this.progressInterval = eventArgs.progressInterval;\n                }\n            }\n            else {\n                this.filesData = this.filesData.concat(fileData);\n                if (this.autoUpload) {\n                    this.upload(this.filesData, true);\n                }\n            }\n            this.raiseActionComplete();\n            this.isFirstFileOnSelection = true;\n        }\n    };\n    Uploader.prototype.allowUpload = function () {\n        var allowFormUpload = false;\n        if (this.isForm && (!isNullOrUndefined(this.asyncSettings.saveUrl) && this.asyncSettings.saveUrl !== '')) {\n            allowFormUpload = true;\n        }\n        return allowFormUpload;\n    };\n    Uploader.prototype.isFormUpload = function () {\n        var isFormUpload = false;\n        if (this.isForm && ((isNullOrUndefined(this.asyncSettings.saveUrl) || this.asyncSettings.saveUrl === '')\n            && (isNullOrUndefined(this.asyncSettings.removeUrl) || this.asyncSettings.removeUrl === ''))) {\n            isFormUpload = true;\n        }\n        return isFormUpload;\n    };\n    Uploader.prototype.clearData = function (singleUpload) {\n        if (!isNullOrUndefined(this.listParent)) {\n            detach(this.listParent);\n            this.listParent = null;\n        }\n        if (this.browserName !== 'msie' && !singleUpload) {\n            this.element.value = '';\n        }\n        this.fileList = [];\n        this.filesData = [];\n        this.removeActionButtons();\n    };\n    Uploader.prototype.updateSortedFileList = function (filesData) {\n        var previousListClone = this.createElement('div', { id: 'clonewrapper' });\n        var added = -1;\n        var removedList;\n        if (this.listParent) {\n            for (var i = 0; i < this.listParent.querySelectorAll('li').length; i++) {\n                var liElement = this.listParent.querySelectorAll('li')[i];\n                previousListClone.appendChild(liElement.cloneNode(true));\n            }\n            removedList = this.listParent.querySelectorAll('li');\n            for (var _i = 0, removedList_1 = removedList; _i < removedList_1.length; _i++) {\n                var item = removedList_1[_i];\n                detach(item);\n            }\n            this.removeActionButtons();\n            var oldList = [].slice.call(previousListClone.childNodes);\n            detach(this.listParent);\n            this.listParent = null;\n            this.fileList = [];\n            this.createParentUL();\n            for (var index = 0; index < filesData.length; index++) {\n                for (var j = 0; j < this.filesData.length; j++) {\n                    if (this.filesData[j].name === filesData[index].name) {\n                        this.listParent.appendChild(oldList[j]);\n                        EventHandler.add(oldList[j].querySelector('.e-icons'), 'click', this.removeFiles, this);\n                        this.fileList.push(oldList[j]);\n                        added = index;\n                    }\n                }\n                if (added !== index) {\n                    this.createFileList([filesData[index]]);\n                }\n            }\n        }\n        else {\n            this.createFileList(filesData);\n        }\n    };\n    Uploader.prototype.isBlank = function (str) {\n        return (!str || /^\\s*$/.test(str));\n    };\n    Uploader.prototype.checkExtension = function (files) {\n        var dropFiles = files;\n        if (!this.isBlank(this.allowedExtensions)) {\n            var allowedExtensions = [];\n            var extensions = this.allowedExtensions.split(',');\n            for (var _i = 0, extensions_1 = extensions; _i < extensions_1.length; _i++) {\n                var extension = extensions_1[_i];\n                allowedExtensions.push(extension.trim().toLocaleLowerCase());\n            }\n            for (var i = 0; i < files.length; i++) {\n                if (allowedExtensions.indexOf(('.' + files[i].type).toLocaleLowerCase()) === -1) {\n                    files[i].status = this.localizedTexts('invalidFileType');\n                    files[i].statusCode = '0';\n                }\n            }\n        }\n        return dropFiles;\n    };\n    Uploader.prototype.validatedFileSize = function (fileSize) {\n        var minSizeError = '';\n        var maxSizeError = '';\n        if (fileSize < this.minFileSize) {\n            minSizeError = this.localizedTexts('invalidMinFileSize');\n        }\n        else if (fileSize > this.maxFileSize) {\n            maxSizeError = this.localizedTexts('invalidMaxFileSize');\n        }\n        else {\n            minSizeError = '';\n            maxSizeError = '';\n        }\n        var errorMessage = { minSize: minSizeError, maxSize: maxSizeError };\n        return errorMessage;\n    };\n    Uploader.prototype.isPreLoadFile = function (fileData) {\n        var isPreload = false;\n        for (var i = 0; i < this.files.length; i++) {\n            if (this.files[i].name === fileData.name.slice(0, fileData.name.lastIndexOf('.')) && this.files[i].type === fileData.type) {\n                isPreload = true;\n            }\n        }\n        return isPreload;\n    };\n    Uploader.prototype.createCustomfileList = function (fileData) {\n        this.createParentUL();\n        for (var _i = 0, fileData_1 = fileData; _i < fileData_1.length; _i++) {\n            var listItem = fileData_1[_i];\n            var listElement = this.createElement('li', { className: FILE, attrs: { 'data-file-name': listItem.name } });\n            this.uploadTemplateFn = this.templateComplier(this.template);\n            var liTempCompiler = this.uploadTemplateFn(listItem, this, 'template', this.element.id + 'Template', this.isStringTemplate, null, listElement);\n            if (liTempCompiler) {\n                var fromElements = [].slice.call(liTempCompiler);\n                append(fromElements, listElement);\n            }\n            var index = fileData.indexOf(listItem);\n            var eventArgs = {\n                element: listElement,\n                fileInfo: listItem,\n                index: index,\n                isPreload: this.isPreLoadFile(listItem)\n            };\n            var eventsArgs = {\n                element: listElement,\n                fileInfo: listItem,\n                index: index,\n                isPreload: this.isPreLoadFile(listItem)\n            };\n            this.trigger('rendering', eventArgs);\n            this.trigger('fileListRendering', eventsArgs);\n            this.listParent.appendChild(listElement);\n            this.fileList.push(listElement);\n        }\n        this.renderReactTemplates();\n    };\n    Uploader.prototype.createParentUL = function () {\n        if (isNullOrUndefined(this.listParent)) {\n            this.listParent = this.createElement('ul', { className: LIST_PARENT });\n            this.uploadWrapper.appendChild(this.listParent);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Uploader.prototype.formFileList = function (fileData, files) {\n        var fileList = this.createElement('li', { className: FILE });\n        fileList.setAttribute('data-files-count', fileData.length + '');\n        var fileContainer = this.createElement('span', { className: TEXT_CONTAINER });\n        var statusMessage;\n        for (var _i = 0, fileData_2 = fileData; _i < fileData_2.length; _i++) {\n            var listItem = fileData_2[_i];\n            var fileNameEle = this.createElement('span', { className: FILE_NAME });\n            fileNameEle.innerHTML = this.getFileNameOnly(listItem.name);\n            var fileTypeEle = this.createElement('span', { className: FILE_TYPE });\n            var fileType = this.getFileType(listItem.name);\n            fileTypeEle.innerHTML = '.' + fileType;\n            if (!fileType) {\n                fileTypeEle.classList.add('e-hidden');\n            }\n            if (!this.enableRtl) {\n                fileContainer.appendChild(fileNameEle);\n                fileContainer.appendChild(fileTypeEle);\n            }\n            else {\n                var rtlContainer = this.createElement('span', { className: RTL_CONTAINER });\n                rtlContainer.appendChild(fileTypeEle);\n                rtlContainer.appendChild(fileNameEle);\n                fileContainer.appendChild(rtlContainer);\n            }\n            this.truncateName(fileNameEle);\n            statusMessage = this.formValidateFileInfo(listItem, fileList);\n        }\n        fileList.appendChild(fileContainer);\n        this.setListToFileInfo(fileData, fileList);\n        var index = this.listParent.querySelectorAll('li').length;\n        var infoEle = this.createElement('span');\n        if (fileList.classList.contains(INVALID_FILE)) {\n            infoEle.classList.add(STATUS);\n            infoEle.classList.add(INVALID_FILE);\n            infoEle.innerText = fileData.length > 1 ? this.localizedTexts('invalidFileSelection') : statusMessage;\n        }\n        else {\n            infoEle.classList.add(fileData.length > 1 ? INFORMATION : FILE_SIZE);\n            infoEle.innerText = fileData.length > 1 ? this.localizedTexts('totalFiles') + ': ' + fileData.length + ' , '\n                + this.localizedTexts('size') + ': ' +\n                this.bytesToSize(this.getFileSize(fileData)) : this.bytesToSize(fileData[0].size);\n            this.createFormInput(fileData);\n        }\n        fileContainer.appendChild(infoEle);\n        if (isNullOrUndefined(fileList.querySelector('.e-icons'))) {\n            var iconElement = this.createElement('span', { className: 'e-icons', attrs: { 'tabindex': this.btnTabIndex } });\n            /* istanbul ignore next */\n            if (this.browserName === 'msie') {\n                iconElement.classList.add('e-msie');\n            }\n            iconElement.setAttribute('title', this.localizedTexts('remove'));\n            fileList.appendChild(fileContainer);\n            fileList.appendChild(iconElement);\n            EventHandler.add(iconElement, 'click', this.removeFiles, this);\n            iconElement.classList.add(REMOVE_ICON);\n        }\n        var eventArgs = {\n            element: fileList,\n            fileInfo: this.mergeFileInfo(fileData, fileList),\n            index: index,\n            isPreload: this.isPreLoadFile(this.mergeFileInfo(fileData, fileList))\n        };\n        var eventsArgs = {\n            element: fileList,\n            fileInfo: this.mergeFileInfo(fileData, fileList),\n            index: index,\n            isPreload: this.isPreLoadFile(this.mergeFileInfo(fileData, fileList))\n        };\n        this.trigger('rendering', eventArgs);\n        this.trigger('fileListRendering', eventsArgs);\n        this.listParent.appendChild(fileList);\n        this.fileList.push(fileList);\n    };\n    Uploader.prototype.formValidateFileInfo = function (listItem, fileList) {\n        var statusMessage = listItem.status;\n        var validationMessages = this.validatedFileSize(listItem.size);\n        if (validationMessages.minSize !== '' || validationMessages.maxSize !== '') {\n            this.addInvalidClass(fileList);\n            statusMessage = validationMessages.minSize !== '' ? this.localizedTexts('invalidMinFileSize') :\n                validationMessages.maxSize !== '' ? this.localizedTexts('invalidMaxFileSize') : statusMessage;\n        }\n        var typeValidationMessage = this.checkExtension(this.getFilesInArray(listItem))[0].status;\n        if (typeValidationMessage === this.localizedTexts('invalidFileType')) {\n            this.addInvalidClass(fileList);\n            statusMessage = typeValidationMessage;\n        }\n        return statusMessage;\n    };\n    Uploader.prototype.addInvalidClass = function (fileList) {\n        fileList.classList.add(INVALID_FILE);\n    };\n    Uploader.prototype.createFormInput = function (fileData) {\n        if (this.browserName !== 'safari') {\n            var inputElement = this.element.cloneNode(true);\n            inputElement.classList.add(HIDDEN_INPUT);\n            for (var _i = 0, fileData_3 = fileData; _i < fileData_3.length; _i++) {\n                var listItem = fileData_3[_i];\n                listItem.input = inputElement;\n            }\n            inputElement.setAttribute('name', this.uploaderName);\n            this.uploadWrapper.querySelector('.' + INPUT_WRAPPER).appendChild(inputElement);\n            if (this.browserName !== 'msie' && this.browserName !== 'edge') {\n                this.element.value = '';\n            }\n        }\n    };\n    Uploader.prototype.getFileSize = function (fileData) {\n        var fileSize = 0;\n        for (var _i = 0, fileData_4 = fileData; _i < fileData_4.length; _i++) {\n            var file = fileData_4[_i];\n            fileSize += file.size;\n        }\n        return fileSize;\n    };\n    Uploader.prototype.mergeFileInfo = function (fileData, fileList) {\n        var result = {\n            name: '',\n            rawFile: '',\n            size: 0,\n            status: '',\n            type: '',\n            validationMessages: { minSize: '', maxSize: '' },\n            statusCode: '1',\n            list: fileList\n        };\n        var fileNames = [];\n        var type = '';\n        for (var _i = 0, fileData_5 = fileData; _i < fileData_5.length; _i++) {\n            var listItem = fileData_5[_i];\n            fileNames.push(listItem.name);\n            type = listItem.type;\n        }\n        result.name = fileNames.join(', ');\n        result.size = this.getFileSize(fileData);\n        result.type = type;\n        result.status = this.statusForFormUpload(fileData, fileList);\n        return result;\n    };\n    Uploader.prototype.statusForFormUpload = function (fileData, fileList) {\n        var isValid = true;\n        var statusMessage;\n        for (var _i = 0, fileData_6 = fileData; _i < fileData_6.length; _i++) {\n            var listItem = fileData_6[_i];\n            statusMessage = listItem.status;\n            var validationMessages = this.validatedFileSize(listItem.size);\n            if (validationMessages.minSize !== '' || validationMessages.maxSize !== '') {\n                isValid = false;\n                statusMessage = validationMessages.minSize !== '' ? this.localizedTexts('invalidMinFileSize') :\n                    validationMessages.maxSize !== '' ? this.localizedTexts('invalidMaxFileSize') : statusMessage;\n            }\n            var typeValidationMessage = this.checkExtension(this.getFilesInArray(listItem))[0].status;\n            if (typeValidationMessage === this.localizedTexts('invalidFileType')) {\n                isValid = false;\n                statusMessage = typeValidationMessage;\n            }\n        }\n        if (!isValid) {\n            fileList.classList.add(INVALID_FILE);\n            statusMessage = fileData.length > 1 ? this.localizedTexts('invalidFileSelection') : statusMessage;\n        }\n        else {\n            statusMessage = this.localizedTexts('totalFiles') + ': ' + fileData.length + ' , '\n                + this.localizedTexts('size') + ': ' +\n                this.bytesToSize(this.getFileSize(fileData));\n        }\n        return statusMessage;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Uploader.prototype.formCustomFileList = function (fileData, files) {\n        this.createParentUL();\n        var fileList = this.createElement('li', { className: FILE });\n        fileList.setAttribute('data-files-count', fileData.length + '');\n        this.setListToFileInfo(fileData, fileList);\n        var result = this.mergeFileInfo(fileData, fileList);\n        fileList.setAttribute('data-file-name', result.name);\n        this.uploadTemplateFn = this.templateComplier(this.template);\n        var liTempCompiler = this.uploadTemplateFn(result, this, 'template', this.element.id + 'Template', this.isStringTemplate, null, fileList);\n        if (liTempCompiler) {\n            var fromElements = [].slice.call(liTempCompiler);\n            append(fromElements, fileList);\n        }\n        var index = this.listParent.querySelectorAll('li').length;\n        if (!fileList.classList.contains(INVALID_FILE)) {\n            this.createFormInput(fileData);\n        }\n        var eventArgs = {\n            element: fileList,\n            fileInfo: result,\n            index: index,\n            isPreload: this.isPreLoadFile(result)\n        };\n        var eventsArgs = {\n            element: fileList,\n            fileInfo: result,\n            index: index,\n            isPreload: this.isPreLoadFile(result)\n        };\n        this.trigger('rendering', eventArgs);\n        this.trigger('fileListRendering', eventsArgs);\n        this.listParent.appendChild(fileList);\n        this.fileList.push(fileList);\n        this.renderReactTemplates();\n    };\n    /* eslint-disable valid-jsdoc, jsdoc/require-param */\n    /**\n     * Create the file list for specified files data.\n     *\n     * @param { FileInfo[] } fileData - Specifies the files data for file list creation.\n     * @returns {void}\n     */\n    Uploader.prototype.createFileList = function (fileData, isSelectedFile) {\n        /* eslint-enable valid-jsdoc, jsdoc/require-param */\n        this.createParentUL();\n        if (this.template !== '' && !isNullOrUndefined(this.template)) {\n            if (this.isFormUpload()) {\n                this.uploadWrapper.classList.add(FORM_UPLOAD);\n                this.formCustomFileList(fileData, this.element.files);\n            }\n            else {\n                this.createCustomfileList(fileData);\n            }\n        }\n        else if (this.isFormUpload()) {\n            this.uploadWrapper.classList.add(FORM_UPLOAD);\n            this.formFileList(fileData, this.element.files);\n        }\n        else {\n            for (var _i = 0, fileData_7 = fileData; _i < fileData_7.length; _i++) {\n                var listItem = fileData_7[_i];\n                var liElement = this.createElement('li', {\n                    className: FILE,\n                    attrs: { 'data-file-name': listItem.name, 'data-files-count': '1' }\n                });\n                var textContainer = this.createElement('span', { className: TEXT_CONTAINER });\n                var textElement = this.createElement('span', { className: FILE_NAME, attrs: { 'title': listItem.name } });\n                textElement.innerHTML = this.getFileNameOnly(listItem.name);\n                var fileExtension = this.createElement('span', { className: FILE_TYPE });\n                var fileType = this.getFileType(listItem.name);\n                fileExtension.innerHTML = '.' + fileType;\n                if (!fileType) {\n                    fileExtension.classList.add('e-hidden');\n                }\n                if (!this.enableRtl) {\n                    textContainer.appendChild(textElement);\n                    textContainer.appendChild(fileExtension);\n                }\n                else {\n                    var rtlContainer = this.createElement('span', { className: RTL_CONTAINER });\n                    rtlContainer.appendChild(fileExtension);\n                    rtlContainer.appendChild(textElement);\n                    textContainer.appendChild(rtlContainer);\n                }\n                var fileSize = this.createElement('span', { className: FILE_SIZE });\n                fileSize.innerHTML = this.bytesToSize(listItem.size);\n                textContainer.appendChild(fileSize);\n                var statusElement = this.createElement('span', { className: STATUS });\n                textContainer.appendChild(statusElement);\n                statusElement.innerHTML = listItem.status;\n                liElement.appendChild(textContainer);\n                var iconElement = this.createElement('span', { className: ' e-icons',\n                    attrs: { 'tabindex': this.btnTabIndex } });\n                /* istanbul ignore next */\n                if (this.browserName === 'msie') {\n                    iconElement.classList.add('e-msie');\n                }\n                iconElement.setAttribute('title', this.localizedTexts('remove'));\n                liElement.appendChild(iconElement);\n                EventHandler.add(iconElement, 'click', this.removeFiles, this);\n                if (listItem.statusCode === '2') {\n                    statusElement.classList.add(UPLOAD_SUCCESS);\n                    iconElement.classList.add(DELETE_ICON);\n                    iconElement.setAttribute('title', this.localizedTexts('delete'));\n                }\n                else if (listItem.statusCode !== '1') {\n                    statusElement.classList.remove(UPLOAD_SUCCESS);\n                    statusElement.classList.add(VALIDATION_FAILS);\n                }\n                if (this.autoUpload && listItem.statusCode === '1' && this.asyncSettings.saveUrl !== '') {\n                    statusElement.innerHTML = '';\n                }\n                if (!iconElement.classList.contains(DELETE_ICON)) {\n                    iconElement.classList.add(REMOVE_ICON);\n                }\n                var index = fileData.indexOf(listItem);\n                var eventArgs = {\n                    element: liElement,\n                    fileInfo: listItem,\n                    index: index,\n                    isPreload: this.isPreLoadFile(listItem)\n                };\n                var eventsArgs = {\n                    element: liElement,\n                    fileInfo: listItem,\n                    index: index,\n                    isPreload: this.isPreLoadFile(listItem)\n                };\n                this.trigger('rendering', eventArgs);\n                this.trigger('fileListRendering', eventsArgs);\n                this.listParent.appendChild(liElement);\n                this.fileList.push(liElement);\n                this.truncateName(textElement);\n                var preventActionComplete = this.flag;\n                if (this.isPreLoadFile(listItem)) {\n                    this.flag = false;\n                    this.checkActionComplete(true);\n                    this.flag = preventActionComplete;\n                }\n            }\n        }\n    };\n    Uploader.prototype.getSlicedName = function (nameElement) {\n        var text = nameElement.textContent;\n        nameElement.dataset.tail = text.slice(text.length - 10);\n    };\n    Uploader.prototype.setListToFileInfo = function (fileData, fileList) {\n        for (var _i = 0, fileData_8 = fileData; _i < fileData_8.length; _i++) {\n            var listItem = fileData_8[_i];\n            listItem.list = fileList;\n        }\n    };\n    Uploader.prototype.truncateName = function (name) {\n        var nameElement = name;\n        if (this.browserName !== 'edge' && nameElement.offsetWidth < nameElement.scrollWidth) {\n            this.getSlicedName(nameElement);\n            /* istanbul ignore next */\n        }\n        else if (nameElement.offsetWidth + 1 < nameElement.scrollWidth) {\n            this.getSlicedName(nameElement);\n        }\n    };\n    Uploader.prototype.getFileType = function (name) {\n        var extension;\n        var index = name.lastIndexOf('.');\n        if (index >= 0) {\n            extension = name.substring(index + 1);\n        }\n        return extension ? extension : '';\n    };\n    Uploader.prototype.getFileNameOnly = function (name) {\n        var type = this.getFileType(name);\n        var names = name.split('.' + type);\n        return type = names[0];\n    };\n    Uploader.prototype.setInitialAttributes = function () {\n        if (this.initialAttr.accept) {\n            this.element.setAttribute('accept', this.initialAttr.accept);\n        }\n        if (this.initialAttr.disabled) {\n            this.element.setAttribute('disabled', 'disabled');\n        }\n        if (this.initialAttr.multiple) {\n            var newAttr = document.createAttribute('multiple');\n            this.element.setAttributeNode(newAttr);\n        }\n    };\n    Uploader.prototype.filterfileList = function (files) {\n        var filterFiles = [];\n        var li;\n        for (var i = 0; i < files.length; i++) {\n            li = this.getLiElement(files[i]);\n            if (!li.classList.contains(UPLOAD_SUCCESS)) {\n                filterFiles.push(files[i]);\n            }\n        }\n        return filterFiles;\n    };\n    Uploader.prototype.updateStatus = function (files, status, statusCode, updateLiStatus) {\n        if (updateLiStatus === void 0) { updateLiStatus = true; }\n        if (!(status === '' || isNullOrUndefined(status)) && !(statusCode === '' || isNullOrUndefined(statusCode))) {\n            files.status = status;\n            files.statusCode = statusCode;\n        }\n        if (updateLiStatus) {\n            var li = this.getLiElement(files);\n            if (!isNullOrUndefined(li)) {\n                if (!isNullOrUndefined(li.querySelector('.' + STATUS)) && !((status === '' || isNullOrUndefined(status)))) {\n                    li.querySelector('.' + STATUS).textContent = status;\n                }\n            }\n        }\n        return files;\n    };\n    Uploader.prototype.getLiElement = function (files) {\n        var index;\n        for (var i = 0; i < this.filesData.length; i++) {\n            if (!isNullOrUndefined(files) && ((!isNullOrUndefined(this.filesData[i].id) &&\n                !isNullOrUndefined(files.id)) ? (this.filesData[i].name === files.name &&\n                this.filesData[i].id === files.id) : this.filesData[i].name === files.name)) {\n                index = i;\n            }\n        }\n        return this.fileList[index];\n    };\n    Uploader.prototype.createProgressBar = function (liElement) {\n        var progressbarWrapper = this.createElement('span', { className: PROGRESS_WRAPPER });\n        var progressBar = this.createElement('progressbar', { className: PROGRESSBAR, attrs: { value: '0', max: '100' } });\n        var progressbarInnerWrapper = this.createElement('span', { className: PROGRESS_INNER_WRAPPER });\n        progressBar.setAttribute('style', 'width: 0%');\n        var progressbarText = this.createElement('span', { className: PROGRESSBAR_TEXT });\n        progressbarText.textContent = '0%';\n        progressbarInnerWrapper.appendChild(progressBar);\n        progressbarWrapper.appendChild(progressbarInnerWrapper);\n        progressbarWrapper.appendChild(progressbarText);\n        liElement.querySelector('.' + TEXT_CONTAINER).appendChild(progressbarWrapper);\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.updateProgressbar = function (e, li) {\n        if (!isNaN(Math.round((e.loaded / e.total) * 100)) && !isNullOrUndefined(li.querySelector('.' + PROGRESSBAR))) {\n            if (!isNullOrUndefined(this.progressInterval) && this.progressInterval !== '') {\n                var value = (Math.round((e.loaded / e.total) * 100)) % parseInt(this.progressInterval, 10);\n                if (value === 0 || value === 100) {\n                    this.changeProgressValue(li, Math.round((e.loaded / e.total) * 100).toString() + '%');\n                }\n            }\n            else {\n                this.changeProgressValue(li, Math.round((e.loaded / e.total) * 100).toString() + '%');\n            }\n        }\n    };\n    Uploader.prototype.changeProgressValue = function (li, progressValue) {\n        li.querySelector('.' + PROGRESSBAR).setAttribute('style', 'width:' + progressValue);\n        li.querySelector('.' + PROGRESSBAR_TEXT).textContent = progressValue;\n    };\n    Uploader.prototype.uploadInProgress = function (e, files, customUI, request) {\n        var li = this.getLiElement(files);\n        if (isNullOrUndefined(li) && (!customUI)) {\n            return;\n        }\n        if (!isNullOrUndefined(li)) {\n            /* istanbul ignore next */\n            if (files.statusCode === '5') {\n                this.cancelUploadingFile(files, e, request, li);\n            }\n            if (!(li.querySelectorAll('.' + PROGRESS_WRAPPER).length > 0) && li.querySelector('.' + STATUS)) {\n                li.querySelector('.' + STATUS).classList.add(UPLOAD_INPROGRESS);\n                this.createProgressBar(li);\n                this.updateProgressBarClasses(li, UPLOAD_INPROGRESS);\n                li.querySelector('.' + STATUS).classList.remove(UPLOAD_FAILED);\n            }\n            this.updateProgressbar(e, li);\n            var iconEle = li.querySelector('.' + REMOVE_ICON);\n            if (!isNullOrUndefined(iconEle)) {\n                iconEle.classList.add(ABORT_ICON, UPLOAD_INPROGRESS);\n                iconEle.setAttribute('title', this.localizedTexts('abort'));\n                iconEle.classList.remove(REMOVE_ICON);\n            }\n        }\n        else {\n            this.cancelUploadingFile(files, e, request);\n        }\n        var args = { e: e, operation: 'upload', file: this.updateStatus(files, this.localizedTexts('inProgress'), '3') };\n        this.trigger('progress', args);\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.cancelUploadingFile = function (files, e, request, li) {\n        var _this = this;\n        if (files.statusCode === '5') {\n            var eventArgs = {\n                event: e,\n                fileData: files,\n                cancel: false,\n                customFormData: []\n            };\n            this.trigger('canceling', eventArgs, function (eventArgs) {\n                if (eventArgs.cancel) {\n                    files.statusCode = '3';\n                    if (!isNullOrUndefined(li)) {\n                        var spinnerTarget = li.querySelector('.' + ABORT_ICON);\n                        if (!isNullOrUndefined(spinnerTarget)) {\n                            hideSpinner(spinnerTarget);\n                            detach(li.querySelector('.e-spinner-pane'));\n                        }\n                    }\n                }\n                else {\n                    request.emitError = false;\n                    request.httpRequest.abort();\n                    var formData = new FormData();\n                    if (files.statusCode === '5') {\n                        var name_1 = _this.element.getAttribute('name');\n                        formData.append(name_1, files.name);\n                        formData.append('cancel-uploading', files.name);\n                        _this.updateFormData(formData, eventArgs.customFormData);\n                        var ajax = new Ajax(_this.asyncSettings.removeUrl, 'POST', true, null);\n                        ajax.emitError = false;\n                        ajax.onLoad = function (e) {\n                            _this.removecanceledFile(e, files);\n                            return {};\n                        };\n                        ajax.send(formData);\n                    }\n                }\n            });\n        }\n    };\n    Uploader.prototype.removecanceledFile = function (e, file) {\n        var liElement = this.getLiElement(file);\n        if (isNullOrUndefined(liElement) || liElement.querySelector('.' + RETRY_ICON) || isNullOrUndefined(liElement.querySelector('.' + ABORT_ICON))) {\n            return;\n        }\n        this.updateStatus(file, this.localizedTexts('fileUploadCancel'), '5');\n        this.renderFailureState(e, file, liElement);\n        var spinnerTarget = liElement.querySelector('.' + REMOVE_ICON);\n        if (!isNullOrUndefined(liElement)) {\n            hideSpinner(spinnerTarget);\n            if (!isNullOrUndefined(liElement.querySelector('.e-spinner-pane'))) {\n                detach(liElement.querySelector('.e-spinner-pane'));\n            }\n        }\n        var requestResponse = e && e.currentTarget ? this.getResponse(e) : null;\n        var args = { event: e, response: requestResponse, operation: 'cancel', file: file };\n        this.trigger('success', args);\n    };\n    Uploader.prototype.renderFailureState = function (e, file, liElement) {\n        var _this = this;\n        this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n        this.removeProgressbar(liElement, 'failure');\n        if (!isNullOrUndefined(liElement.querySelector('.e-file-status'))) {\n            liElement.querySelector('.e-file-status').classList.add(UPLOAD_FAILED);\n        }\n        var deleteIcon = liElement.querySelector('.' + ABORT_ICON);\n        if (isNullOrUndefined(deleteIcon)) {\n            return;\n        }\n        deleteIcon.classList.remove(ABORT_ICON, UPLOAD_INPROGRESS);\n        deleteIcon.classList.add(REMOVE_ICON);\n        deleteIcon.setAttribute('title', this.localizedTexts('remove'));\n        this.pauseButton = this.createElement('span', { className: 'e-icons e-file-reload-btn', attrs: { 'tabindex': this.btnTabIndex } });\n        deleteIcon.parentElement.insertBefore(this.pauseButton, deleteIcon);\n        this.pauseButton.setAttribute('title', this.localizedTexts('retry'));\n        var retryElement = liElement.querySelector('.' + RETRY_ICON);\n        /* istanbul ignore next */\n        retryElement.addEventListener('click', function (e) {\n            _this.reloadcanceledFile(e, file, liElement, false);\n        }, false);\n    };\n    Uploader.prototype.reloadcanceledFile = function (e, file, liElement, custom) {\n        file.statusCode = '1';\n        file.status = this.localizedTexts('readyToUploadMessage');\n        if (!custom) {\n            if (!isNullOrUndefined(liElement.querySelector('.' + STATUS))) {\n                liElement.querySelector('.' + STATUS).classList.remove(UPLOAD_FAILED);\n            }\n            if (!isNullOrUndefined(liElement.querySelector('.' + RETRY_ICON))) {\n                detach(liElement.querySelector('.' + RETRY_ICON));\n            }\n            this.pauseButton = null;\n        }\n        /* istanbul ignore next */\n        if (!isNullOrUndefined(liElement)) {\n            liElement.classList.add(RESTRICT_RETRY);\n        }\n        this.upload([file]);\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.uploadComplete = function (e, file, customUI) {\n        var status = e.target;\n        if (status.readyState === 4 && status.status >= 200 && status.status <= 299) {\n            var li = this.getLiElement(file);\n            if (isNullOrUndefined(li) && (!customUI || isNullOrUndefined(customUI))) {\n                return;\n            }\n            if (!isNullOrUndefined(li)) {\n                this.updateProgressBarClasses(li, UPLOAD_SUCCESS);\n                this.removeProgressbar(li, 'success');\n                var iconEle = li.querySelector('.' + ABORT_ICON);\n                if (!isNullOrUndefined(iconEle)) {\n                    iconEle.classList.add(DELETE_ICON);\n                    iconEle.setAttribute('title', this.localizedTexts('delete'));\n                    iconEle.classList.remove(ABORT_ICON);\n                    iconEle.classList.remove(UPLOAD_INPROGRESS);\n                }\n            }\n            this.raiseSuccessEvent(e, file);\n        }\n        else {\n            this.uploadFailed(e, file);\n        }\n    };\n    Uploader.prototype.getResponse = function (e) {\n        var target = e.currentTarget;\n        var response = {\n            readyState: target.readyState,\n            statusCode: target.status,\n            statusText: target.statusText,\n            headers: target.getAllResponseHeaders(),\n            withCredentials: target.withCredentials\n        };\n        return response;\n    };\n    Uploader.prototype.raiseSuccessEvent = function (e, file) {\n        var _this = this;\n        var response = e && e.currentTarget ? this.getResponse(e) : null;\n        var statusMessage = this.localizedTexts('uploadSuccessMessage');\n        var args = {\n            e: e, response: response, operation: 'upload', file: this.updateStatus(file, statusMessage, '2', false), statusText: statusMessage\n        };\n        var liElement = this.getLiElement(file);\n        if (!isNullOrUndefined(liElement)) {\n            var spinnerEle = liElement.querySelector('.' + SPINNER_PANE);\n            if (!isNullOrUndefined(spinnerEle)) {\n                hideSpinner(liElement);\n                detach(spinnerEle);\n            }\n        }\n        this.trigger('success', args, function (args) {\n            _this.updateStatus(file, args.statusText, '2');\n            _this.uploadedFilesData.push(file);\n            _this.trigger('change', { file: _this.uploadedFilesData });\n            _this.checkActionButtonStatus();\n            if (_this.fileList.length > 0) {\n                if ((!(_this.getLiElement(file)).classList.contains(RESTRICT_RETRY))) {\n                    _this.uploadSequential();\n                    _this.checkActionComplete(true);\n                }\n                else {\n                    /* istanbul ignore next */\n                    (_this.getLiElement(file)).classList.remove(RESTRICT_RETRY);\n                }\n            }\n        });\n    };\n    Uploader.prototype.uploadFailed = function (e, file) {\n        var _this = this;\n        var li = this.getLiElement(file);\n        var response = e && e.currentTarget ? this.getResponse(e) : null;\n        var statusMessage = this.localizedTexts('uploadFailedMessage');\n        var args = {\n            e: e, response: response, operation: 'upload', file: this.updateStatus(file, statusMessage, '0', false), statusText: statusMessage\n        };\n        if (!isNullOrUndefined(li)) {\n            this.renderFailureState(e, file, li);\n        }\n        this.trigger('failure', args, function (args) {\n            _this.updateStatus(file, args.statusText, '0');\n            _this.checkActionButtonStatus();\n            _this.uploadSequential();\n            _this.checkActionComplete(true);\n        });\n    };\n    Uploader.prototype.uploadSequential = function () {\n        if (this.sequentialUpload) {\n            if (this.autoUpload) {\n                /* istanbul ignore next */\n                this.checkAutoUpload(this.filesData);\n            }\n            else {\n                this.uploadButtonClick();\n            }\n        }\n    };\n    Uploader.prototype.checkActionComplete = function (increment) {\n        if (increment) {\n            ++this.actionCompleteCount;\n        }\n        else {\n            --this.actionCompleteCount;\n        }\n        this.raiseActionComplete();\n    };\n    Uploader.prototype.raiseActionComplete = function () {\n        if ((this.filesData.length === this.actionCompleteCount) && this.flag) {\n            this.flag = false;\n            var eventArgs = {\n                fileData: []\n            };\n            eventArgs.fileData = this.getSelectedFileStatus(this.selectedFiles);\n            this.trigger('actionComplete', eventArgs);\n        }\n    };\n    Uploader.prototype.getSelectedFileStatus = function (selectedFiles) {\n        var matchFiles = [];\n        var matchFilesIndex = 0;\n        for (var selectFileIndex = 0; selectFileIndex < selectedFiles.length; selectFileIndex++) {\n            var selectedFileData = selectedFiles[selectFileIndex];\n            for (var fileDataIndex = 0; fileDataIndex < this.filesData.length; fileDataIndex++) {\n                if (this.filesData[fileDataIndex].name === selectedFileData.name && this.filesData[fileDataIndex].status === selectedFileData.status) {\n                    matchFiles[matchFilesIndex] = this.filesData[fileDataIndex];\n                    ++matchFilesIndex;\n                }\n            }\n        }\n        return matchFiles;\n    };\n    Uploader.prototype.updateProgressBarClasses = function (li, className) {\n        var progressBar = li.querySelector('.' + PROGRESSBAR);\n        if (!isNullOrUndefined(progressBar)) {\n            progressBar.classList.add(className);\n        }\n    };\n    Uploader.prototype.removeProgressbar = function (li, callType) {\n        var _this = this;\n        if (!isNullOrUndefined(li.querySelector('.' + PROGRESS_WRAPPER))) {\n            this.progressAnimation = new Animation({ duration: 1250 });\n            this.progressAnimation.animate(li.querySelector('.' + PROGRESS_WRAPPER), { name: 'FadeOut' });\n            this.progressAnimation.animate(li.querySelector('.' + PROGRESSBAR_TEXT), { name: 'FadeOut' });\n            setTimeout(function () {\n                _this.animateProgressBar(li, callType);\n            }, 750);\n        }\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.animateProgressBar = function (li, callType) {\n        if (callType === 'success') {\n            li.classList.add(UPLOAD_SUCCESS);\n            if (!isNullOrUndefined(li.querySelector('.' + STATUS))) {\n                li.querySelector('.' + STATUS).classList.remove(UPLOAD_INPROGRESS);\n                this.progressAnimation.animate(li.querySelector('.' + STATUS), { name: 'FadeIn' });\n                li.querySelector('.' + STATUS).classList.add(UPLOAD_SUCCESS);\n            }\n        }\n        else {\n            if (!isNullOrUndefined(li.querySelector('.' + STATUS))) {\n                li.querySelector('.' + STATUS).classList.remove(UPLOAD_INPROGRESS);\n                this.progressAnimation.animate(li.querySelector('.' + STATUS), { name: 'FadeIn' });\n                li.querySelector('.' + STATUS).classList.add(UPLOAD_FAILED);\n            }\n        }\n        if (li.querySelector('.' + PROGRESS_WRAPPER)) {\n            detach(li.querySelector('.' + PROGRESS_WRAPPER));\n        }\n    };\n    Uploader.prototype.setExtensions = function (extensions) {\n        if (extensions !== '' && !isNullOrUndefined(extensions)) {\n            this.element.setAttribute('accept', extensions);\n        }\n        else {\n            this.element.removeAttribute('accept');\n        }\n    };\n    Uploader.prototype.templateComplier = function (uploadTemplate) {\n        if (uploadTemplate) {\n            try {\n                if (selectAll(uploadTemplate, document).length) {\n                    return compile(select(uploadTemplate, document).innerHTML.trim());\n                }\n                else {\n                    return compile(uploadTemplate);\n                }\n            }\n            catch (exception) {\n                return compile(uploadTemplate);\n            }\n        }\n        return undefined;\n    };\n    Uploader.prototype.setRTL = function () {\n        if (this.enableRtl) {\n            addClass([this.uploadWrapper], RTL);\n        }\n        else {\n            removeClass([this.uploadWrapper], RTL);\n        }\n    };\n    Uploader.prototype.localizedTexts = function (localeText) {\n        this.l10n.setLocale(this.locale);\n        return this.l10n.getConstant(localeText);\n    };\n    Uploader.prototype.setControlStatus = function () {\n        if (!this.enabled) {\n            this.uploadWrapper.classList.add(DISABLED);\n            this.element.setAttribute('disabled', 'disabled');\n            this.browseButton.setAttribute('disabled', 'disabled');\n            if (!isNullOrUndefined(this.clearButton)) {\n                this.clearButton.setAttribute('disabled', 'disabled');\n            }\n            if (!isNullOrUndefined(this.uploadButton)) {\n                this.uploadButton.setAttribute('disabled', 'disabled');\n            }\n        }\n        else {\n            if (this.uploadWrapper.classList.contains(DISABLED)) {\n                this.uploadWrapper.classList.remove(DISABLED);\n            }\n            if (!isNullOrUndefined(this.browseButton) && this.element.hasAttribute('disabled')) {\n                this.element.removeAttribute('disabled');\n                this.browseButton.removeAttribute('disabled');\n            }\n            if (!isNullOrUndefined(this.clearButton) && this.clearButton.hasAttribute('disabled')) {\n                this.clearButton.removeAttribute('disabled');\n            }\n            if (!isNullOrUndefined(this.uploadButton) && this.uploadButton.hasAttribute('disabled')) {\n                this.uploadButton.hasAttribute('disabled');\n            }\n        }\n    };\n    Uploader.prototype.checkHTMLAttributes = function (isDynamic) {\n        var attributes = isDynamic ? isNullOrUndefined(this.htmlAttributes) ? [] : Object.keys(this.htmlAttributes) :\n            ['accept', 'multiple', 'disabled'];\n        for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {\n            var prop = attributes_1[_i];\n            if (!isNullOrUndefined(this.element.getAttribute(prop))) {\n                switch (prop) {\n                    case 'accept':\n                        if ((isNullOrUndefined(this.uploaderOptions) || (this.uploaderOptions['allowedExtensions'] === undefined))\n                            || isDynamic) {\n                            this.setProperties({ allowedExtensions: this.element.getAttribute('accept') }, !isDynamic);\n                            this.initialAttr.accept = this.allowedExtensions;\n                        }\n                        break;\n                    case 'multiple':\n                        if ((isNullOrUndefined(this.uploaderOptions) || (this.uploaderOptions['multiple'] === undefined)) || isDynamic) {\n                            var isMutiple = this.element.getAttribute(prop) === 'multiple' ||\n                                this.element.getAttribute(prop) === '' || this.element.getAttribute(prop) === 'true' ? true : false;\n                            this.setProperties({ multiple: isMutiple }, !isDynamic);\n                            this.initialAttr.multiple = true;\n                        }\n                        break;\n                    case 'disabled':\n                        if ((isNullOrUndefined(this.uploaderOptions) || (this.uploaderOptions['enabled'] === undefined)) || isDynamic) {\n                            var isDisabled = this.element.getAttribute(prop) === 'disabled' ||\n                                this.element.getAttribute(prop) === '' || this.element.getAttribute(prop) === 'true' ? false : true;\n                            this.setProperties({ enabled: isDisabled }, !isDynamic);\n                            this.initialAttr.disabled = true;\n                        }\n                }\n            }\n        }\n    };\n    Uploader.prototype.chunkUpload = function (file, custom, fileIndex) {\n        var start = 0;\n        var end = Math.min(this.asyncSettings.chunkSize, file.size);\n        var index = 0;\n        var blob = file.rawFile.slice(start, end);\n        var metaData = { chunkIndex: index, blob: blob, file: file, start: start, end: end, retryCount: 0, request: null };\n        this.sendRequest(file, metaData, custom, fileIndex);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Uploader.prototype.sendRequest = function (file, metaData, custom, fileIndex) {\n        var _this = this;\n        var formData = new FormData();\n        var blob = file.rawFile.slice(metaData.start, metaData.end);\n        formData.append(this.uploaderName, blob, file.name);\n        formData.append('chunk-index', metaData.chunkIndex.toString());\n        formData.append('chunkIndex', metaData.chunkIndex.toString());\n        var totalChunk = Math.max(Math.ceil(file.size / this.asyncSettings.chunkSize), 1);\n        formData.append('total-chunk', totalChunk.toString());\n        formData.append('totalChunk', totalChunk.toString());\n        var ajax = new Ajax({ url: this.asyncSettings.saveUrl, type: 'POST', async: true, contentType: null });\n        ajax.emitError = false;\n        ajax.onLoad = function (e) {\n            _this.chunkUploadComplete(e, metaData, custom);\n            return {};\n        };\n        ajax.onUploadProgress = function (e) {\n            _this.chunkUploadInProgress(e, metaData, custom);\n            return {};\n        };\n        var eventArgs = {\n            fileData: file,\n            customFormData: [],\n            cancel: false,\n            chunkSize: this.asyncSettings.chunkSize === 0 ? null : this.asyncSettings.chunkSize\n        };\n        ajax.beforeSend = function (e) {\n            eventArgs.currentRequest = ajax.httpRequest;\n            eventArgs.currentChunkIndex = metaData.chunkIndex;\n            if (eventArgs.currentChunkIndex === 0) {\n                // This event is currently not required but to avoid breaking changes for previous customer, we have included.\n                _this.trigger('uploading', eventArgs, function (eventArgs) {\n                    _this.uploadingEventCallback(formData, eventArgs, e, file);\n                });\n            }\n            else {\n                _this.trigger('chunkUploading', eventArgs, function (eventArgs) {\n                    _this.uploadingEventCallback(formData, eventArgs, e, file);\n                });\n            }\n        };\n        /* istanbul ignore next */\n        ajax.onError = function (e) {\n            _this.chunkUploadFailed(e, metaData, custom);\n            return {};\n        };\n        ajax.send(formData);\n        metaData.request = ajax;\n    };\n    Uploader.prototype.uploadingEventCallback = function (formData, eventArgs, e, file) {\n        if (eventArgs.cancel) {\n            this.eventCancelByArgs(e, eventArgs, file);\n        }\n        else {\n            this.updateFormData(formData, eventArgs.customFormData);\n        }\n    };\n    Uploader.prototype.eventCancelByArgs = function (e, eventArgs, file) {\n        var _this = this;\n        e.cancel = true;\n        if (eventArgs.fileData.statusCode === '5') {\n            return;\n        }\n        eventArgs.fileData.statusCode = '5';\n        eventArgs.fileData.status = this.localizedTexts('fileUploadCancel');\n        var liElement = this.getLiElement(eventArgs.fileData);\n        if (liElement) {\n            if (!isNullOrUndefined(liElement.querySelector('.' + STATUS))) {\n                liElement.querySelector('.' + STATUS).innerHTML = this.localizedTexts('fileUploadCancel');\n                liElement.querySelector('.' + STATUS).classList.add(UPLOAD_FAILED);\n            }\n            this.pauseButton = this.createElement('span', { className: 'e-icons e-file-reload-btn', attrs: { 'tabindex': this.btnTabIndex } });\n            var removeIcon = liElement.querySelector('.' + REMOVE_ICON);\n            if (removeIcon) {\n                removeIcon.parentElement.insertBefore(this.pauseButton, removeIcon);\n            }\n            this.pauseButton.setAttribute('title', this.localizedTexts('retry'));\n            /* istanbul ignore next */\n            this.pauseButton.addEventListener('click', function (e) {\n                _this.reloadcanceledFile(e, file, liElement);\n            }, false);\n            this.checkActionButtonStatus();\n        }\n    };\n    Uploader.prototype.checkChunkUpload = function () {\n        return (this.asyncSettings.chunkSize <= 0 || isNullOrUndefined(this.asyncSettings.chunkSize)) ? false : true;\n    };\n    Uploader.prototype.chunkUploadComplete = function (e, metaData, custom) {\n        var _this = this;\n        var response = e.target;\n        var liElement;\n        if (response.readyState === 4 && response.status >= 200 && response.status < 300) {\n            var requestResponse = e && e.currentTarget ? this.getResponse(e) : null;\n            var totalChunk = Math.max(Math.ceil(metaData.file.size / this.asyncSettings.chunkSize), 1);\n            var eventArgs = {\n                event: e,\n                file: metaData.file,\n                chunkIndex: metaData.chunkIndex,\n                totalChunk: totalChunk,\n                chunkSize: this.asyncSettings.chunkSize,\n                response: requestResponse\n            };\n            this.trigger('chunkSuccess', eventArgs);\n            if (isNullOrUndefined(custom) || !custom) {\n                liElement = this.getLiElement(metaData.file);\n            }\n            this.updateMetaData(metaData);\n            if (metaData.end === metaData.file.size) {\n                metaData.file.statusCode = '3';\n            }\n            if (metaData.file.statusCode === '5') {\n                var eventArgs_1 = { event: e, fileData: metaData.file, cancel: false, customFormData: [] };\n                this.trigger('canceling', eventArgs_1, function (eventArgs) {\n                    /* istanbul ignore next */\n                    if (eventArgs.cancel) {\n                        metaData.file.statusCode = '3';\n                        var spinnerTarget = liElement.querySelector('.' + ABORT_ICON);\n                        if (!isNullOrUndefined(liElement) && !isNullOrUndefined(spinnerTarget)) {\n                            hideSpinner(spinnerTarget);\n                            detach(liElement.querySelector('.e-spinner-pane'));\n                        }\n                        _this.sendNextRequest(metaData);\n                    }\n                    else {\n                        metaData.request.emitError = false;\n                        response.abort();\n                        var formData = new FormData();\n                        var name_2 = _this.element.getAttribute('name');\n                        formData.append(name_2, metaData.file.name);\n                        formData.append('cancel-uploading', metaData.file.name);\n                        formData.append('cancelUploading', metaData.file.name);\n                        _this.updateFormData(formData, eventArgs.customFormData);\n                        var ajax = new Ajax(_this.asyncSettings.removeUrl, 'POST', true, null);\n                        ajax.emitError = false;\n                        ajax.onLoad = function (e) {\n                            _this.removeChunkFile(e, metaData, custom);\n                            return {};\n                        };\n                        ajax.send(formData);\n                    }\n                });\n            }\n            else {\n                if ((totalChunk - 1) === metaData.chunkIndex && totalChunk > metaData.chunkIndex) {\n                    var index = this.pausedData.indexOf(metaData);\n                    if (index >= 0) {\n                        this.pausedData.splice(index, 1);\n                    }\n                    if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom) && liElement) {\n                        if (liElement && !isNullOrUndefined(liElement.querySelector('.' + PAUSE_UPLOAD))) {\n                            detach(liElement.querySelector('.' + PAUSE_UPLOAD));\n                        }\n                        this.removeChunkProgressBar(metaData);\n                    }\n                    this.raiseSuccessEvent(e, metaData.file);\n                    return;\n                }\n                if (metaData.file.statusCode !== '4') {\n                    this.sendNextRequest(metaData);\n                }\n            }\n        }\n        else {\n            this.chunkUploadFailed(e, metaData);\n        }\n    };\n    Uploader.prototype.sendNextRequest = function (metaData) {\n        metaData.start = metaData.end;\n        metaData.end += this.asyncSettings.chunkSize;\n        metaData.end = Math.min(metaData.end, metaData.file.size);\n        metaData.chunkIndex += 1;\n        this.sendRequest(metaData.file, metaData);\n    };\n    Uploader.prototype.removeChunkFile = function (e, metaData, custom) {\n        if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) && !custom)) {\n            var liElement = this.getLiElement(metaData.file);\n            var deleteIcon = liElement.querySelector('.' + ABORT_ICON);\n            var spinnerTarget = deleteIcon;\n            this.updateStatus(metaData.file, this.localizedTexts('fileUploadCancel'), '5');\n            this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n            this.removeProgressbar(liElement, 'failure');\n            deleteIcon && deleteIcon.classList.remove(ABORT_ICON);\n            deleteIcon && deleteIcon.classList.add(REMOVE_ICON);\n            deleteIcon && deleteIcon.setAttribute('title', this.localizedTexts('remove'));\n            var pauseIcon = liElement.querySelector('.' + PAUSE_UPLOAD);\n            pauseIcon && pauseIcon.classList.add(RETRY_ICON);\n            pauseIcon && pauseIcon.classList.remove(PAUSE_UPLOAD);\n            pauseIcon && pauseIcon.setAttribute('title', this.localizedTexts('retry'));\n            if (!isNullOrUndefined(liElement) && !isNullOrUndefined(deleteIcon)\n                && !isNullOrUndefined(liElement.querySelector('.e-spinner-pane'))) {\n                hideSpinner(spinnerTarget);\n                detach(liElement.querySelector('.e-spinner-pane'));\n            }\n        }\n    };\n    Uploader.prototype.pauseUpload = function (metaData, e, custom) {\n        metaData.file.statusCode = '4';\n        metaData.file.status = this.localizedTexts('pause');\n        this.updateMetaData(metaData);\n        var eventArgs = {\n            event: e ? e : null,\n            file: metaData.file,\n            chunkIndex: metaData.chunkIndex,\n            chunkCount: Math.round(metaData.file.size / this.asyncSettings.chunkSize),\n            chunkSize: this.asyncSettings.chunkSize\n        };\n        this.abortUpload(metaData, custom, eventArgs);\n    };\n    Uploader.prototype.abortUpload = function (metaData, custom, eventArgs) {\n        if (metaData.file.statusCode !== '4') {\n            metaData.request.emitError = false;\n            metaData.request.httpRequest.abort();\n        }\n        var liElement = this.getLiElement(metaData.file);\n        if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom)) {\n            var targetElement = liElement.querySelector('.' + PAUSE_UPLOAD);\n            targetElement.classList.remove(PAUSE_UPLOAD);\n            targetElement.classList.add(RESUME_UPLOAD);\n            targetElement.setAttribute('title', this.localizedTexts('resume'));\n            targetElement.nextElementSibling.classList.add(REMOVE_ICON);\n            targetElement.nextElementSibling.classList.remove(ABORT_ICON);\n            targetElement.nextElementSibling.setAttribute('title', this.localizedTexts('remove'));\n        }\n        for (var i = 0; i < this.pausedData.length; i++) {\n            if (this.pausedData[i].file.name === metaData.file.name) {\n                this.pausedData.splice(i, 1);\n            }\n        }\n        this.pausedData.push(metaData);\n        this.trigger('pausing', eventArgs);\n    };\n    Uploader.prototype.resumeUpload = function (metaData, e, custom) {\n        var liElement = this.getLiElement(metaData.file);\n        var targetElement;\n        if (!isNullOrUndefined(liElement)) {\n            targetElement = liElement.querySelector('.' + RESUME_UPLOAD);\n        }\n        if (!isNullOrUndefined(targetElement) && (isNullOrUndefined(custom) || !custom)) {\n            targetElement.classList.remove(RESUME_UPLOAD);\n            targetElement.classList.add(PAUSE_UPLOAD);\n            targetElement.setAttribute('title', this.localizedTexts('pause'));\n            targetElement.nextElementSibling.classList.remove(REMOVE_ICON);\n            targetElement.nextElementSibling.classList.add(ABORT_ICON);\n            targetElement.nextElementSibling.setAttribute('title', this.localizedTexts('abort'));\n        }\n        metaData.file.status = this.localizedTexts('inProgress');\n        metaData.file.statusCode = '3';\n        this.updateMetaData(metaData);\n        var eventArgs = {\n            event: e ? e : null,\n            file: metaData.file,\n            chunkIndex: metaData.chunkIndex,\n            chunkCount: Math.round(metaData.file.size / this.asyncSettings.chunkSize),\n            chunkSize: this.asyncSettings.chunkSize\n        };\n        this.trigger('resuming', eventArgs);\n        for (var i = 0; i < this.pausedData.length; i++) {\n            if (this.pausedData[i].end === this.pausedData[i].file.size) {\n                this.chunkUploadComplete(e, metaData, custom);\n            }\n            else {\n                if (this.pausedData[i].file.name === metaData.file.name) {\n                    this.pausedData[i].start = this.pausedData[i].end;\n                    this.pausedData[i].end = this.pausedData[i].end + this.asyncSettings.chunkSize;\n                    this.pausedData[i].end = Math.min(this.pausedData[i].end, this.pausedData[i].file.size);\n                    this.pausedData[i].chunkIndex = this.pausedData[i].chunkIndex + 1;\n                    this.sendRequest(this.pausedData[i].file, this.pausedData[i], custom);\n                }\n            }\n        }\n    };\n    Uploader.prototype.updateMetaData = function (metaData) {\n        if (this.uploadMetaData.indexOf(metaData) === -1) {\n            this.uploadMetaData.push(metaData);\n        }\n        else {\n            this.uploadMetaData.splice(this.uploadMetaData.indexOf(metaData), 1);\n            this.uploadMetaData.push(metaData);\n        }\n    };\n    Uploader.prototype.removeChunkProgressBar = function (metaData) {\n        var liElement = this.getLiElement(metaData.file);\n        if (!isNullOrUndefined(liElement)) {\n            this.updateProgressBarClasses(liElement, UPLOAD_SUCCESS);\n            this.removeProgressbar(liElement, 'success');\n            var cancelButton = liElement.querySelector('.' + ABORT_ICON);\n            if (!isNullOrUndefined(cancelButton)) {\n                cancelButton.classList.add(DELETE_ICON);\n                cancelButton.setAttribute('title', this.localizedTexts('delete'));\n                cancelButton.classList.remove(ABORT_ICON, UPLOAD_INPROGRESS);\n            }\n        }\n    };\n    Uploader.prototype.chunkUploadFailed = function (e, metaData, custom) {\n        var _this = this;\n        var chunkCount = Math.max(Math.ceil(metaData.file.size / this.asyncSettings.chunkSize), 1);\n        var liElement;\n        if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom)) {\n            liElement = this.getLiElement(metaData.file);\n        }\n        var requestResponse = e && e.currentTarget ? this.getResponse(e) : null;\n        var eventArgs = {\n            event: e,\n            file: metaData.file,\n            chunkIndex: metaData.chunkIndex,\n            totalChunk: chunkCount,\n            chunkSize: this.asyncSettings.chunkSize,\n            cancel: false,\n            response: requestResponse\n        };\n        this.trigger('chunkFailure', eventArgs, function (eventArgs) {\n            // To prevent triggering of failure event\n            if (!eventArgs.cancel) {\n                if (metaData.retryCount < _this.asyncSettings.retryCount) {\n                    setTimeout(function () {\n                        _this.retryRequest(liElement, metaData, custom);\n                    }, _this.asyncSettings.retryAfterDelay);\n                }\n                else {\n                    if (!isNullOrUndefined(liElement)) {\n                        var pauseButton = liElement.querySelector('.' + PAUSE_UPLOAD) ?\n                            liElement.querySelector('.' + PAUSE_UPLOAD) : liElement.querySelector('.' + RESUME_UPLOAD);\n                        if (!isNullOrUndefined(pauseButton)) {\n                            pauseButton.classList.add(RETRY_ICON);\n                            pauseButton.classList.remove(PAUSE_UPLOAD, RESUME_UPLOAD);\n                        }\n                        _this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n                        _this.removeProgressbar(liElement, 'failure');\n                        liElement.querySelector('.e-icons').classList.remove(UPLOAD_INPROGRESS);\n                        var iconElement = liElement.querySelector('.' + ABORT_ICON) ?\n                            liElement.querySelector('.' + ABORT_ICON) : liElement.querySelector('.' + REMOVE_ICON);\n                        iconElement.classList.remove(ABORT_ICON);\n                        if (!isNullOrUndefined(liElement.querySelector('.' + PAUSE_UPLOAD))) {\n                            detach(liElement.querySelector('.' + PAUSE_UPLOAD));\n                        }\n                        if (metaData.start > 0) {\n                            iconElement.classList.add(DELETE_ICON);\n                            iconElement.setAttribute('title', _this.localizedTexts('delete'));\n                        }\n                        else {\n                            iconElement.classList.add(REMOVE_ICON);\n                            iconElement.setAttribute('title', _this.localizedTexts('remove'));\n                        }\n                    }\n                    metaData.retryCount = 0;\n                    var file_1 = metaData.file;\n                    var failureMessage = _this.localizedTexts('uploadFailedMessage');\n                    var args = {\n                        e: e, response: requestResponse,\n                        operation: 'upload',\n                        file: _this.updateStatus(file_1, failureMessage, '0', false),\n                        statusText: failureMessage\n                    };\n                    _this.trigger('failure', args, function (args) {\n                        _this.updateStatus(file_1, args.statusText, '0');\n                        _this.uploadSequential();\n                        _this.checkActionComplete(true);\n                    });\n                }\n            }\n        });\n    };\n    Uploader.prototype.retryRequest = function (liElement, metaData, custom) {\n        if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom) && liElement) {\n            this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n        }\n        metaData.retryCount += 1;\n        this.sendRequest(metaData.file, metaData);\n    };\n    Uploader.prototype.checkPausePlayAction = function (e) {\n        var targetElement = e.target;\n        var selectedElement = e.target.parentElement;\n        var index = this.fileList.indexOf(selectedElement);\n        var fileData = this.filesData[index];\n        var metaData = this.getCurrentMetaData(fileData);\n        if (targetElement.classList.contains(PAUSE_UPLOAD)) {\n            /* istanbul ignore next */\n            this.pauseUpload(metaData, e);\n        }\n        else if (targetElement.classList.contains(RESUME_UPLOAD)) {\n            /* istanbul ignore next */\n            this.resumeUpload(metaData, e);\n        }\n        else if (targetElement.classList.contains(RETRY_ICON)) {\n            if (metaData.file.status === this.localizedTexts('fileUploadCancel')) {\n                this.retryUpload(metaData, false);\n            }\n            else {\n                this.retryUpload(metaData, true);\n            }\n        }\n    };\n    Uploader.prototype.retryUpload = function (metaData, fromcanceledStage) {\n        if (fromcanceledStage) {\n            metaData.end = metaData.end + this.asyncSettings.chunkSize;\n            metaData.start = metaData.start + this.asyncSettings.chunkSize;\n            this.sendRequest(metaData.file, metaData);\n        }\n        else {\n            metaData.file.statusCode = '1';\n            metaData.file.status = this.localizedTexts('readyToUploadMessage');\n            this.chunkUpload(metaData.file);\n        }\n        /* istanbul ignore next */\n        (this.getLiElement(metaData.file)).classList.add(RESTRICT_RETRY);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Uploader.prototype.chunkUploadInProgress = function (e, metaData, custom) {\n        var _this = this;\n        if (metaData.file.statusCode === '4') {\n            return;\n        }\n        if (metaData.file.statusCode !== '4' && metaData.file.statusCode !== '5') {\n            metaData.file.statusCode = '3';\n            metaData.file.status = this.localizedTexts('inProgress');\n        }\n        this.updateMetaData(metaData);\n        var liElement = this.getLiElement(metaData.file);\n        if (isNullOrUndefined(liElement)) {\n            return;\n        }\n        var retryElement = liElement.querySelector('.' + RETRY_ICON);\n        if (!isNullOrUndefined(retryElement)) {\n            retryElement.classList.add(PAUSE_UPLOAD);\n            retryElement.setAttribute('title', this.localizedTexts('pause'));\n            retryElement.classList.remove(RETRY_ICON);\n        }\n        if (!isNullOrUndefined(liElement)) {\n            if (!(liElement.querySelectorAll('.' + PROGRESS_WRAPPER).length > 0)) {\n                var statusElement = liElement.querySelector('.' + STATUS);\n                if (isNullOrUndefined(this.template)) {\n                    statusElement.classList.add(UPLOAD_INPROGRESS);\n                    statusElement.classList.remove(UPLOAD_FAILED);\n                    this.createProgressBar(liElement);\n                    this.updateProgressBarClasses(liElement, UPLOAD_INPROGRESS);\n                }\n                var clearIcon = liElement.querySelector('.' + REMOVE_ICON) ? liElement.querySelector('.' + REMOVE_ICON) :\n                    liElement.querySelector('.' + DELETE_ICON);\n                if (!isNullOrUndefined(clearIcon)) {\n                    clearIcon.classList.add(ABORT_ICON);\n                    clearIcon.setAttribute('title', this.localizedTexts('abort'));\n                    clearIcon.classList.remove(REMOVE_ICON);\n                }\n            }\n            if (!isNaN(Math.round((e.loaded / e.total) * 100)) && isNullOrUndefined(this.template) && metaData.file.statusCode !== '4') {\n                var progressVal = void 0;\n                var totalChunks = Math.ceil(metaData.file.size / this.asyncSettings.chunkSize) - 1;\n                if (this.asyncSettings.chunkSize && totalChunks) {\n                    progressVal = Math.round(metaData.chunkIndex / totalChunks * 100);\n                    this.changeProgressValue(liElement, progressVal.toString() + '%');\n                }\n            }\n            if (metaData.chunkIndex === 0) {\n                this.checkActionButtonStatus();\n            }\n        }\n        if (isNullOrUndefined(liElement.querySelector('.' + PAUSE_UPLOAD)) && isNullOrUndefined(this.template)\n            && isNullOrUndefined(liElement.querySelector('.' + DELETE_ICON))) {\n            this.pauseButton = this.createElement('span', { className: 'e-icons e-file-pause-btn', attrs: { 'tabindex': this.btnTabIndex } });\n            if (this.browserName === 'msie') {\n                this.pauseButton.classList.add('e-msie');\n            }\n            var abortIcon = liElement.querySelector('.' + ABORT_ICON);\n            abortIcon.parentElement.insertBefore(this.pauseButton, abortIcon);\n            this.pauseButton.setAttribute('title', this.localizedTexts('pause'));\n            this.pauseButton.addEventListener('click', function (e) {\n                _this.checkPausePlayAction(e);\n            }, false);\n        }\n    };\n    /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\n    /**\n     * It is used to convert bytes value into kilobytes or megabytes depending on the size based\n     * on [binary prefix](https://en.wikipedia.org/wiki/Binary_prefix).\n     *\n     * @param { number } bytes - Specifies the file size in bytes.\n     * @returns {string}\n     */\n    Uploader.prototype.bytesToSize = function (bytes) {\n        var i = -1;\n        if (!bytes) {\n            return '0.0 KB';\n        }\n        do {\n            bytes = bytes / 1024;\n            i++;\n        } while (bytes > 99);\n        if (i >= 2) {\n            bytes = bytes * 1024;\n            i = 1;\n        }\n        return Math.max(bytes, 0).toFixed(1) + ' ' + ['KB', 'MB'][i];\n    };\n    /**\n     * Allows you to sort the file data alphabetically based on its file name clearly.\n     *\n     * @param { FileList } filesData - specifies the files data for upload.\n     * @returns {File[]}\n     */\n    /* istanbul ignore next */\n    Uploader.prototype.sortFileList = function (filesData) {\n        filesData = filesData ? filesData : this.sortFilesList;\n        var files = filesData;\n        var fileNames = [];\n        for (var i = 0; i < files.length; i++) {\n            fileNames.push(files[i].name);\n        }\n        var sortedFileNames = fileNames.sort();\n        var sortedFilesData = [];\n        for (var _i = 0, sortedFileNames_1 = sortedFileNames; _i < sortedFileNames_1.length; _i++) {\n            var name_3 = sortedFileNames_1[_i];\n            for (var i = 0; i < files.length; i++) {\n                if (name_3 === files[i].name) {\n                    sortedFilesData.push(files[i]);\n                }\n            }\n        }\n        return sortedFilesData;\n    };\n    /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\n    /**\n     * Removes the component from the DOM and detaches all its related event handlers. Also it removes the attributes and classes.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Uploader.prototype.destroy = function () {\n        this.element.value = null;\n        this.clearTemplate();\n        this.clearAll();\n        this.unWireEvents();\n        this.unBindDropEvents();\n        if (this.multiple) {\n            this.element.removeAttribute('multiple');\n        }\n        if (!this.enabled) {\n            this.element.removeAttribute('disabled');\n        }\n        this.element.removeAttribute('accept');\n        this.setInitialAttributes();\n        var attributes = ['aria-label', 'directory', 'webkitdirectory', 'tabindex'];\n        for (var _i = 0, attributes_2 = attributes; _i < attributes_2.length; _i++) {\n            var key = attributes_2[_i];\n            this.element.removeAttribute(key);\n        }\n        if (!isNullOrUndefined(this.uploadWrapper)) {\n            this.uploadWrapper.parentElement.appendChild(this.element);\n            detach(this.uploadWrapper);\n        }\n        this.uploadWrapper = null;\n        this.uploadWrapper = null;\n        this.browseButton = null;\n        this.dropAreaWrapper = null;\n        this.dropZoneElement = null;\n        this.dropArea = null;\n        this.keyboardModule = null;\n        this.clearButton = null;\n        this.uploadButton = null;\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Allows you to call the upload process manually by calling save URL action.\n     * To process the selected files (added in upload queue), pass an empty argument otherwise\n     * upload the specific file based on its argument.\n     *\n     * @param { FileInfo | FileInfo[] } files - Specifies the files data for upload.\n     * @param {boolean} custom - Specifies whether the uploader is rendered with custom file list.\n     * @returns {void}\n     */\n    Uploader.prototype.upload = function (files, custom) {\n        var _this = this;\n        files = files ? files : this.filesData;\n        if (this.sequentialUpload && (this.isFirstFileOnSelection || custom)) {\n            this.sequenceUpload(files);\n        }\n        else {\n            var uploadFiles_1 = this.getFilesInArray(files);\n            var eventArgs = {\n                customFormData: [],\n                currentRequest: null,\n                cancel: false\n            };\n            this.trigger('beforeUpload', eventArgs, function (eventArgs) {\n                if (!eventArgs.cancel) {\n                    _this.uploadFiles(uploadFiles_1, custom);\n                }\n            });\n        }\n    };\n    Uploader.prototype.getFilesInArray = function (files) {\n        var uploadFiles = [];\n        if (files instanceof Array) {\n            uploadFiles = files;\n        }\n        else {\n            uploadFiles.push(files);\n        }\n        return uploadFiles;\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.serverReadFileBase64 = function (fileIndex, position, totalCount) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var file = _this.fileStreams[fileIndex].rawFile;\n            try {\n                var reader = new FileReader();\n                reader.onload = (function (args) {\n                    return function () {\n                        try {\n                            var contents = args.result;\n                            var data = contents ? contents.split(';base64,')[1] : null;\n                            resolve(data);\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    };\n                })(reader);\n                reader.readAsDataURL(file.slice(position, position + totalCount));\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    };\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    /* istanbul ignore next */\n    Uploader.prototype.uploadFileCount = function (ele) {\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        var files = this.filesData;\n        if (!files || files.length === 0) {\n            return -1;\n        }\n        var result = files.length;\n        return result;\n    };\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    /* istanbul ignore next */\n    Uploader.prototype.getFileRead = function (index, ele) {\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        var files = this.filesData;\n        if (!files || files.length === 0) {\n            return -1;\n        }\n        var file = files[index];\n        var fileCount = this.newFileRef++;\n        this.fileStreams[fileCount] = file;\n        return fileCount;\n    };\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    /* istanbul ignore next */\n    Uploader.prototype.getFileInfo = function (index, ele) {\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        var files = this.filesData;\n        if (!files || files.length === 0) {\n            return null;\n        }\n        var file = files[index];\n        if (!file) {\n            return null;\n        }\n        return this.filesData[index];\n    };\n    Uploader.prototype.uploadFiles = function (files, custom) {\n        var selectedFiles = [];\n        if (this.asyncSettings.saveUrl === '' || isNullOrUndefined(this.asyncSettings.saveUrl)) {\n            return;\n        }\n        if (!custom || isNullOrUndefined(custom)) {\n            if (!this.multiple) {\n                var file = [];\n                file.push(files[0]);\n                selectedFiles = this.filterfileList(file);\n            }\n            else {\n                selectedFiles = this.filterfileList(files);\n            }\n        }\n        else {\n            selectedFiles = files;\n        }\n        for (var i = 0; i < selectedFiles.length; i++) {\n            this.uploadFilesRequest(selectedFiles, i, custom);\n        }\n    };\n    Uploader.prototype.uploadFilesRequest = function (selectedFiles, i, custom) {\n        var _this = this;\n        var cloneFiles = [];\n        var chunkEnabled = this.checkChunkUpload();\n        var ajax = new Ajax(this.asyncSettings.saveUrl, 'POST', true, null);\n        ajax.emitError = false;\n        var getFileData;\n        var eventArgs = {\n            fileData: selectedFiles[i],\n            customFormData: [],\n            cancel: false\n        };\n        var formData = new FormData();\n        ajax.beforeSend = function (e) {\n            eventArgs.currentRequest = ajax.httpRequest;\n            _this.trigger('uploading', eventArgs, function (eventArgs) {\n                /* istanbul ignore next */\n                if (eventArgs.cancel) {\n                    _this.eventCancelByArgs(e, eventArgs, selectedFiles[i]);\n                }\n                _this.updateFormData(formData, eventArgs.customFormData);\n            });\n        };\n        if (selectedFiles[i].statusCode === '1') {\n            var name_4 = this.element.getAttribute('name');\n            formData.append(name_4, selectedFiles[i].rawFile, selectedFiles[i].name);\n            if (chunkEnabled && selectedFiles[i].size > this.asyncSettings.chunkSize) {\n                this.chunkUpload(selectedFiles[i], custom, i);\n            }\n            else {\n                ajax.onLoad = function (e) {\n                    if (eventArgs.cancel) {\n                        return {};\n                    }\n                    else {\n                        _this.uploadComplete(e, selectedFiles[i], custom);\n                        return {};\n                    }\n                };\n                ajax.onUploadProgress = function (e) {\n                    if (eventArgs.cancel) {\n                        return {};\n                    }\n                    else {\n                        _this.uploadInProgress(e, selectedFiles[i], custom, ajax);\n                        return {};\n                    }\n                };\n                /* istanbul ignore next */\n                ajax.onError = function (e) {\n                    _this.uploadFailed(e, selectedFiles[i]);\n                    return {};\n                };\n                ajax.send(formData);\n            }\n        }\n    };\n    Uploader.prototype.spliceFiles = function (liIndex) {\n        var liElement = this.fileList[liIndex];\n        var allFiles = this.getFilesData();\n        var nameElements = +liElement.getAttribute('data-files-count');\n        var startIndex = 0;\n        for (var i = 0; i < liIndex; i++) {\n            startIndex += (+this.fileList[i].getAttribute('data-files-count'));\n        }\n        var endIndex = (startIndex + nameElements) - 1;\n        for (var j = endIndex; j >= startIndex; j--) {\n            allFiles.splice(j, 1);\n        }\n    };\n    /* eslint-disable valid-jsdoc, jsdoc/require-param */\n    /**\n     * Remove the uploaded file from server manually by calling the remove URL action.\n     * If you pass an empty argument to this method, the complete file list can be cleared,\n     * otherwise remove the specific file based on its argument (“file_data”).\n     *\n     * @param { FileInfo | FileInfo[] } fileData - specifies the files data to remove from file list/server.\n     * @param { boolean } customTemplate - Set true if the component rendering with customize template.\n     * @param { boolean } removeDirectly - Set true if files remove without removing event.\n     * @param { boolean } postRawFile - Set false, to post file name only to the remove action.\n     * @returns {void}\n     */\n    Uploader.prototype.remove = function (fileData, customTemplate, removeDirectly, postRawFile, args) {\n        var _this = this;\n        if (isNullOrUndefined(postRawFile)) {\n            postRawFile = true;\n        }\n        var eventArgs = {\n            event: args,\n            cancel: false,\n            filesData: [],\n            customFormData: [],\n            postRawFile: postRawFile,\n            currentRequest: null\n        };\n        var beforeEventArgs = {\n            cancel: false,\n            customFormData: [],\n            currentRequest: null\n        };\n        this.trigger('beforeRemove', beforeEventArgs, function (beforeEventArgs) {\n            if (!beforeEventArgs.cancel) {\n                if (_this.isFormUpload()) {\n                    eventArgs.filesData = fileData;\n                    _this.trigger('removing', eventArgs, function (eventArgs) {\n                        if (!eventArgs.cancel) {\n                            var removingFiles = _this.getFilesInArray(fileData);\n                            var isLiRemoved = false;\n                            var liIndex = void 0;\n                            for (var _i = 0, removingFiles_1 = removingFiles; _i < removingFiles_1.length; _i++) {\n                                var data = removingFiles_1[_i];\n                                if (!isLiRemoved) {\n                                    liIndex = _this.fileList.indexOf(data.list);\n                                }\n                                if (liIndex > -1) {\n                                    var inputElement = !isNullOrUndefined(data.input) ? data.input : null;\n                                    if (inputElement) {\n                                        detach(inputElement);\n                                    }\n                                    _this.spliceFiles(liIndex);\n                                    detach(_this.fileList[liIndex]);\n                                    _this.fileList.splice(liIndex, 1);\n                                    isLiRemoved = true;\n                                    liIndex = -1;\n                                }\n                            }\n                        }\n                    });\n                }\n                else if (_this.isForm && (isNullOrUndefined(_this.asyncSettings.removeUrl) || _this.asyncSettings.removeUrl === '')) {\n                    eventArgs.filesData = _this.getFilesData();\n                    _this.trigger('removing', eventArgs, function (eventArgs) {\n                        if (!eventArgs.cancel) {\n                            _this.clearAll();\n                        }\n                    });\n                }\n                else {\n                    var removeFiles = [];\n                    fileData = !isNullOrUndefined(fileData) ? fileData : _this.filesData;\n                    if (fileData instanceof Array) {\n                        removeFiles = fileData;\n                    }\n                    else {\n                        removeFiles.push(fileData);\n                    }\n                    eventArgs.filesData = removeFiles;\n                    var removeUrl = _this.asyncSettings.removeUrl;\n                    var validUrl = (removeUrl === '' || isNullOrUndefined(removeUrl)) ? false : true;\n                    var _loop_5 = function (files) {\n                        var fileUploadedIndex = _this.uploadedFilesData.indexOf(files);\n                        if ((files.statusCode === '2' || files.statusCode === '4' || (files.statusCode === '0' &&\n                            fileUploadedIndex !== -1)) && validUrl) {\n                            _this.removeUploadedFile(files, eventArgs, removeDirectly, customTemplate);\n                        }\n                        else {\n                            if (!removeDirectly) {\n                                _this.trigger('removing', eventArgs, function (eventArgs) {\n                                    if (!eventArgs.cancel) {\n                                        _this.removeFilesData(files, customTemplate);\n                                    }\n                                });\n                            }\n                            else {\n                                _this.removeFilesData(files, customTemplate);\n                            }\n                        }\n                        if (args && !args.target.classList.contains(REMOVE_ICON)) {\n                            _this.checkActionComplete(false);\n                        }\n                    };\n                    for (var _i = 0, removeFiles_1 = removeFiles; _i < removeFiles_1.length; _i++) {\n                        var files = removeFiles_1[_i];\n                        _loop_5(files);\n                    }\n                }\n            }\n        });\n    };\n    /* eslint-enable valid-jsdoc, jsdoc/require-param */\n    /**\n     * Clear all the file entries from list that can be uploaded files or added in upload queue.\n     *\n     * @returns {void}\n     */\n    Uploader.prototype.clearAll = function () {\n        var _this = this;\n        if (isNullOrUndefined(this.listParent)) {\n            if (this.browserName !== 'msie') {\n                this.element.value = '';\n            }\n            this.filesData = [];\n            return;\n        }\n        var eventArgs = {\n            cancel: false,\n            filesData: this.filesData\n        };\n        this.trigger('clearing', eventArgs, function (eventArgs) {\n            if (!eventArgs.cancel) {\n                _this.clearData();\n                _this.actionCompleteCount = 0;\n                _this.count = -1;\n            }\n        });\n    };\n    /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\n    /**\n     * Get the data of files which are shown in file list.\n     *\n     * @param { number } index - specifies the file list item(li) index.\n     * @returns {FileInfo[]}\n     */\n    Uploader.prototype.getFilesData = function (index) {\n        if (isNullOrUndefined(index)) {\n            return this.filesData;\n        }\n        else {\n            return this.getSelectedFiles(index);\n        }\n    };\n    /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\n    /**\n     * Pauses the in-progress chunked upload based on the file data.\n     *\n     * @param { FileInfo | FileInfo[] } fileData - specifies the files data to pause from uploading.\n     * @param { boolean } custom - Set true if used custom UI.\n     * @returns {void}\n     */\n    Uploader.prototype.pause = function (fileData, custom) {\n        fileData = fileData ? fileData : this.filesData;\n        var fileDataFiles = this.getFilesInArray(fileData);\n        this.pauseUploading(fileDataFiles, custom);\n    };\n    Uploader.prototype.pauseUploading = function (fileData, custom) {\n        var files = this.getFiles(fileData);\n        for (var i = 0; i < files.length; i++) {\n            if (files[i].statusCode === '3') {\n                this.pauseUpload(this.getCurrentMetaData(files[i], null), null, custom);\n            }\n        }\n    };\n    Uploader.prototype.getFiles = function (fileData) {\n        var files = [];\n        if (!isNullOrUndefined(fileData) && !(fileData instanceof Array)) {\n            files.push(fileData);\n        }\n        else {\n            files = fileData;\n        }\n        return files;\n    };\n    /**\n     * Resumes the chunked upload that is previously paused based on the file data.\n     *\n     * @param { FileInfo | FileInfo[] } fileData - specifies the files data to resume the paused file.\n     * @param { boolean } custom - Set true if used custom UI.\n     * @returns {void}\n     */\n    Uploader.prototype.resume = function (fileData, custom) {\n        fileData = fileData ? fileData : this.filesData;\n        var fileDataFiles = this.getFilesInArray(fileData);\n        this.resumeFiles(fileDataFiles, custom);\n    };\n    Uploader.prototype.resumeFiles = function (fileData, custom) {\n        var files = this.getFiles(fileData);\n        for (var i = 0; i < files.length; i++) {\n            if (files[i].statusCode === '4') {\n                this.resumeUpload(this.getCurrentMetaData(files[i], null), null, custom);\n            }\n        }\n    };\n    /**\n     * Retries the canceled or failed file upload based on the file data.\n     *\n     * @param { FileInfo | FileInfo[] } fileData - specifies the files data to retry the canceled or failed file.\n     * @param { boolean } fromcanceledStage - Set true to retry from canceled stage and set false to retry from initial stage.\n     * @param {boolean} custom -Specifies whether the uploader is rendered with custom file list.\n     * @returns {void}\n     */\n    Uploader.prototype.retry = function (fileData, fromcanceledStage, custom) {\n        fileData = fileData ? fileData : this.filesData;\n        var fileDataFiles = this.getFilesInArray(fileData);\n        if (this.sequentialUpload && this.isFirstFileOnSelection) {\n            this.isFirstFileOnSelection = false;\n        }\n        this.retryFailedFiles(fileDataFiles, fromcanceledStage, custom);\n    };\n    Uploader.prototype.retryFailedFiles = function (fileData, fromcanceledStage, custom) {\n        var files = this.getFiles(fileData);\n        for (var i = 0; i < files.length; i++) {\n            if (files[i].statusCode === '5' || files[i].statusCode === '0') {\n                if (this.asyncSettings.chunkSize > 0 && this.getCurrentMetaData(files[i], null)) {\n                    this.retryUpload(this.getCurrentMetaData(files[i], null), fromcanceledStage);\n                }\n                else {\n                    var liElement = void 0;\n                    if (!custom) {\n                        liElement = this.fileList[this.filesData.indexOf(files[i])];\n                    }\n                    this.reloadcanceledFile(null, files[i], liElement, custom);\n                }\n            }\n        }\n    };\n    /**\n     * Stops the in-progress chunked upload based on the file data.\n     * When the file upload is canceled, the partially uploaded file is removed from server.\n     *\n     * @param { FileInfo | FileInfo[] } fileData - specifies the files data to cancel the progressing file.\n     * @returns {void}\n     */\n    Uploader.prototype.cancel = function (fileData) {\n        fileData = fileData ? fileData : this.filesData;\n        var cancelingFiles = this.getFilesInArray(fileData);\n        this.cancelUpload(cancelingFiles);\n    };\n    Uploader.prototype.cancelUpload = function (fileData) {\n        var files = this.getFiles(fileData);\n        if (this.asyncSettings.chunkSize > 0) {\n            for (var i = 0; i < files.length; i++) {\n                if (files[i].statusCode === '3') {\n                    var metaData = this.getCurrentMetaData(files[i], null);\n                    metaData.file.statusCode = '5';\n                    metaData.file.status = this.localizedTexts('fileUploadCancel');\n                    this.updateMetaData(metaData);\n                    this.showHideUploadSpinner(files[i]);\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < files.length; i++) {\n                if (files[i].statusCode === '3') {\n                    files[i].statusCode = '5';\n                    files[i].status = this.localizedTexts('fileUploadCancel');\n                    this.showHideUploadSpinner(files[i]);\n                }\n            }\n        }\n    };\n    Uploader.prototype.showHideUploadSpinner = function (files) {\n        var liElement = this.getLiElement(files);\n        if (!isNullOrUndefined(liElement) && isNullOrUndefined(this.template)) {\n            var spinnerTarget = liElement.querySelector('.' + ABORT_ICON);\n            createSpinner({ target: spinnerTarget, width: '20px' });\n            showSpinner(spinnerTarget);\n        }\n    };\n    __decorate([\n        Complex({ saveUrl: '', removeUrl: '' }, AsyncSettings)\n    ], Uploader.prototype, \"asyncSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Uploader.prototype, \"sequentialUpload\", void 0);\n    __decorate([\n        Property({})\n    ], Uploader.prototype, \"htmlAttributes\", void 0);\n    __decorate([\n        Property('')\n    ], Uploader.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Uploader.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(null)\n    ], Uploader.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Uploader.prototype, \"multiple\", void 0);\n    __decorate([\n        Property(true)\n    ], Uploader.prototype, \"autoUpload\", void 0);\n    __decorate([\n        Property(true)\n    ], Uploader.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Complex({}, ButtonsProps)\n    ], Uploader.prototype, \"buttons\", void 0);\n    __decorate([\n        Property('')\n    ], Uploader.prototype, \"allowedExtensions\", void 0);\n    __decorate([\n        Property(0)\n    ], Uploader.prototype, \"minFileSize\", void 0);\n    __decorate([\n        Property(30000000)\n    ], Uploader.prototype, \"maxFileSize\", void 0);\n    __decorate([\n        Property(null)\n    ], Uploader.prototype, \"dropArea\", void 0);\n    __decorate([\n        Collection([{}], FilesProp)\n    ], Uploader.prototype, \"files\", void 0);\n    __decorate([\n        Property(true)\n    ], Uploader.prototype, \"showFileList\", void 0);\n    __decorate([\n        Property(false)\n    ], Uploader.prototype, \"directoryUpload\", void 0);\n    __decorate([\n        Property('Default')\n    ], Uploader.prototype, \"dropEffect\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"rendering\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"beforeUpload\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"fileListRendering\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"selected\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"uploading\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"success\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"failure\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"removing\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"beforeRemove\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"clearing\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"progress\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"chunkSuccess\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"chunkFailure\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"chunkUploading\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"canceling\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"pausing\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"resuming\", void 0);\n    Uploader = __decorate([\n        NotifyPropertyChanges\n    ], Uploader);\n    return Uploader;\n}(Component));\nexport { Uploader };\n/* eslint-enable @typescript-eslint/no-explicit-any */\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}