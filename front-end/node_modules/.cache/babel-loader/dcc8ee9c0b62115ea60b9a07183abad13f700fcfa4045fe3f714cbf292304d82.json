{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'InstrutoresAdmin',\n  data() {\n    return {\n      URL: \"http://localhost:4000/instrutores\",\n      instrutores: [],\n      nome: '',\n      cpf: '',\n      editar: false\n    };\n  },\n  methods: {\n    getAllInstrutores() {\n      axios.get(`${this.URL}`).then(response => {\n        this.instrutores = response.data;\n        console.log(this.instrutores);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    createInstrutor() {\n      const instrutor = {\n        nome_instrutor: this.nome,\n        cpf_instrutor: this.cpf\n      };\n      console.log(instrutor);\n      axios.post(`${this.URL}`, instrutor).then(response => {\n        console.log(response);\n        this.getAllInstrutores();\n      });\n      this.limpaDadosFormulario();\n    },\n    deleteInstrutor(id) {\n      axios.delete(this.URL + \"/delete/\" + id).then(() => {\n        this.getAllInstrutores();\n      });\n    },\n    carregarDadosIntrutor(id) {\n      this.editar = true;\n      axios.get(`${this.URL}/alunos/getone/` + id).then(response => {\n        const aluno = response.data[0];\n        this.alunoId = aluno.id_aluno;\n        this.nome = aluno.nome_aluno;\n        this.cpf = aluno.cpf_aluno;\n        this.dataNasc = aluno.datanasc_formatada;\n        this.plano = aluno.id_plano;\n        this.turma = aluno.id_turma;\n        this.diaPag = aluno.diapag_aluno;\n        console.log(response.data[0]);\n      });\n    },\n    limpaDadosFormulario() {\n      this.instrutorId = 0;\n      this.nome = '';\n      this.cpf = '';\n      this.editar = false;\n    }\n  },\n  mounted() {\n    this.getAllInstrutores();\n  }\n};","map":{"version":3,"mappings":"AAkDA,OAAOA,KAAI,MAAO,OAAO;AAGzB,eAAe;EACXC,IAAI,EAAE,kBAAkB;EACxBC,IAAI,GAAG;IACH,OAAM;MACFC,GAAG,EAAE,mCAAmC;MACxCC,WAAW,EAAE,EAAE;MACfC,IAAI,EAAE,EAAE;MACRC,GAAG,EAAE,EAAE;MACPC,MAAM,EAAE;IACZ;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,iBAAiB,GAAG;MAChBT,KAAK,CAACU,GAAG,CAAE,GAAE,IAAI,CAACP,GAAI,EAAC,CAAC,CAACQ,IAAI,CAACC,QAAO,IAAK;QACtC,IAAI,CAACR,WAAU,GAAIQ,QAAQ,CAACV,IAAG;QAC/BW,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,WAAW,CAAC;MACjC,CAAC,EACAW,KAAK,CAACC,KAAI,IAAK;QACZH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;MACtB,CAAC;IACL,CAAC;IACDC,eAAe,GAAE;MACb,MAAMC,SAAQ,GAAI;QACdC,cAAc,EAAE,IAAI,CAACd,IAAI;QACzBe,aAAa,EAAE,IAAI,CAACd;MAExB;MACAO,OAAO,CAACC,GAAG,CAACI,SAAS,CAAC;MACtBlB,KAAK,CAACqB,IAAI,CAAE,GAAE,IAAI,CAAClB,GAAI,EAAC,EAAEe,SAAS,CAAC,CAACP,IAAI,CAACC,QAAO,IAAK;QAClDC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrB,IAAI,CAACH,iBAAiB,EAAE;MAC5B,CAAC;MACD,IAAI,CAACa,oBAAoB,EAAC;IAC9B,CAAC;IACDC,eAAe,CAACC,EAAE,EAAE;MAChBxB,KAAK,CAACyB,MAAM,CAAC,IAAI,CAACtB,GAAG,GAAC,UAAU,GAACqB,EAAE,CAAC,CAACb,IAAI,CAAC,MAAI;QAC1C,IAAI,CAACF,iBAAiB,EAAC;MAC3B,CAAC;IACL,CAAC;IACDiB,qBAAqB,CAACF,EAAE,EAAC;MACrB,IAAI,CAACjB,MAAK,GAAI,IAAI;MAClBP,KAAK,CAACU,GAAG,CAAE,GAAE,IAAI,CAACP,GAAI,iBAAgB,GAACqB,EAAE,CAAC,CAACb,IAAI,CAACC,QAAO,IAAK;QACxD,MAAMe,KAAI,GAAIf,QAAQ,CAACV,IAAI,CAAC,CAAC;QAC7B,IAAI,CAAC0B,OAAM,GAAID,KAAK,CAACE,QAAO;QAC5B,IAAI,CAACxB,IAAG,GAAIsB,KAAK,CAACG,UAAS;QAC3B,IAAI,CAACxB,GAAE,GAAIqB,KAAK,CAACI,SAAQ;QACzB,IAAI,CAACC,QAAO,GAAIL,KAAK,CAACM,kBAAiB;QACvC,IAAI,CAACC,KAAI,GAAIP,KAAK,CAACQ,QAAO;QAC1B,IAAI,CAACC,KAAI,GAAIT,KAAK,CAACU,QAAO;QAC1B,IAAI,CAACC,MAAK,GAAIX,KAAK,CAACY,YAAW;QAC/B1B,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACV,IAAI,CAAC,CAAC,CAAC,CAAC;MACjC,CAAC;IACL,CAAC;IACDoB,oBAAoB,GAAE;MAClB,IAAI,CAACkB,WAAU,GAAI,CAAC;MACpB,IAAI,CAACnC,IAAG,GAAI,EAAE;MACd,IAAI,CAACC,GAAE,GAAI,EAAE;MACb,IAAI,CAACC,MAAK,GAAI,KAAK;IACvB;EACJ,CAAC;EACDkC,OAAO,GAAG;IACN,IAAI,CAAChC,iBAAiB,EAAE;EAC5B;AACJ","names":["axios","name","data","URL","instrutores","nome","cpf","editar","methods","getAllInstrutores","get","then","response","console","log","catch","error","createInstrutor","instrutor","nome_instrutor","cpf_instrutor","post","limpaDadosFormulario","deleteInstrutor","id","delete","carregarDadosIntrutor","aluno","alunoId","id_aluno","nome_aluno","cpf_aluno","dataNasc","datanasc_formatada","plano","id_plano","turma","id_turma","diaPag","diapag_aluno","instrutorId","mounted"],"sourceRoot":"","sources":["C:\\Users\\Pedro Japa\\Desktop\\gitHubRepositories\\thaiweb\\front-end\\src\\components\\admin\\InstrutorAdmin.vue"],"sourcesContent":["<template>\r\n    <div class=\"instrutor-admin\">\r\n        <h3>Gerênciamento de Instrutores</h3>\r\n        <form class=\"row g-3\">\r\n            <div class=\"col-md-6\">\r\n                <label for=\"inputEmail4\" class=\"form-label\">Nome do Instrutor</label>\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Nome do Instrutor\" v-model=\"nome\">\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <label for=\"inputZip\" class=\"form-label\">CPF do Instrutor</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"inputZip\" placeholder=\"123.456.789-10\" v-model=\"cpf\">\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <button type=\"button\" class=\"btn btn-primary\" @click=\"createInstrutor()\">+ SALVAR</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <hr/>\r\n    <div class=\"administradores-table\">\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">ID</th>\r\n                    <th scope=\"col\">Nome</th>\r\n                    <th scope=\"col\">CPF</th>\r\n                    <th scope=\"col\">Ações</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody class=\"table-group-divider\">\r\n                <tr v-for=\"instrutor in instrutores\" :key=\"instrutor.id_instrutor\">\r\n                    <th scope=\"row\">{{ instrutor.id_instrutor }}</th>\r\n                    <td>{{ instrutor.nome_instrutor }}</td>\r\n                    <td>{{ instrutor.cpf_instrutor }}</td>\r\n                    <td>\r\n                        <button type=\"button\" class=\"btn btn-success\">\r\n                            <i class=\"fa fa-pencil\"> </i>\r\n                             Editar\r\n                        </button>\r\n                        <button type=\"button\" class=\"btn btn-danger\" @click=\"deleteInstrutor(instrutor.id_instrutor)\">\r\n                            <i class=\"fa fa-trash\"> </i>\r\n                             Excluir\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\n\r\nexport default {\r\n    name: 'InstrutoresAdmin',\r\n    data() {\r\n        return{\r\n            URL: \"http://localhost:4000/instrutores\",\r\n            instrutores: [],\r\n            nome: '',\r\n            cpf: '',\r\n            editar: false,\r\n        }\r\n    },\r\n    methods: {\r\n        getAllInstrutores() {\r\n            axios.get(`${this.URL}`).then(response => {\r\n                this.instrutores = response.data\r\n                console.log(this.instrutores);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        },\r\n        createInstrutor(){\r\n            const instrutor = {\r\n                nome_instrutor: this.nome,\r\n                cpf_instrutor: this.cpf,\r\n                \r\n            }\r\n            console.log(instrutor);\r\n            axios.post(`${this.URL}`, instrutor).then(response => {\r\n                console.log(response);\r\n                this.getAllInstrutores();\r\n            })\r\n            this.limpaDadosFormulario()\r\n        },\r\n        deleteInstrutor(id) {\r\n            axios.delete(this.URL+\"/delete/\"+id).then(()=>{\r\n                this.getAllInstrutores()\r\n            })\r\n        },\r\n        carregarDadosIntrutor(id){\r\n            this.editar = true;\r\n            axios.get(`${this.URL}/alunos/getone/`+id).then(response => {\r\n                const aluno = response.data[0]\r\n                this.alunoId = aluno.id_aluno\r\n                this.nome = aluno.nome_aluno\r\n                this.cpf = aluno.cpf_aluno\r\n                this.dataNasc = aluno.datanasc_formatada\r\n                this.plano = aluno.id_plano\r\n                this.turma = aluno.id_turma\r\n                this.diaPag = aluno.diapag_aluno\r\n                console.log(response.data[0]);\r\n            })\r\n        },\r\n        limpaDadosFormulario(){\r\n            this.instrutorId = 0;\r\n            this.nome = '';\r\n            this.cpf = '';\r\n            this.editar = false;\r\n        },\r\n    },\r\n    mounted() {\r\n        this.getAllInstrutores();\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}