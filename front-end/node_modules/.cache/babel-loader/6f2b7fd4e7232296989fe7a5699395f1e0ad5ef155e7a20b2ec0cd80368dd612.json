{"ast":null,"code":"export default {\n  name: 'MensalidadesAtrasadas',\n  data() {\n    return {\n      URL: \"http://localhost:4000\",\n      recebidas: [],\n      nome: '',\n      mesAtual: 0\n    };\n  },\n  methods: {\n    //BUSCA POR NOME (OBS: TEM QUE VERIFICAR SE É PLANO DE MENSALIDADE)\n    buscar() {\n      axios.get(`${this.URL}/alunos/getnomemensalidade/` + this.nome).then(response => {\n        this.alunos = response.data;\n      });\n      this.limpaDados();\n    },\n    //RETORNAR TODOS ALUNOS COM MENSALIDADE EM ATRASO\n    getAllAtrasados() {},\n    pegarMesAtual() {\n      const data = new Date();\n      const mes = String(data.getMonth() + 1).padStart(2, '0');\n      this.mesAtual = mes;\n    }\n  },\n  mounted() {\n    this.pegarMesAtual();\n  }\n};","map":{"version":3,"names":["name","data","URL","recebidas","nome","mesAtual","methods","buscar","axios","get","then","response","alunos","limpaDados","getAllAtrasados","pegarMesAtual","Date","mes","String","getMonth","padStart","mounted"],"sources":["C:\\Users\\Barbára Tagliari\\Desktop\\thaiweb\\front-end\\src\\components\\financeiro\\mensalidadesAtrasadas.vue"],"sourcesContent":["<template>\r\n    <h3>Mensalidades em Atraso</h3>\r\n    <form class=\"form-inline\">\r\n        <h5>Busque pelo o nome do aluno que deseja verificar!</h5>\r\n        <div class=\"form-group mb-2\">\r\n            <label for=\"inputZip\" class=\"form-label\">Digite o nome do aluno</label >\r\n            <input type=\"text\" class=\"form-control\" v-model=\"nome\">\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-primary\" @click=\"buscar()\">\r\n            <i class=\"fa fa-search\"></i> BUSCAR</button>\r\n    </form>\r\n    <br>\r\n    <div class=\"alunos-table\">\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Nome</th>\r\n                    <th scope=\"col\">CPF</th>\r\n                    <th scope=\"col\">Plano</th>\r\n                    <th scope=\"col\">Valor Plano</th>\r\n                    <th scope=\"col\">Dia Vencimento</th>\r\n                    <th scope=\"col\">Total à Pagar</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody class=\"table-group-divider\">\r\n                <tr v-for=\"aluno in alunos\" :key=\"aluno.id_aluno\">\r\n                    <th scope=\"row\">{{ aluno.nome_aluno }}</th>\r\n                    <td>{{ aluno.cpf_aluno }}</td>\r\n                    <td>{{ aluno.nome_plano }}</td>\r\n                    <td>R${{ aluno.valor_plano.toFixed(2) }}</td>\r\n                    <td>{{ aluno.diapag_aluno }}</td>\r\n                    <td>R${{ aluno.valor_plano.toFixed(2) }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n    name: 'MensalidadesAtrasadas',\r\n    data(){\r\n        return {\r\n            URL: \"http://localhost:4000\",\r\n            recebidas: [],\r\n            nome: '',\r\n            mesAtual: 0,\r\n        }\r\n    },\r\n    methods: {\r\n        //BUSCA POR NOME (OBS: TEM QUE VERIFICAR SE É PLANO DE MENSALIDADE)\r\n        buscar() {\r\n            axios.get(`${this.URL}/alunos/getnomemensalidade/`+this.nome).then(response => {\r\n                this.alunos = response.data\r\n            })\r\n            this.limpaDados()\r\n        },\r\n        //RETORNAR TODOS ALUNOS COM MENSALIDADE EM ATRASO\r\n        getAllAtrasados() {\r\n            \r\n        },\r\n        pegarMesAtual() {\r\n            const data = new Date()\r\n            const mes = String(data.getMonth() + 1).padStart(2, '0')\r\n            this.mesAtual = mes\r\n        },\r\n    },\r\n    mounted() {\r\n        this.pegarMesAtual();\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"AAwCA,eAAe;EACXA,IAAI,EAAE,uBAAuB;EAC7BC,IAAIA,CAAA,EAAE;IACF,OAAO;MACHC,GAAG,EAAE,uBAAuB;MAC5BC,SAAS,EAAE,EAAE;MACbC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE;IACd;EACJ,CAAC;EACDC,OAAO,EAAE;IACL;IACAC,MAAMA,CAAA,EAAG;MACLC,KAAK,CAACC,GAAG,CAAE,GAAE,IAAI,CAACP,GAAI,6BAA4B,GAAC,IAAI,CAACE,IAAI,CAAC,CAACM,IAAI,CAACC,QAAO,IAAK;QAC3E,IAAI,CAACC,MAAK,GAAID,QAAQ,CAACV,IAAG;MAC9B,CAAC;MACD,IAAI,CAACY,UAAU,EAAC;IACpB,CAAC;IACD;IACAC,eAAeA,CAAA,EAAG,CAElB,CAAC;IACDC,aAAaA,CAAA,EAAG;MACZ,MAAMd,IAAG,GAAI,IAAIe,IAAI,EAAC;MACtB,MAAMC,GAAE,GAAIC,MAAM,CAACjB,IAAI,CAACkB,QAAQ,EAAC,GAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG;MACvD,IAAI,CAACf,QAAO,GAAIY,GAAE;IACtB;EACJ,CAAC;EACDI,OAAOA,CAAA,EAAG;IACN,IAAI,CAACN,aAAa,EAAE;EACxB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}