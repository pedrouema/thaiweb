{"ast":null,"code":"/*\r\n * Consistent and stable sort function across JavaScript platforms\r\n *\r\n * Inconsistent sorts can cause SSR problems between client and server\r\n * such as in <b-table> if sortBy is applied to the data on server side render.\r\n * Chrome and V8 native sorts are inconsistent/unstable\r\n *\r\n * This function uses native sort with fallback to index compare when the a and b\r\n * compare returns 0\r\n *\r\n * Algorithm based on:\r\n * https://stackoverflow.com/questions/1427608/fast-stable-sorting-algorithm-implementation-in-javascript/45422645#45422645\r\n *\r\n * @param {array} array to sort\r\n * @param {function} sort compare function\r\n * @return {array}\r\n */\nexport var stableSort = function stableSort(array, compareFn) {\n  // Using `.bind(compareFn)` on the wrapped anonymous function improves\n  // performance by avoiding the function call setup. We don't use an arrow\n  // function here as it binds `this` to the `stableSort` context rather than\n  // the `compareFn` context, which wouldn't give us the performance increase.\n  return array.map(function (a, index) {\n    return [index, a];\n  }).sort(function (a, b) {\n    return this(a[1], b[1]) || a[0] - b[0];\n  }.bind(compareFn)).map(function (e) {\n    return e[1];\n  });\n};","map":{"version":3,"names":["stableSort","array","compareFn","map","a","index","sort","b","bind","e"],"sources":["C:/Users/Pedro Uema/Desktop/thaiweb/front-end/node_modules/bootstrap-vue/esm/utils/stable-sort.js"],"sourcesContent":["/*\r\n * Consistent and stable sort function across JavaScript platforms\r\n *\r\n * Inconsistent sorts can cause SSR problems between client and server\r\n * such as in <b-table> if sortBy is applied to the data on server side render.\r\n * Chrome and V8 native sorts are inconsistent/unstable\r\n *\r\n * This function uses native sort with fallback to index compare when the a and b\r\n * compare returns 0\r\n *\r\n * Algorithm based on:\r\n * https://stackoverflow.com/questions/1427608/fast-stable-sorting-algorithm-implementation-in-javascript/45422645#45422645\r\n *\r\n * @param {array} array to sort\r\n * @param {function} sort compare function\r\n * @return {array}\r\n */\r\nexport var stableSort = function stableSort(array, compareFn) {\r\n  // Using `.bind(compareFn)` on the wrapped anonymous function improves\r\n  // performance by avoiding the function call setup. We don't use an arrow\r\n  // function here as it binds `this` to the `stableSort` context rather than\r\n  // the `compareFn` context, which wouldn't give us the performance increase.\r\n  return array.map(function (a, index) {\r\n    return [index, a];\r\n  }).sort(function (a, b) {\r\n    return this(a[1], b[1]) || a[0] - b[0];\r\n  }.bind(compareFn)).map(function (e) {\r\n    return e[1];\r\n  });\r\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIA,UAAU,GAAG,SAASA,UAAUA,CAACC,KAAK,EAAEC,SAAS,EAAE;EAC5D;EACA;EACA;EACA;EACA,OAAOD,KAAK,CAACE,GAAG,CAAC,UAAUC,CAAC,EAAEC,KAAK,EAAE;IACnC,OAAO,CAACA,KAAK,EAAED,CAAC,CAAC;EACnB,CAAC,CAAC,CAACE,IAAI,CAAC,UAAUF,CAAC,EAAEG,CAAC,EAAE;IACtB,OAAO,IAAI,CAACH,CAAC,CAAC,CAAC,CAAC,EAAEG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIH,CAAC,CAAC,CAAC,CAAC,GAAGG,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC,CAACC,IAAI,CAACN,SAAS,CAAC,CAAC,CAACC,GAAG,CAAC,UAAUM,CAAC,EAAE;IAClC,OAAOA,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}