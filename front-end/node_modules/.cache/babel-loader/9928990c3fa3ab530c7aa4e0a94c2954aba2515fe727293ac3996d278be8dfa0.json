{"ast":null,"code":"import axios from 'axios';\nimport AlunoAdmin from './AlunoAdmin.vue';\nexport default {\n  name: 'PlanoTreinoAdmin',\n  components: {\n    AlunoAdmin\n  },\n  data() {\n    return {\n      URL: \"http://localhost:4000\",\n      planos: [],\n      planoId: 0,\n      nome: '',\n      valor: '',\n      editar: false,\n      tipomensal: false,\n      tipoavulso: false,\n      tipoplano: ''\n    };\n  },\n  methods: {\n    getAllPlanos() {\n      axios.get(`${this.URL}/planos`).then(response => {\n        this.planos = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    createPlano() {\n      if (this.tipomensal) this.tipoplano = \"Mensalidade\";\n      if (this.tipoavulso) this.tipoplano = \"Avulso\";\n      const plano = {\n        nome_plano: this.nome,\n        valor_plano: this.valor,\n        tipo_mensal: this.tipomensal,\n        tipo_avulso: this.tipoavulso,\n        tipo_plano: this.tipoplano\n      };\n      axios.post(`${this.URL}/planos`, plano).then(response => {\n        this.getAllPlanos();\n      });\n      this.limpaDadosFormulario();\n    },\n    carregarDadosPlano(id) {\n      this.editar = true;\n      axios.get(`${this.URL}/planos/getone/` + id).then(response => {\n        const plano = response.data[0];\n        this.planoId = plano.id_plano;\n        this.nome = plano.nome_plano;\n        this.valor = plano.valor_plano;\n        this.tipomensal = plano.tipo_mensal;\n        this.tipoavulso = plano.tipo_avulso;\n      });\n    },\n    salvarDados() {\n      if (this.tipomensal) this.tipoplano = \"Mensalidade\";\n      if (this.tipoavulso) this.tipoplano = \"Avulso\";\n      const plano = {\n        nome_plano: this.nome,\n        valor_plano: this.valor,\n        tipo_mensal: this.tipomensal,\n        tipo_avulso: this.tipoavulso,\n        tipo_plano: this.tipoplano\n      };\n      console.log(plano);\n      axios.put(`${this.URL}/planos/${this.planoId}`, plano).then(response => {\n        this.getAllPlanos();\n      });\n      this.limpaDadosFormulario();\n    },\n    deletePlano(id) {\n      axios.delete(this.URL + \"/planos/delete/\" + id).then(() => {\n        this.getAllPlanos();\n      });\n    },\n    limpaDadosFormulario() {\n      this.planoId = 0;\n      this.nome = '';\n      this.valor = '';\n      this.editar = false;\n      this.tipomensal = false;\n      this.tipoavulso = false;\n    }\n  },\n  mounted() {\n    this.getAllPlanos();\n  }\n};","map":{"version":3,"names":["axios","AlunoAdmin","name","components","data","URL","planos","planoId","nome","valor","editar","tipomensal","tipoavulso","tipoplano","methods","getAllPlanos","get","then","response","catch","error","console","log","createPlano","plano","nome_plano","valor_plano","tipo_mensal","tipo_avulso","tipo_plano","post","limpaDadosFormulario","carregarDadosPlano","id","id_plano","salvarDados","put","deletePlano","delete","mounted"],"sources":["C:\\Users\\Pedro Uema\\Desktop\\thaiweb\\front-end\\src\\components\\admin\\PlanoTreinoAdmin.vue"],"sourcesContent":["<template>\r\n    <div class=\"plano-treino-admin\">\r\n        <h3>Gerenciamento de Planos</h3>\r\n        <form class=\"row g-3\">\r\n            <div class=\"col-md-6\">\r\n                <label for=\"inputEmail4\" class=\"form-label\">Nome do Plano</label>\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"ex: Grupo 3x, 18:00\" v-model=\"nome\">\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <label for=\"inputZip\" class=\"form-label\">Valor do Plano</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"inputZip\" placeholder=\"ex: R$99.99\" v-model=\"valor\">\r\n            </div>\r\n        </form>\r\n        <br>\r\n        <label for=\"inputZip\" class=\"form-label\">Selecione o tipo de plano: </label><br>\r\n        <div class=\"form-check form-check-inline\">\r\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" value=\"option1\" v-model=\"tipomensal\"/>\r\n            <label class=\"form-check-label\" for=\"inlineCheckbox1\">Mensalidade</label>\r\n        </div>\r\n        <div class=\"form-check form-check-inline\">\r\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" value=\"option2\" v-model=\"tipoavulso\"/>\r\n            <label class=\"form-check-label\" for=\"inlineCheckbox2\">Avulso</label>\r\n        </div>\r\n        <br>\r\n        <br>\r\n        <div class=\"col-12\">\r\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"createPlano()\" v-show=\"!editar\">+ SALVAR</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"salvarDados()\" v-show=\"editar\">+ EDITAR</button>\r\n            <button  type=\"button\" class=\"btn btn-danger\" @click=\"limpaDadosFormulario()\" >CANCELAR</button>\r\n        </div>\r\n    </div>\r\n    <hr/>\r\n    <div class=\"plano-treino-table\">\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Nome do Plano</th>\r\n                    <th scope=\"col\">Tipo</th>\r\n                    <th scope=\"col\">Valor do Plano</th>\r\n                    <th scope=\"col\">Ações</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody class=\"table-group-divider\">\r\n                <tr v-for=\"plano in planos\" :key=\"plano.id_plano\">\r\n                    <th scope=\"row\">{{ plano.nome_plano }}</th>\r\n                    <td>{{ plano.tipo_plano }}</td>\r\n                    <td>R$ {{ plano.valor_plano.toFixed(2) }}</td>\r\n                    <td>\r\n                        <button type=\"button\" class=\"btn btn-success\" @click=\"carregarDadosPlano(plano.id_plano)\">\r\n                            <i class=\"fa fa-pencil\"> </i>\r\n                             Editar\r\n                        </button>\r\n                        <button type=\"button\" class=\"btn btn-danger\" @click=\"deletePlano(plano.id_plano)\">\r\n                            <i class=\"fa fa-trash\"> </i>\r\n                             Excluir\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport AlunoAdmin from './AlunoAdmin.vue'\r\n\r\nexport default {\r\n    name: 'PlanoTreinoAdmin',\r\n    components: { AlunoAdmin },\r\n    data() {\r\n        return{\r\n            URL: \"http://localhost:4000\",\r\n            planos: [],\r\n            planoId: 0,\r\n            nome: '',\r\n            valor: '',\r\n            editar: false,\r\n            tipomensal: false,\r\n            tipoavulso: false,\r\n            tipoplano: ''\r\n        }\r\n    },\r\n    methods: {\r\n        getAllPlanos() {\r\n            axios.get(`${this.URL}/planos`).then(response => {\r\n                this.planos = response.data\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        },\r\n        createPlano(){\r\n            if(this.tipomensal)\r\n                this.tipoplano = \"Mensalidade\"\r\n            if(this.tipoavulso)\r\n                this.tipoplano = \"Avulso\"\r\n            const plano = {\r\n                nome_plano: this.nome,\r\n                valor_plano: this.valor,\r\n                tipo_mensal: this.tipomensal,\r\n                tipo_avulso: this.tipoavulso,\r\n                tipo_plano: this.tipoplano\r\n            }\r\n            axios.post(`${this.URL}/planos`, plano).then(response => {\r\n                this.getAllPlanos();\r\n            })\r\n            this.limpaDadosFormulario()\r\n        },\r\n        carregarDadosPlano(id){\r\n            this.editar = true;\r\n            axios.get(`${this.URL}/planos/getone/`+id).then(response => {\r\n                const plano = response.data[0]\r\n                this.planoId = plano.id_plano\r\n                this.nome = plano.nome_plano\r\n                this.valor = plano.valor_plano\r\n                this.tipomensal = plano.tipo_mensal\r\n                this.tipoavulso = plano.tipo_avulso\r\n            })\r\n        },\r\n        salvarDados(){\r\n            if(this.tipomensal)\r\n                this.tipoplano = \"Mensalidade\"\r\n            if(this.tipoavulso)\r\n                this.tipoplano = \"Avulso\"\r\n            const plano = {\r\n                nome_plano: this.nome,\r\n                valor_plano: this.valor,\r\n                tipo_mensal: this.tipomensal,\r\n                tipo_avulso: this.tipoavulso,\r\n                tipo_plano: this.tipoplano\r\n            }\r\n            console.log(plano);\r\n            axios.put(`${this.URL}/planos/${this.planoId}`, plano).then(response => {\r\n                this.getAllPlanos();\r\n            });\r\n            this.limpaDadosFormulario();\r\n        },\r\n        deletePlano(id) {\r\n            axios.delete(this.URL+\"/planos/delete/\"+id).then(()=>{\r\n                this.getAllPlanos()\r\n            })\r\n            \r\n        },\r\n        limpaDadosFormulario(){\r\n            this.planoId = 0;\r\n            this.nome = '';\r\n            this.valor = '';\r\n            this.editar = false;\r\n            this.tipomensal = false;\r\n            this.tipoavulso = false;\r\n        },\r\n    },\r\n    mounted() {\r\n        this.getAllPlanos();\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}