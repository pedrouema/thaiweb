{"ast":null,"code":"import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"header\"\n};\nconst _hoisted_2 = {\n  class: \"title\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_UserDropdown = _resolveComponent(\"UserDropdown\");\n  return _openBlock(), _createElementBlock(\"header\", _hoisted_1, [!$props.hideToggle ? (_openBlock(), _createElementBlock(\"a\", {\n    key: 0,\n    class: \"toggle\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleMenu && $options.toggleMenu(...args))\n  }, [_createElementVNode(\"i\", {\n    class: _normalizeClass([\"fa fa-lg\", $options.icon])\n  }, null, 2 /* CLASS */)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"h1\", _hoisted_2, _toDisplayString($props.title), 1 /* TEXT */), !$props.hideUserDropdown ? (_openBlock(), _createBlock(_component_UserDropdown, {\n    key: 1\n  })) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;EACYA,KAAK,EAAC;AAAQ;;EAIdA,KAAK,EAAC;AAAO;;;uBAJrBC,oBAQS,UARTC,UAQS,IAPwCC,iBAAU,kBAAvDF,oBAEI;;IAFDD,KAAK,EAAC,QAAQ;IAAEI,OAAK,yCAAEC,mDAAU;MAChCC,oBAAsC;IAAnCN,KAAK,mBAAC,UAAU,EAASK,aAAI;kEAEpCC,oBAEK,MAFLC,UAEK,mBADEJ,YAAK,mBAESA,uBAAgB,kBAArCK,aAAyCC;IAAAC;EAAA","names":["class","_createElementBlock","_hoisted_1","$props","onClick","$options","_createElementVNode","_hoisted_2","_createBlock","_component_UserDropdown","key"],"sourceRoot":"","sources":["C:\\Users\\Pedro Japa\\Desktop\\gitHubRepositories\\thaiweb\\front-end\\src\\components\\template\\Header.vue"],"sourcesContent":["<template>\n    <header class=\"header\">\n        <a class=\"toggle\" @click=\"toggleMenu\" v-if=\"!hideToggle\">\n            <i class=\"fa fa-lg\" :class=\"icon\"></i>\n        </a>\n        <h1 class=\"title\">\n            {{ title }}\n        </h1>\n        <UserDropdown v-if=\"!hideUserDropdown\" />\n    </header>\n</template>\n\n<script>\nimport UserDropdown from './UserDropdown'\n\nexport default {\n    name: 'Header',\n    components: { UserDropdown },\n    props: {\n        title: String,\n        hideToggle: Boolean,\n        hideUserDropdown: Boolean\n    },\n    computed: {\n        icon() {\n            return this.$store.state.isMenuVisible ? \"fa-angle-left\" : \"fa-angle-down\"\n        }\n    },\n    methods: {\n        toggleMenu() {\n            this.$store.commit('toggleMenu')\n        }\n    }\n}\n</script>\n\n<style>\n    .header {\n        grid-area: header;\n        background: linear-gradient(to right, #1e469a, #49a7c1);\n\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .title {\n        font-size: 1.2rem;\n        color: #fff;\n        font-weight: 100;\n        flex-grow: 1;\n        text-align: center;\n    }\n\n    .title a {\n        color: #FFF;\n        text-decoration: none;\n    }\n\n    .title a:hover {\n        color: #FFF;\n        text-decoration: none;\n    }\n\n    header.header > a.toggle {\n        width: 60px;\n        height: 100%;\n        color: #fff;\n        justify-self: flex-start;\n        text-decoration: none;\n\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    header.header > a.toggle:hover {\n        color: #fff;\n        background-color: rgba(0, 0, 0, 0.2);\n    }\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}