{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { extend } from '../vue';\nimport { arrayIncludes } from '../utils/array';\nimport { keys } from '../utils/object';\nimport { getEventRoot } from '../utils/get-event-root'; // --- Constants ---\n\nvar PROP = '$_rootListeners'; // --- Mixin ---\n// @vue/component\n\nexport var listenOnRootMixin = extend({\n  computed: {\n    bvEventRoot: function bvEventRoot() {\n      return getEventRoot(this);\n    }\n  },\n  created: function created() {\n    // Define non-reactive property\n    // Object of arrays, keyed by event name,\n    // where value is an array of callbacks\n    this[PROP] = {};\n  },\n  beforeDestroy: function beforeDestroy() {\n    var _this = this;\n\n    // Unregister all registered listeners\n    keys(this[PROP] || {}).forEach(function (event) {\n      _this[PROP][event].forEach(function (callback) {\n        _this.listenOffRoot(event, callback);\n      });\n    });\n    this[PROP] = null;\n  },\n  methods: {\n    registerRootListener: function registerRootListener(event, callback) {\n      if (this[PROP]) {\n        this[PROP][event] = this[PROP][event] || [];\n        if (!arrayIncludes(this[PROP][event], callback)) {\n          this[PROP][event].push(callback);\n        }\n      }\n    },\n    unregisterRootListener: function unregisterRootListener(event, callback) {\n      if (this[PROP] && this[PROP][event]) {\n        this[PROP][event] = this[PROP][event].filter(function (cb) {\n          return cb !== callback;\n        });\n      }\n    },\n    /**\r\n     * Safely register event listeners on the root Vue node\r\n     * While Vue automatically removes listeners for individual components,\r\n     * when a component registers a listener on `$root` and is destroyed,\r\n     * this orphans a callback because the node is gone, but the `$root`\r\n     * does not clear the callback\r\n     *\r\n     * When registering a `$root` listener, it also registers the listener\r\n     * to be removed in the component's `beforeDestroy()` hook\r\n     *\r\n     * @param {string} event\r\n     * @param {function} callback\r\n     */\n    listenOnRoot: function listenOnRoot(event, callback) {\n      if (this.bvEventRoot) {\n        this.bvEventRoot.$on(event, callback);\n        this.registerRootListener(event, callback);\n      }\n    },\n    /**\r\n     * Safely register a `$once()` event listener on the root Vue node\r\n     * While Vue automatically removes listeners for individual components,\r\n     * when a component registers a listener on `$root` and is destroyed,\r\n     * this orphans a callback because the node is gone, but the `$root`\r\n     * does not clear the callback\r\n     *\r\n     * When registering a `$root` listener, it also registers the listener\r\n     * to be removed in the component's `beforeDestroy()` hook\r\n     *\r\n     * @param {string} event\r\n     * @param {function} callback\r\n     */\n    listenOnRootOnce: function listenOnRootOnce(event, callback) {\n      var _this2 = this;\n      if (this.bvEventRoot) {\n        var _callback = function _callback() {\n          _this2.unregisterRootListener(_callback); // eslint-disable-next-line node/no-callback-literal\n\n          callback.apply(void 0, arguments);\n        };\n        this.bvEventRoot.$once(event, _callback);\n        this.registerRootListener(event, _callback);\n      }\n    },\n    /**\r\n     * Safely unregister event listeners from the root Vue node\r\n     *\r\n     * @param {string} event\r\n     * @param {function} callback\r\n     */\n    listenOffRoot: function listenOffRoot(event, callback) {\n      this.unregisterRootListener(event, callback);\n      if (this.bvEventRoot) {\n        this.bvEventRoot.$off(event, callback);\n      }\n    },\n    /**\r\n     * Convenience method for calling `vm.$emit()` on `$root`\r\n     *\r\n     * @param {string} event\r\n     * @param {*} args\r\n     */\n    emitOnRoot: function emitOnRoot(event) {\n      if (this.bvEventRoot) {\n        var _this$bvEventRoot;\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        (_this$bvEventRoot = this.bvEventRoot).$emit.apply(_this$bvEventRoot, [event].concat(args));\n      }\n    }\n  }\n});","map":{"version":3,"names":["extend","arrayIncludes","keys","getEventRoot","PROP","listenOnRootMixin","computed","bvEventRoot","created","beforeDestroy","_this","forEach","event","callback","listenOffRoot","methods","registerRootListener","push","unregisterRootListener","filter","cb","listenOnRoot","$on","listenOnRootOnce","_this2","_callback","apply","arguments","$once","$off","emitOnRoot","_this$bvEventRoot","_len","length","args","Array","_key","$emit","concat"],"sources":["C:/Users/Pedro Uema/Desktop/thaiweb/front-end/node_modules/bootstrap-vue/esm/mixins/listen-on-root.js"],"sourcesContent":["import { extend } from '../vue';\r\nimport { arrayIncludes } from '../utils/array';\r\nimport { keys } from '../utils/object';\r\nimport { getEventRoot } from '../utils/get-event-root'; // --- Constants ---\r\n\r\nvar PROP = '$_rootListeners'; // --- Mixin ---\r\n// @vue/component\r\n\r\nexport var listenOnRootMixin = extend({\r\n  computed: {\r\n    bvEventRoot: function bvEventRoot() {\r\n      return getEventRoot(this);\r\n    }\r\n  },\r\n  created: function created() {\r\n    // Define non-reactive property\r\n    // Object of arrays, keyed by event name,\r\n    // where value is an array of callbacks\r\n    this[PROP] = {};\r\n  },\r\n  beforeDestroy: function beforeDestroy() {\r\n    var _this = this;\r\n\r\n    // Unregister all registered listeners\r\n    keys(this[PROP] || {}).forEach(function (event) {\r\n      _this[PROP][event].forEach(function (callback) {\r\n        _this.listenOffRoot(event, callback);\r\n      });\r\n    });\r\n    this[PROP] = null;\r\n  },\r\n  methods: {\r\n    registerRootListener: function registerRootListener(event, callback) {\r\n      if (this[PROP]) {\r\n        this[PROP][event] = this[PROP][event] || [];\r\n\r\n        if (!arrayIncludes(this[PROP][event], callback)) {\r\n          this[PROP][event].push(callback);\r\n        }\r\n      }\r\n    },\r\n    unregisterRootListener: function unregisterRootListener(event, callback) {\r\n      if (this[PROP] && this[PROP][event]) {\r\n        this[PROP][event] = this[PROP][event].filter(function (cb) {\r\n          return cb !== callback;\r\n        });\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Safely register event listeners on the root Vue node\r\n     * While Vue automatically removes listeners for individual components,\r\n     * when a component registers a listener on `$root` and is destroyed,\r\n     * this orphans a callback because the node is gone, but the `$root`\r\n     * does not clear the callback\r\n     *\r\n     * When registering a `$root` listener, it also registers the listener\r\n     * to be removed in the component's `beforeDestroy()` hook\r\n     *\r\n     * @param {string} event\r\n     * @param {function} callback\r\n     */\r\n    listenOnRoot: function listenOnRoot(event, callback) {\r\n      if (this.bvEventRoot) {\r\n        this.bvEventRoot.$on(event, callback);\r\n        this.registerRootListener(event, callback);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Safely register a `$once()` event listener on the root Vue node\r\n     * While Vue automatically removes listeners for individual components,\r\n     * when a component registers a listener on `$root` and is destroyed,\r\n     * this orphans a callback because the node is gone, but the `$root`\r\n     * does not clear the callback\r\n     *\r\n     * When registering a `$root` listener, it also registers the listener\r\n     * to be removed in the component's `beforeDestroy()` hook\r\n     *\r\n     * @param {string} event\r\n     * @param {function} callback\r\n     */\r\n    listenOnRootOnce: function listenOnRootOnce(event, callback) {\r\n      var _this2 = this;\r\n\r\n      if (this.bvEventRoot) {\r\n        var _callback = function _callback() {\r\n          _this2.unregisterRootListener(_callback); // eslint-disable-next-line node/no-callback-literal\r\n\r\n\r\n          callback.apply(void 0, arguments);\r\n        };\r\n\r\n        this.bvEventRoot.$once(event, _callback);\r\n        this.registerRootListener(event, _callback);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Safely unregister event listeners from the root Vue node\r\n     *\r\n     * @param {string} event\r\n     * @param {function} callback\r\n     */\r\n    listenOffRoot: function listenOffRoot(event, callback) {\r\n      this.unregisterRootListener(event, callback);\r\n\r\n      if (this.bvEventRoot) {\r\n        this.bvEventRoot.$off(event, callback);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Convenience method for calling `vm.$emit()` on `$root`\r\n     *\r\n     * @param {string} event\r\n     * @param {*} args\r\n     */\r\n    emitOnRoot: function emitOnRoot(event) {\r\n      if (this.bvEventRoot) {\r\n        var _this$bvEventRoot;\r\n\r\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n          args[_key - 1] = arguments[_key];\r\n        }\r\n\r\n        (_this$bvEventRoot = this.bvEventRoot).$emit.apply(_this$bvEventRoot, [event].concat(args));\r\n      }\r\n    }\r\n  }\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}