{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'InstrutoresAdmin',\n  data() {\n    return {\n      URL: \"http://localhost:4000\",\n      instrutores: [],\n      instrutorId: 0,\n      nome: '',\n      cpf: '',\n      cpfFormatado: 0,\n      editar: false\n    };\n  },\n  methods: {\n    abrirRelatorio() {\n      const win = window.open('http://localhost:8080/relatorioinstrutores');\n      win.focus();\n    },\n    getAllInstrutores() {\n      axios.get(`${this.URL}/instrutores`).then(response => {\n        this.instrutores = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    createInstrutor() {\n      this.formatarCPF();\n      console.log(this.validarCpf(this.cpfFormatado));\n      if (this.validarCpf(this.cpfFormatado)) {\n        const instrutor = {\n          nome_instrutor: this.nome,\n          cpf_instrutor: this.cpf\n        };\n        axios.post(`${this.URL}/instrutores`, instrutor).then(response => {\n          this.getAllInstrutores();\n        });\n        window.location.reload(true);\n        this.limpaDadosFormulario();\n      }\n    },\n    carregarDadosInstrutor(id) {\n      this.editar = true;\n      axios.get(`${this.URL}/instrutores/getone/` + id).then(response => {\n        const instrutor = response.data[0];\n        this.instrutorId = instrutor.id_instrutor;\n        this.nome = instrutor.nome_instrutor;\n        this.cpf = instrutor.cpf_instrutor;\n      });\n    },\n    salvarDados() {\n      this.formatarCPF();\n      console.log(this.validarCpf(this.cpfFormatado));\n      if (this.validarCpf(this.cpfFormatado)) {\n        const instrutor = {\n          nome_instrutor: this.nome,\n          cpf_instrutor: this.cpf\n        };\n        console.log(instrutor);\n        axios.put(`${this.URL}/instrutores/${this.instrutorId}`, instrutor).then(response => {\n          this.getAllInstrutores();\n        });\n        window.location.reload(true);\n        this.limpaDadosFormulario();\n      }\n    },\n    deleteInstrutor(id) {\n      axios.delete(this.URL + \"/instrutores/delete/\" + id).then(() => {\n        this.getAllInstrutores();\n      });\n    },\n    limpaDadosFormulario() {\n      this.instrutorId = 0;\n      this.nome = '';\n      this.cpf = '';\n      this.editar = false;\n    },\n    validarPrimeiroDigito(cpf) {\n      let sum = 0;\n      for (let i = 0; i < 9; i++) {\n        sum += cpf[i] * (10 - i);\n      }\n      const resto = sum * 10 % 11;\n      if (resto < 10) {\n        return cpf[9] == resto;\n      }\n      return cpf[9] == 0;\n    },\n    validarSegundoDigito(cpf) {\n      let sum = 0;\n      for (let i = 0; i < 10; i++) {\n        sum += cpf[i] * (11 - i);\n      }\n      const resto = sum * 10 % 11;\n      if (resto < 10) {\n        return cpf[10] == resto;\n      }\n      return cpf[10] == 0;\n    },\n    validarRepetido(cpf) {\n      const primeiro = cpf[0];\n      let diferente = false;\n      for (let i = 1; i < cpf.length; i++) {\n        if (cpf[i] != primeiro) {\n          diferente = true;\n        }\n      }\n      return diferente;\n    },\n    validarCpf(cpf) {\n      if (cpf.length != 11) {\n        return false;\n      }\n      if (!this.validarRepetido(cpf)) {\n        return false;\n      }\n      if (!this.validarPrimeiroDigito(cpf)) {\n        return false;\n      }\n      if (!this.validarSegundoDigito(cpf)) {\n        return false;\n      }\n      return true;\n    },\n    formatarCPF() {\n      this.cpfFormatado = this.cpf.replace(\"-\", \"\").replace(\".\", \"\").replace(\".\", \"\");\n      console.log(this.cpfFormatado);\n    },\n    ajuda() {\n      this.$swal.fire({\n        title: '<h2>Gerenciamento de instrutores</h2>',\n        icon: 'info',\n        html: '<h3>Cadastrar novo instrutor</h3>' + '<p><b>1- </b>Inserir todos os dados: nome do instrutor e CPF do instrutor.' + '<p><b>2- </b>Após todos dados inseridos clicar no botão \"+SALVAR\" para salvar cadastro ou \"CANCELAR\" ' + 'para limpar formulário.' + '<h3>Editar um instrutor</h3>' + '<p><b>1- </b>Na lista abaixo do formulário clicar no botão \"Editar\" na mesma linha correspondente ' + 'ao instrutor que deseja alterar o(s) dado(s).' + '<p><b>2- </b>Após clicar no botão \"Editar\" os dados do respectivo instrutor irá carregar no formulário acima, ' + 'após isso pode alterar o(s) dado(s) que deseja do mesmo.' + '<p><b>3- </b>Após editar, para salvar a(s) alteração(ôs) clicar em \"+SALVAR\" ou \"CANCELAR\" para cancelar alteração(ôs).' + '<h3>Excluir um instrutor</h3>' + '<b>IMPORTANTE </b><p>Para excluir um instrutor, nenhuma turma deve estar usando o mesmo.</p>' + '<p><b>1- </b>Na lista abaixo do formulário, clicar no botão \"Excluir\" na mesma linha correspondente ' + 'ao instrutor que deseja fazer a exclusão.' + '<p><b>2- </b>Após clicar no botão \"Excluir\" o instrutor será excluido permanentemente. Para recuperar o mesmo, deve ser ' + 'feito o passo a passo de \"Cadastrar novo instrutor\".'\n      });\n    }\n  },\n  mounted() {\n    this.getAllInstrutores();\n  }\n};","map":{"version":3,"names":["axios","name","data","URL","instrutores","instrutorId","nome","cpf","cpfFormatado","editar","methods","abrirRelatorio","win","window","open","focus","getAllInstrutores","get","then","response","catch","error","console","log","createInstrutor","formatarCPF","validarCpf","instrutor","nome_instrutor","cpf_instrutor","post","location","reload","limpaDadosFormulario","carregarDadosInstrutor","id","id_instrutor","salvarDados","put","deleteInstrutor","delete","validarPrimeiroDigito","sum","i","resto","validarSegundoDigito","validarRepetido","primeiro","diferente","length","replace","ajuda","$swal","fire","title","icon","html","mounted"],"sources":["C:\\Users\\Pedro Uema\\Desktop\\thaiweb\\front-end\\src\\components\\admin\\InstrutorAdmin.vue"],"sourcesContent":["<template>\r\n    <div class=\"instrutor-admin\">\r\n        <h3>Gerenciamento de Instrutores</h3>\r\n        <button type=\"button\" id=\"btnAjuda\" class=\"btn btn-primary btn-floating\" @click=\"ajuda()\">\r\n            <i class=\"fa fa-question-circle\"></i>\r\n        </button>\r\n        <form class=\"row g-3\">\r\n            <div class=\"col-md-6\">\r\n                <label for=\"inputEmail4\" class=\"form-label\">Nome do Instrutor</label>\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Nome do Instrutor\" v-model=\"nome\" >\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <label for=\"inputZip\" class=\"form-label\">CPF do Instrutor</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"inputZip\" placeholder=\"123.456.789-10\" v-model=\"cpf\" v-mask=\"'###.###.###-##'\">\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <button type=\"button\" id=\"button\" class=\"btn btn-primary\" @click=\"createInstrutor()\" v-show=\"!editar\">+ SALVAR</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" @click=\"salvarDados()\" v-show=\"editar\">+ EDITAR</button>\r\n                <button  type=\"button\" class=\"btn btn-danger\" @click=\"limpaDadosFormulario()\" >CANCELAR</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <br/>\r\n    <hr/>\r\n    <div class=\"administradores-table\">\r\n        <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n            <button class=\"btn btn-dark\" type=\"button\" v-on:click.prevent=\"abrirRelatorio()\"><i class=\"fa fa-print\"> </i> Imprimir</button>\r\n        </div>\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Nome</th>\r\n                    <th scope=\"col\">CPF</th>\r\n                    <th scope=\"col\">Ações</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody class=\"table-group-divider\">\r\n                <tr v-for=\"instrutor in instrutores\" :key=\"instrutor.id_instrutor\">\r\n                    <th scope=\"row\">{{ instrutor.nome_instrutor }}</th>\r\n                    <td>{{ instrutor.cpf_instrutor }}</td>\r\n                    <td>\r\n                        <button type=\"button\" class=\"btn btn-success\" @click=\"carregarDadosInstrutor(instrutor.id_instrutor)\">\r\n                            <i class=\"fa fa-pencil\"> </i>\r\n                             Editar\r\n                        </button>\r\n                        <button type=\"button\" class=\"btn btn-danger\" @click=\"deleteInstrutor(instrutor.id_instrutor)\">\r\n                            <i class=\"fa fa-trash\"> </i>\r\n                             Excluir\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\n\r\nexport default {\r\n    name: 'InstrutoresAdmin',\r\n    data() {\r\n        return{\r\n            URL: \"http://localhost:4000\",\r\n            instrutores: [],\r\n            instrutorId: 0,\r\n            nome: '',\r\n            cpf: '',\r\n            cpfFormatado: 0,\r\n            editar: false,\r\n        }\r\n    },\r\n    methods: {\r\n        abrirRelatorio(){\r\n            const win = window.open('http://localhost:8080/relatorioinstrutores')\r\n            win.focus()\r\n        },\r\n        getAllInstrutores() {\r\n            axios.get(`${this.URL}/instrutores`).then(response => {\r\n                this.instrutores = response.data\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        },\r\n        createInstrutor(){\r\n            this.formatarCPF()\r\n            console.log(this.validarCpf(this.cpfFormatado));\r\n            if(this.validarCpf(this.cpfFormatado))\r\n            {\r\n                const instrutor = {\r\n                    nome_instrutor: this.nome,\r\n                    cpf_instrutor: this.cpf,\r\n                    \r\n                }\r\n                axios.post(`${this.URL}/instrutores`, instrutor).then(response => {\r\n                    this.getAllInstrutores();\r\n                })\r\n                window.location.reload(true)\r\n                this.limpaDadosFormulario()\r\n            }\r\n        },\r\n        carregarDadosInstrutor(id){\r\n            this.editar = true;\r\n            axios.get(`${this.URL}/instrutores/getone/`+id).then(response => {\r\n                const instrutor = response.data[0]\r\n                this.instrutorId = instrutor.id_instrutor\r\n                this.nome = instrutor.nome_instrutor\r\n                this.cpf = instrutor.cpf_instrutor\r\n            })\r\n        },\r\n        salvarDados(){\r\n            this.formatarCPF()\r\n            console.log(this.validarCpf(this.cpfFormatado));\r\n            if(this.validarCpf(this.cpfFormatado))\r\n            {\r\n                const instrutor = {\r\n                    nome_instrutor: this.nome,\r\n                    cpf_instrutor: this.cpf,\r\n                }\r\n                console.log(instrutor);\r\n                axios.put(`${this.URL}/instrutores/${this.instrutorId}`, instrutor).then(response => {\r\n                    this.getAllInstrutores();\r\n                });\r\n                window.location.reload(true)\r\n                this.limpaDadosFormulario();\r\n            }\r\n        },\r\n        deleteInstrutor(id) {\r\n            axios.delete(this.URL+\"/instrutores/delete/\"+id).then(()=>{\r\n                this.getAllInstrutores()\r\n            })\r\n        },\r\n        limpaDadosFormulario(){\r\n            this.instrutorId = 0;\r\n            this.nome = '';\r\n            this.cpf = '';\r\n            this.editar = false;\r\n        },\r\n        validarPrimeiroDigito(cpf) {\r\n            let sum = 0;\r\n            for (let i = 0; i < 9; i++) {\r\n                sum += cpf[i] * (10 - i);\r\n            }\r\n            const resto = (sum * 10) % 11;\r\n            if (resto < 10) {\r\n                return cpf[9] == resto;\r\n            }\r\n            return cpf[9] == 0;\r\n        },\r\n        validarSegundoDigito(cpf) {\r\n        let sum = 0;\r\n        for (let i = 0; i < 10; i++) {\r\n            sum += cpf[i] * (11 - i);\r\n        }\r\n        const resto = (sum * 10) % 11;\r\n        if (resto < 10) {\r\n            return cpf[10] == resto;\r\n        }\r\n        return cpf[10] == 0;\r\n        },\r\n        validarRepetido(cpf) {\r\n            const primeiro = cpf[0];\r\n            let diferente = false;\r\n            for(let i = 1; i < cpf.length; i++) {\r\n                if(cpf[i] != primeiro) {\r\n                diferente = true;\r\n                }\r\n            }\r\n            return diferente;\r\n        },\r\n        validarCpf(cpf) {\r\n            if (cpf.length != 11) {\r\n                return false;\r\n            }\r\n            if(!this.validarRepetido(cpf)) {\r\n                return false;\r\n            }\r\n            if (!this.validarPrimeiroDigito(cpf)) {\r\n                return false;\r\n            }\r\n            if (!this.validarSegundoDigito(cpf)) {\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        formatarCPF(){\r\n            this.cpfFormatado = this.cpf.replace(\"-\", \"\").replace(\".\", \"\").replace(\".\", \"\")\r\n            console.log(this.cpfFormatado);\r\n        },\r\n        ajuda(){\r\n            this.$swal.fire({\r\n                title: '<h2>Gerenciamento de instrutores</h2>',\r\n                icon: 'info',\r\n                html:\r\n                    '<h3>Cadastrar novo instrutor</h3>'+\r\n                    '<p><b>1- </b>Inserir todos os dados: nome do instrutor e CPF do instrutor.'+\r\n                    '<p><b>2- </b>Após todos dados inseridos clicar no botão \"+SALVAR\" para salvar cadastro ou \"CANCELAR\" '+\r\n                    'para limpar formulário.'+\r\n                    '<h3>Editar um instrutor</h3>'+\r\n                    '<p><b>1- </b>Na lista abaixo do formulário clicar no botão \"Editar\" na mesma linha correspondente '+\r\n                    'ao instrutor que deseja alterar o(s) dado(s).'+\r\n                    '<p><b>2- </b>Após clicar no botão \"Editar\" os dados do respectivo instrutor irá carregar no formulário acima, '+\r\n                    'após isso pode alterar o(s) dado(s) que deseja do mesmo.'+\r\n                    '<p><b>3- </b>Após editar, para salvar a(s) alteração(ôs) clicar em \"+SALVAR\" ou \"CANCELAR\" para cancelar alteração(ôs).'+\r\n                    '<h3>Excluir um instrutor</h3>'+\r\n                    '<b>IMPORTANTE </b><p>Para excluir um instrutor, nenhuma turma deve estar usando o mesmo.</p>' +\r\n                    '<p><b>1- </b>Na lista abaixo do formulário, clicar no botão \"Excluir\" na mesma linha correspondente '+\r\n                    'ao instrutor que deseja fazer a exclusão.'+\r\n                    '<p><b>2- </b>Após clicar no botão \"Excluir\" o instrutor será excluido permanentemente. Para recuperar o mesmo, deve ser '+\r\n                    'feito o passo a passo de \"Cadastrar novo instrutor\".'\r\n            })\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getAllInstrutores();\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}