{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'AlunoAdmin',\n  data() {\n    return {\n      URL: \"http://localhost:4000\",\n      alunos: [],\n      planos: [],\n      turmas: [],\n      nome: '',\n      cpf: '',\n      dataNasc: '',\n      plano: 0,\n      turma: 0,\n      diaPag: 0\n    };\n  },\n  methods: {\n    getAllAlunos() {\n      axios.get(`${this.URL}/alunos`).then(response => {\n        this.alunos = response.data;\n        console.log(this.alunos);\n      });\n    },\n    createAluno() {\n      const aluno = {\n        nome_aluno: this.nome,\n        cpf_aluno: this.cpf,\n        datanasc_aluno: this.dataNasc,\n        id_plano: this.plano,\n        id_turma: this.turma,\n        diapag_aluno: this.diaPag\n      };\n      console.log(aluno);\n      axios.post(`${this.URL}/alunos`, aluno).then(response => {\n        console.log(response);\n        this.getAllAlunos();\n      });\n    },\n    updateAluno(id) {\n      axios.get(`${this.URL}/alunos/getone/` + id).then(response => {\n        const aluno = response.data[0];\n        this.nome = aluno.nome_aluno;\n        this.cpf = aluno.cpf_aluno;\n        this.dataNasc = this.formatDate(aluno.datanasc_aluno);\n        this.plano = aluno.id_plano;\n        this.turma = aluno.id_turma;\n        this.diaPag = aluno.diapag_aluno;\n        console.log(response.data[0]);\n      });\n    },\n    deleteAluno(id) {\n      axios.delete(this.URL + \"/alunos/delete/\" + id).then(() => {\n        this.getAllAlunos();\n      });\n    },\n    getAllPlanosOptions() {\n      axios.get(`${this.URL}/planos/options`).then(response => {\n        this.planos = response.data;\n        console.log(this.planos);\n      });\n    },\n    getAllTurmasOptions() {\n      axios.get(`${this.URL}/turmas/options`).then(response => {\n        this.turmas = response.data;\n        console.log(this.turmas);\n      });\n    },\n    formatDate(date) {\n      var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n      if (month.length < 2) month = '0' + month;\n      if (day.length < 2) day = '0' + day;\n      return [year, month, day].join('-');\n    }\n  },\n  mounted() {\n    this.getAllAlunos();\n    this.getAllPlanosOptions();\n    this.getAllTurmasOptions();\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","name","data","URL","alunos","planos","turmas","nome","cpf","dataNasc","plano","turma","diaPag","methods","getAllAlunos","get","then","response","console","log","createAluno","aluno","nome_aluno","cpf_aluno","datanasc_aluno","id_plano","id_turma","diapag_aluno","post","updateAluno","id","formatDate","deleteAluno","delete","getAllPlanosOptions","getAllTurmasOptions","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","mounted"],"sourceRoot":"","sources":["C:\\Users\\Pedro Japa\\Desktop\\gitHubRepositories\\thaiweb\\front-end\\src\\components\\admin\\AlunoAdmin.vue"],"sourcesContent":["<template>\r\n    <div class=\"aluno-admin\">\r\n        <h3>Gerênciamento de Alunos</h3>\r\n        <form class=\"row g-3\">\r\n            <div class=\"col-md-6\">\r\n                <label for=\"inputEmail4\" class=\"form-label\">Nome do Aluno</label>\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Nome do Aluno\" v-model=\"nome\">\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <label for=\"inputZip\" class=\"form-label\">CPF do Aluno</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"inputZip\" placeholder=\"123.456.789-10\" v-model=\"cpf\">\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <label for=\"inputZip\" class=\"form-label\">Data de Nascimento</label >\r\n                <input type=\"date\" class=\"form-control\" id=\"inputZip\" v-model=\"dataNasc\">\r\n            </div>\r\n            <div class=\"col-md-4\" >\r\n                <label for=\"inputState\" class=\"form-label\">Plano</label>\r\n                <select class=\"form-select\" v-model=\"plano\">\r\n                    <option value=\"\">Selecione o Plano</option>\r\n                    <option v-for=\"plano in planos\" :key=\"plano.id_plano\" v-bind:value=\"plano.id_plano\">\r\n                        {{ plano.nome_plano }}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <label for=\"inputState\" class=\"form-label\">Turma</label>\r\n                <select id=\"inputState\" class=\"form-select\" v-model=\"turma\">\r\n                    <option value=\"\">Selecione a Turma</option>\r\n                    <option v-for=\"turma in turmas\" :key=\"turma.id_turma\" v-bind:value=\"turma.id_turma\">\r\n                        {{ turma.nome_turma }}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <label for=\"inputZip\" class=\"form-label\">Dia Limite de Pagamento</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"inputZip\" placeholder=\"15\" v-model=\"diaPag\">\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <button type=\"button\" class=\"btn btn-primary\" @click=\"createAluno()\">+ SALVAR</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <hr/>\r\n    <div class=\"alunos-table\">\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">ID</th>\r\n                    <th scope=\"col\">Nome</th>\r\n                    <th scope=\"col\">CPF</th>\r\n                    <th scope=\"col\">Data Nascimento</th>\r\n                    <th scope=\"col\">Plano</th>\r\n                    <th scope=\"col\">Turma</th>\r\n                    <th scope=\"col\">Dia Pagamento</th>\r\n                    <th scope=\"col\">Ações</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody class=\"table-group-divider\">\r\n                <tr v-for=\"aluno in alunos\" :key=\"aluno.id_aluno\">\r\n                    <th scope=\"row\">{{ aluno.id_aluno }}</th>\r\n                    <td>{{ aluno.nome_aluno }}</td>\r\n                    <td>{{ aluno.cpf_aluno }}</td>\r\n                    <td>{{ aluno.datanasc_aluno }}</td>\r\n                    <td>{{ aluno.nome_plano }}</td>\r\n                    <td>{{ aluno.nome_turma }}</td>\r\n                    <td>{{ aluno.diapag_aluno }}</td>\r\n                    <td>\r\n                        <button type=\"button\" class=\"btn btn-success\" @click=\"updateAluno(aluno.id_aluno)\">\r\n                            <i class=\"fa fa-pencil\"> </i>\r\n                             Editar\r\n                        </button>\r\n                        <button type=\"button\" class=\"btn btn-danger\" @click=\"deleteAluno(aluno.id_aluno)\">\r\n                            <i class=\"fa fa-trash\"> </i>\r\n                             Excluir\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\n\r\nexport default {\r\n    name: 'AlunoAdmin',\r\n    data(){\r\n        return {\r\n            URL: \"http://localhost:4000\",\r\n            alunos: [],\r\n            planos: [],\r\n            turmas: [],\r\n            nome: '',\r\n            cpf: '',\r\n            dataNasc: '',\r\n            plano: 0,\r\n            turma: 0,\r\n            diaPag: 0,\r\n        }\r\n    },\r\n    methods: {\r\n        getAllAlunos() {\r\n            axios.get(`${this.URL}/alunos`).then(response => {\r\n                this.alunos = response.data\r\n                console.log(this.alunos);\r\n            })\r\n        },\r\n        createAluno() {\r\n            const aluno = {\r\n                nome_aluno: this.nome,\r\n                cpf_aluno: this.cpf,\r\n                datanasc_aluno: this.dataNasc,\r\n                id_plano: this.plano,\r\n                id_turma: this.turma,\r\n                diapag_aluno: this.diaPag,\r\n            }\r\n            console.log(aluno);\r\n            axios.post(`${this.URL}/alunos`, aluno).then(response => {\r\n                console.log(response);\r\n                this.getAllAlunos();\r\n            })\r\n        },\r\n        updateAluno(id){\r\n            axios.get(`${this.URL}/alunos/getone/`+id).then(response => {\r\n                const aluno = response.data[0]\r\n                this.nome = aluno.nome_aluno\r\n                this.cpf = aluno.cpf_aluno\r\n                this.dataNasc = this.formatDate(aluno.datanasc_aluno)\r\n                this.plano = aluno.id_plano\r\n                this.turma = aluno.id_turma\r\n                this.diaPag = aluno.diapag_aluno\r\n                console.log(response.data[0]);\r\n            })\r\n        },\r\n        deleteAluno(id) {\r\n            axios.delete(this.URL+\"/alunos/delete/\"+id).then(()=>{\r\n                this.getAllAlunos()\r\n            })\r\n        },\r\n        getAllPlanosOptions() {\r\n            axios.get(`${this.URL}/planos/options`).then(response => {\r\n                this.planos = response.data\r\n                console.log(this.planos);\r\n            })\r\n        },\r\n        getAllTurmasOptions() {\r\n            axios.get(`${this.URL}/turmas/options`).then(response => {\r\n                this.turmas = response.data\r\n                console.log(this.turmas);\r\n            })\r\n        },\r\n        formatDate(date) {\r\n            var d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n\r\n            if (month.length < 2) month = '0' + month;\r\n            if (day.length < 2) day = '0' + day;\r\n\r\n            return [year, month, day].join('-')\r\n        },\r\n    },\r\n    mounted() {\r\n        this.getAllAlunos();\r\n        this.getAllPlanosOptions();\r\n        this.getAllTurmasOptions();\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}